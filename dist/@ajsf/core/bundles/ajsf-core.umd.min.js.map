{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@ajsf/core/lib/shared/convert-schema-to-draft6.function.ts","ng://@ajsf/core/lib/shared/validator.functions.ts","ng://@ajsf/core/lib/shared/utility.functions.ts","ng://@ajsf/core/lib/framework-library/framework.ts","ng://@ajsf/core/lib/shared/jsonpointer.functions.ts","ng://@ajsf/core/lib/shared/format-regex.constants.ts","ng://@ajsf/core/lib/shared/json.validators.ts","ng://@ajsf/core/lib/shared/merge-schemas.function.ts","ng://@ajsf/core/lib/shared/json-schema.functions.ts","ng://@ajsf/core/lib/shared/form-group.functions.ts","ng://@ajsf/core/lib/shared/layout.functions.ts","ng://@ajsf/core/lib/locale-dates/en-US.ts","ng://@ajsf/core/lib/locale/en-validation-messages.ts","ng://@ajsf/core/lib/locale/fr-validation-messages.ts","ng://@ajsf/core/lib/locale/it-validation-messages.ts","ng://@ajsf/core/lib/locale/pt-validation-messages.ts","ng://@ajsf/core/lib/locale/zh-validation-messages.ts","ng://@ajsf/core/lib/json-schema-form.service.ts","ng://@ajsf/core/lib/widget-library/add-reference.component.ts","ng://@ajsf/core/lib/widget-library/button.component.ts","ng://@ajsf/core/lib/widget-library/checkbox.component.ts","ng://@ajsf/core/lib/widget-library/checkboxes.component.ts","ng://@ajsf/core/lib/widget-library/file.component.ts","ng://@ajsf/core/lib/widget-library/input.component.ts","ng://@ajsf/core/lib/widget-library/message.component.ts","ng://@ajsf/core/lib/widget-library/none.component.ts","ng://@ajsf/core/lib/widget-library/number.component.ts","ng://@ajsf/core/lib/widget-library/one-of.component.ts","ng://@ajsf/core/lib/widget-library/radios.component.ts","ng://@ajsf/core/lib/widget-library/root.component.ts","ng://@ajsf/core/lib/widget-library/section.component.ts","ng://@ajsf/core/lib/widget-library/select.component.ts","ng://@ajsf/core/lib/widget-library/select-framework.component.ts","ng://@ajsf/core/lib/widget-library/select-widget.component.ts","ng://@ajsf/core/lib/widget-library/submit.component.ts","ng://@ajsf/core/lib/widget-library/tabs.component.ts","ng://@ajsf/core/lib/widget-library/template.component.ts","ng://@ajsf/core/lib/widget-library/textarea.component.ts","ng://@ajsf/core/lib/widget-library/widget-library.service.ts","ng://@ajsf/core/lib/framework-library/framework-library.service.ts","ng://@ajsf/core/lib/json-schema-form.component.ts","ng://@ajsf/core/lib/framework-library/no-framework.component.ts","ng://@ajsf/core/lib/framework-library/no.framework.ts","ng://@ajsf/core/lib/widget-library/hidden.component.ts","ng://@ajsf/core/lib/widget-library/tab.component.ts","ng://@ajsf/core/lib/widget-library/orderable.directive.ts","ng://@ajsf/core/lib/widget-library/index.ts","ng://@ajsf/core/lib/widget-library/widget-library.module.ts","ng://@ajsf/core/lib/framework-library/no-framework.module.ts","ng://@ajsf/core/lib/json-schema-form.module.ts","ng://@ajsf/core/lib/shared/date.functions.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","convertSchemaToDraft6","schema","options","draft","changed","map","subSchema","newSchema","simpleTypes","$schema","test","contentEncoding","media","binaryEncoding","extends","allOf","disallow","not","type","anyOf","dependencies","keys","some","key","filter","forEach","maxDecimal","multipleOf","Math","pow","divisibleBy","minimum","minimumCanEqual","exclusiveMinimum","maximum","maximumCanEqual","exclusiveMaximum","properties","properties_1","requiredKeys_1","isArray","required","Set","optional","add","size","from","requires","dependencies_1","id","$id","slice","every","includes","addToDescription","description","arrayKeys","numberKeys","objectKeys","stringKeys","filterKeys_1","array","integer","number","object","string","all","newType","tslib_1.__spread","_b","tslib_1.__values","_c","default","typeSchema","newKey_1","subKey","cloneDeep","_executeValidators","control","validators","invert","validator","_executeAsyncValidators","_mergeObjects","objects","_i","mergedObject","objects_1","objects_1_1","currentObject","isObject","_d","currentValue","mergedValue","isDefined","isBoolean","xor","getType","_mergeErrors","arrayOfErrors","mergedErrors","isEmpty","hasValue","isString","isNumber","strict","isNaN","isInteger","option","item","isDate","toString","isMap","isSet","isType","console","isPrimitive","toJavaScriptType","types","strictIntegers","inArray","parseInt","parseFloat","toISOString","getTime","toSchemaType","testValue","isPromise","then","isObservable","subscribe","toObservable","observable","Observable","allIn","subItem","value1","value2","copy","errors","Map","fn","recurse","rootObject","forEachCopy","newObject","hasOwn","property","has","EQUALS","NOT_EQUALS","NOT_AN_EXPRESSION","isEqual","expressionType","ExpressionType","isNotEqual","mergeFilteredObject","targetObject","sourceObject","excludeKeys","keyFn","valFn","val","uniqueItems","items","returnItems","items_1","items_1_1","commonItems","arrays","arrays_1","arrays_1_1","fixTitle","name","toTitleCase","replace","input","forceWords","forceArray","split","forceArrayLower","w","toLowerCase","noInitialCase","toUpperCase","prevLastChar","trim","word","idx","search","newWord","forceWord","indexOf","Framework","widgets","stylesheets","scripts","Injectable","JsonPointer","get","pointer","startSlice","endSlice","getBoolean","undefined","keyArray","parse","subObject","keyArray_1","keyArray_1_1","evaluatedExpression","evaluateExpression","passed","logErrors","defaultResult","keysAndExpression","parseKeysAndExpression","ownCheckResult","doOwnCheckResult","keyAndValue","cleanedValue","charAt","evaluatedResult","performExpressionOnValue","propertyByKey","doComparisonByExpressionType","keyOrSubObjEmpty","expressionCandidate","isNotExpression","getKeyAndValueByExpressionType","getCopy","objectToCopy","forEachDeepCopy","getFirst","defaultValue","items_2","items_2_1","isJsonPointer","getFirstCopy","set","insert","match","lastKey","splice","setCopy","insertCopy","remove","pop","parentObject","dict","results","forEachDeep","bottomUp","v","newPointer","escape","unescape","compile","_this","join","toKey","isSubPointer","shortPointer","longPointer","trueIfMatching","invalid","toIndexedPointer","genericPointer","indexArray","arrayMap","indexedPointer_1","arrayIndex_1","stringIndex","indexArray_1","indexArray_1_1","pointerIndex","toGenericPointer","indexedPointer","pointerArray","subPointer","toControlPointer","dataPointer","formGroup","controlMustExist","dataPointerArray","controlPointerArray","subGroup","dataPointerArray_1","dataPointerArray_1_1","controls","toSchemaPointer","firstKey","shift","additionalProperties","arrayItem","additionalItems","toDataPointer","schemaPointer","pointerSuffix","secondKey","parseObjectPath","path","index","parts","nextDot","nextOB","quote","nextCB","RegExp","jsonSchemaFormatTests","date","time","date-time","email","hostname","ipv4","ipv6","uri","uri-reference","uri-template","url","uuid","color","json-pointer","relative-json-pointer","regex","str","JsonValidators","nullValidator","requiredType","enum","allowedValues","isEqualVal","enumValue","inputValue","const","requiredValue","constValue","minLength","minimumLength","currentLength","maxLength","maximumLength","pattern","wholeString","requiredPattern","format","requiredFormat","isValid","formatTest","minimumValue","exclusiveMinimumValue","maximumValue","exclusiveMaximumValue","multipleOfValue","minProperties","minimumProperties","currentProperties","maxProperties","maximumProperties","allErrors","requiringField","requiredFields","requiringFieldErrors","requiredFields_1","requiredFields_1_1","requiredField","requirements","requiredFieldErrors","requirement","parameter","exclusive","_a","minItems","minimumItems","currentItems","maxItems","maximumItems","unique","sorted","sort","duplicateItems","contains","requiredItem","composeAnyOf","presentValidators","composeOneOf","arrayOfValids","oneOf","composeAllOf","combinedErrors","composeNot","compose","composeAsync","observables","forkJoin","min","actual","max","requiredTrue","mergeSchemas","schemas","combinedSchema","schemas_1","schemas_1_1","x","y","combinedValue","schemaValue","item1","findIndex","item2","combinedObject","_e","_f","definitions","_g","_h","combinedDependency","schemaDependency","gcd_1","notAnyOf","reduce","notAnyOfArray","notSchema","_j","_k","patternProperties","combinedObject_1","combinedKey","nonMatchingKey","_l","_m","combinedTypes","buildSchemaFromLayout","layout","buildSchemaFromData","data","requireAllFields","isRoot","getFieldType","fieldType","null","buildSubSchema","a","getFromSchema","returnType","subSchemaFound","removeRecursiveReferences","recursiveRefMap","possibleReferences","toPointer","fromPointer","getInputType","layoutNode","controlType","checkInlineType","schemaType","getTitleMapFromOneOf","isInputRequired","listPointerArray","keyName","nextToLastKey","parentSchema","updateInputOptions","jsf","newOptions","fixUiKeys","formOptions","defautWidgetOptions","newTitleMap","flatList","titleMap","enumNames","typeahead","autocomplete","tagsinput","validateOnly","title","newTitleMap_1","group","getControlValidators","prop","ucLimit","eLimit","limit","resolveSchemaReferences","schemaRefLibrary","schemaRecursiveRefMap","dataRecursiveRefMap","refLinks","refMapSet","refMap","refLibrary","subSchemaPointer","refPointer","ref","getSubSchema","checkRefLinks","fromRef1","toRef1","fromRef2","toRef2","refLink","fromRef","toRef","compiledSchema","$ref","fromDataRef","toDataRef","tupleItems","usedPointers","refPointer_1","ptr","refSchema","extraKeys","combineAllOf","fixRequiredArrayProperties","mergedSchema","itemsObject_1","buildFormGroupTemplate","nodeValue","setValues","templatePointer","setSchemaDefaults","formValues","shortDataPointer","dataMap","nodeOptions","propertyKeys_1","unnamedKeys","fieldsRequired","setRequiredFields","additionalItemsPointer","schemaRefPointer","itemRecursive","itemRefPointer","templateRefLibrary","itemOptions","arrayLength","schemaRef","newTemplate","disabled","buildFormGroup","template","groupControls_1","newControl","FormGroup","FormArray","FormControl","formControlTemplate","requiredArray","formatFormData","formData","returnEmptyFields","fixErrors","formattedData","genericPointer_1","newValue","keySchemaType","getControl","returnGroup","formControl","buildLayout","widgetLibrary","hasSubmitButton","formLayout","mapLayout","layoutItem","layoutPointer","newNode","_id","uniqueId","widget","legend","validationMessages","errorMessages","validationMessage","code","newKey","nodeSchema","findDataPointer_1","searchItem","childDataPointer","lastIndexOf","buildLayoutFromSchema","LastKey","recursive_1","nodeDataMap","hasWidget","oldWidgetType","dataType","listItems","copyValueTo","getWidget","itemRefPointer_1","arrayItemGroup","unshift","arrayItemType","removable","orderable","arrayListItems","layoutRefLibrary","recursiveReference","getLayoutNode","addable","buttonText","fieldStyle","style","parentType","hasRootReference","fullLayout","forRefLibrary","dataPointerPrefix","newNodeType","lastDataKey","newSection_1","keySchemaPointer","innerItem","additionalItemsSchemaPointer","newItem","itemSchemaPointer","prefix","dataRef","newLayout","rootLayout","indexPad","realIndex","newLayoutPointer","itemsArray","tabs","refNode","newLayoutNode","subNode","buildTitleMap","enumList","fieldRequired","hasEmptyValue","name_1","name_2","name_3","name_4","name_5","groupTitleMap","longMonths","longDays","shortMonths","shortDays","enValidationMessages","log10","frValidationMessages","itValidationMessages","ptValidationMessages","zhValidationMessages","JsonSchemaFormService","JsonFormCompatibility","ReactJsonSchemaFormCompatibility","AngularSchemaFormCompatibility","tpldata","ajvOptions","jsonPointers","unknownFormats","ajv","Ajv","validateFormData","formGroupTemplate","framework","validData","ajvErrors","validationErrors","dataErrors","formValueSubscription","dataChanges","Subject","isValidChanges","validationErrorChanges","","language","defaultFormOptions","addSubmit","debug","disableInvalidSubmit","formDisabled","formReadonly","loadExternalAssets","pristine","success","supressPropertyTitles","setLayoutDefaults","validateOnRender","enableErrorState","enableSuccessState","feedback","feedbackOnRender","notitle","readonly","setLanguage","addMetaSchema","jsonDraft6","fr","en","it","pt","zh","getData","getSchema","getLayout","resetAllValues","buildRemoteError","value_1","value_1_1","err","setErrors","emitEvent","validateData","updateSubscriptions","compiledErrors","dataPath","message","compileAjvSchema","unsubscribe","valueChanges","formValue","setOptions","addOptions","defaultOptions","globalDefaults_1","suffix","removeSchema","setTpldata","newTpldata","parseText","text","values","parseExpression","expression","delim","term","setArrayItemTitle","parentCtx","childNode","parentNode","parentValues","getFormControlValue","isArrayItem","childValue","setItemTitle","ctx","getFormControlGroup","dataIndex","evaluateCondition","arrayIndex","result","condition","model","functionBody","Function","dynFn","initializeControl","bind","getFormControl","boundControl","controlName","getFormControlName","controlValue","controlDisabled","errorMessage","status","formatErrors","showErrors","getDataPointer","addSpaces","formatError","errorKey","errorProperty","updateValue","setValue","markAsDirty","targetControl","updateArrayCheckboxList","checkboxList","formArray","removeAt","checkboxList_1","checkboxList_1_1","checkboxItem","checked","newFormControl","getLayoutArray","getLayoutPointer","getParentNode","layoutIndex","isControlBound","controlGroup","addItem","newFormGroup","addControl","moveArrayItem","oldIndex","newIndex","at","updateValueAndValidity","layoutArray","removeItem","removeControl","args","providedIn","AddReferenceComponent","ngOnInit","defineProperty","event","preventDefault","parent","itemCount","Component","selector","changeDetection","ChangeDetectionStrategy","Default","Input","ButtonComponent","onClick","target","CheckboxComponent","trueValue","falseValue","CheckboxesComponent","layoutOrientation","formArray_1","FileComponent","InputComponent","autoCompleteList","MessageComponent","help","helpvalue","msg","NoneComponent","NumberComponent","allowNegative","allowDecimal","allowExponents","lastValidNumber","OneOfComponent","RadiosComponent","radiosList","RootComponent","isFlexItem","isDraggable","node","isOrderable","getFlexAttribute","attribute","flex","showWidget","SectionComponent","expanded","expandable","containerType","toggleExpanded","flexActive","displayFlex","display","SelectComponent","selectList","SelectFrameworkComponent","componentFactory","newComponent","updateComponent","ngOnChanges","widgetContainer","createComponent","resolveComponentFactory","instance","ComponentFactoryResolver","ViewChild","read","ViewContainerRef","static","SelectWidgetComponent","SubmitComponent","TabsComponent","selectedItem","showAddTab","updateControl","select","lastItem","setTabTitle","TemplateComponent","TextareaComponent","WidgetLibraryService","defaultWidget","none","root","select-framework","select-widget","password","tel","datetime","datetime-local","month","range","week","checkbox","file","hidden","image","radio","reset","submit","button","textarea","checkboxes","checkboxes-inline","checkboxbuttons","radios","radios-inline","radiobuttons","section","div","fieldset","one-of","tabarray","tab","html","advancedfieldset","authfieldset","optionfieldset","selectfieldset","conditional","actions","updown","alt-datetime","alt-date","wizard","textline","registeredWidgets","frameworkWidgets","activeWidgets","setActiveWidgets","widgetName","usedAliases","setDefaultWidget","widgetSet","hasDefaultWidget","registerWidget","unRegisterWidget","unRegisterAllWidgets","unRegisterFrameworkWidgets","registerFrameworkWidgets","getAllWidgets","FrameworkLibraryService","frameworks","activeFramework","frameworkLibrary","defaultFramework","setFramework","setLoadExternalAssets","hasFramework","getFramework","getFrameworkWidgets","getFrameworkStylesheets","load","getFrameworkScripts","Inject","decorators","JsonSchemaFormComponent","changeDetector","formInitialized","objectWrap","previousInputs","form","JSONSchema","UISchema","onChanges","EventEmitter","onSubmit","formSchema","dataChange","modelChange","formDataChange","ngModelChange","setFormValues","resetScriptsAndStyleSheets","document","querySelectorAll","element","loadScripts","script","scriptTag","createElement","src","async","setAttribute","getElementsByTagName","appendChild","loadStyleSheets","stylesheet","linkTag","rel","href","loadAssets","updateForm","changes","isFirstChange","previousValue","writeValue","formValuesInput","registerOnChange","onChange","registerOnTouched","onTouched","setDisabledState","isDisabled","initializeForm","changedInput","resetFirst","startsWith","newFormValues","activateForm","patchValue","submitForm","emit","ngModel","initializeOptions","initializeSchema","initializeLayout","initializeData","debugOutput","JSON","stringify","1","fixJsonFormOptions","alternateLayout","uiSchema","customFormItems","groupPointer","itemPointer","statusChanges","markForCheck","validateOnRender_1","touchAll_1","markAsTouched","OnPush","ChangeDetectorRef","Output","NoFrameworkComponent","NoFramework","_super","__","constructor","create","tslib_1.__extends","HiddenComponent","TabComponent","OrderableDirective","elementRef","ngZone","overParentElement","overChildElement","nativeElement","draggable","arrayLayoutIndex","runOutsideAngular","addEventListener","dataTransfer","effectAllowed","setData","sourceArrayIndex","sessionStorage","setItem","dropEffect","getItem","classList","destArrayIndex","Directive","ElementRef","NgZone","BASIC_WIDGETS","WidgetLibraryModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","declarations","exports","entryComponents","NoFrameworkModule","providers","provide","useClass","multi","JsonSchemaFormModule","toPromise","oldClasses","newClasses","badType","toSet","combinedSet","c","dateFormat","Date","getDate","year","getFullYear","getMonth","day","dayOfWeek","getDay","getOrdinal"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import cloneDeep from 'lodash/cloneDeep';\n\n/**\n * 'convertSchemaToDraft6' function\n *\n * Converts a JSON Schema from draft 1 through 4 format to draft 6 format\n *\n * Inspired by on geraintluff's JSON Schema 3 to 4 compatibility function:\n *   https://github.com/geraintluff/json-schema-compatibility\n * Also uses suggestions from AJV's JSON Schema 4 to 6 migration guide:\n *   https://github.com/epoberezkin/ajv/releases/tag/5.0.0\n * And additional details from the official JSON Schema documentation:\n *   http://json-schema.org\n *\n * //  { object } originalSchema - JSON schema (draft 1, 2, 3, 4, or 6)\n * //  { OptionObject = {} } options - options: parent schema changed?, schema draft number?\n * // { object } - JSON schema (draft 6)\n */\nexport interface OptionObject { changed?: boolean; draft?: number; }\nexport function convertSchemaToDraft6(schema, options: OptionObject = {}) {\n  let draft: number = options.draft || null;\n  let changed: boolean = options.changed || false;\n\n  if (typeof schema !== 'object') { return schema; }\n  if (typeof schema.map === 'function') {\n    return [...schema.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft }))];\n  }\n  let newSchema = { ...schema };\n  const simpleTypes = ['array', 'boolean', 'integer', 'null', 'number', 'object', 'string'];\n\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0\\d\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    draft = newSchema.$schema[30];\n  }\n\n  // Convert v1-v2 'contentEncoding' to 'media.binaryEncoding'\n  // Note: This is only used in JSON hyper-schema (not regular JSON schema)\n  if (newSchema.contentEncoding) {\n    newSchema.media = { binaryEncoding: newSchema.contentEncoding };\n    delete newSchema.contentEncoding;\n    changed = true;\n  }\n\n  // Convert v1-v3 'extends' to 'allOf'\n  if (typeof newSchema.extends === 'object') {\n    newSchema.allOf = typeof newSchema.extends.map === 'function' ?\n      newSchema.extends.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft })) :\n      [convertSchemaToDraft6(newSchema.extends, { changed, draft })];\n    delete newSchema.extends;\n    changed = true;\n  }\n\n  // Convert v1-v3 'disallow' to 'not'\n  if (newSchema.disallow) {\n    if (typeof newSchema.disallow === 'string') {\n      newSchema.not = { type: newSchema.disallow };\n    } else if (typeof newSchema.disallow.map === 'function') {\n      newSchema.not = {\n        anyOf: newSchema.disallow\n          .map(type => typeof type === 'object' ? type : { type })\n      };\n    }\n    delete newSchema.disallow;\n    changed = true;\n  }\n\n  // Convert v3 string 'dependencies' properties to arrays\n  if (typeof newSchema.dependencies === 'object' &&\n    Object.keys(newSchema.dependencies)\n      .some(key => typeof newSchema.dependencies[key] === 'string')\n  ) {\n    newSchema.dependencies = { ...newSchema.dependencies };\n    Object.keys(newSchema.dependencies)\n      .filter(key => typeof newSchema.dependencies[key] === 'string')\n      .forEach(key => newSchema.dependencies[key] = [newSchema.dependencies[key]]);\n    changed = true;\n  }\n\n  // Convert v1 'maxDecimal' to 'multipleOf'\n  if (typeof newSchema.maxDecimal === 'number') {\n    newSchema.multipleOf = 1 / Math.pow(10, newSchema.maxDecimal);\n    delete newSchema.divisibleBy;\n    changed = true;\n    if (!draft || draft === 2) { draft = 1; }\n  }\n\n  // Convert v2-v3 'divisibleBy' to 'multipleOf'\n  if (typeof newSchema.divisibleBy === 'number') {\n    newSchema.multipleOf = newSchema.divisibleBy;\n    delete newSchema.divisibleBy;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'minimumCanEqual' to 'exclusiveMinimum'\n  if (typeof newSchema.minimum === 'number' && newSchema.minimumCanEqual === false) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.minimumCanEqual === 'boolean') {\n    delete newSchema.minimumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMinimum' to numeric\n  if (typeof newSchema.minimum === 'number' && newSchema.exclusiveMinimum === true) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMinimum === 'boolean') {\n    delete newSchema.exclusiveMinimum;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'maximumCanEqual' to 'exclusiveMaximum'\n  if (typeof newSchema.maximum === 'number' && newSchema.maximumCanEqual === false) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.maximumCanEqual === 'boolean') {\n    delete newSchema.maximumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMaximum' to numeric\n  if (typeof newSchema.maximum === 'number' && newSchema.exclusiveMaximum === true) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMaximum === 'boolean') {\n    delete newSchema.exclusiveMaximum;\n    changed = true;\n  }\n\n  // Search object 'properties' for 'optional', 'required', and 'requires' items,\n  // and convert them into object 'required' arrays and 'dependencies' objects\n  if (typeof newSchema.properties === 'object') {\n    const properties = { ...newSchema.properties };\n    const requiredKeys = Array.isArray(newSchema.required) ?\n      new Set(newSchema.required) : new Set();\n\n    // Convert v1-v2 boolean 'optional' properties to 'required' array\n    if (draft === 1 || draft === 2 ||\n      Object.keys(properties).some(key => properties[key].optional === true)\n    ) {\n      Object.keys(properties)\n        .filter(key => properties[key].optional !== true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    // Convert v3 boolean 'required' properties to 'required' array\n    if (Object.keys(properties).some(key => properties[key].required === true)) {\n      Object.keys(properties)\n        .filter(key => properties[key].required === true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n    }\n\n    if (requiredKeys.size) { newSchema.required = Array.from(requiredKeys); }\n\n    // Convert v1-v2 array or string 'requires' properties to 'dependencies' object\n    if (Object.keys(properties).some(key => properties[key].requires)) {\n      const dependencies = typeof newSchema.dependencies === 'object' ?\n        { ...newSchema.dependencies } : {};\n      Object.keys(properties)\n        .filter(key => properties[key].requires)\n        .forEach(key => dependencies[key] =\n          typeof properties[key].requires === 'string' ?\n            [properties[key].requires] : properties[key].requires\n        );\n      newSchema.dependencies = dependencies;\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    newSchema.properties = properties;\n  }\n\n  // Revove v1-v2 boolean 'optional' key\n  if (typeof newSchema.optional === 'boolean') {\n    delete newSchema.optional;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Revove v1-v2 'requires' key\n  if (newSchema.requires) {\n    delete newSchema.requires;\n  }\n\n  // Revove v3 boolean 'required' key\n  if (typeof newSchema.required === 'boolean') {\n    delete newSchema.required;\n  }\n\n  // Convert id to $id\n  if (typeof newSchema.id === 'string' && !newSchema.$id) {\n    if (newSchema.id.slice(-1) === '#') {\n      newSchema.id = newSchema.id.slice(0, -1);\n    }\n    newSchema.$id = newSchema.id + '-CONVERTED-TO-DRAFT-06#';\n    delete newSchema.id;\n    changed = true;\n  }\n\n  // Check if v1-v3 'any' or object types will be converted\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    changed = true;\n  }\n\n  // If schema changed, update or remove $schema identifier\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0[1-4]\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    newSchema.$schema = 'http://json-schema.org/draft-06/schema#';\n    changed = true;\n  } else if (changed && typeof newSchema.$schema === 'string') {\n    const addToDescription = 'Converted to draft 6 from ' + newSchema.$schema;\n    if (typeof newSchema.description === 'string' && newSchema.description.length) {\n      newSchema.description += '\\n' + addToDescription;\n    } else {\n      newSchema.description = addToDescription;\n    }\n    delete newSchema.$schema;\n  }\n\n  // Convert v1-v3 'any' and object types\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    if (newSchema.type.length === 1) { newSchema.type = newSchema.type[0]; }\n    if (typeof newSchema.type === 'string') {\n      // Convert string 'any' type to array of all standard types\n      if (newSchema.type === 'any') {\n        newSchema.type = simpleTypes;\n        // Delete non-standard string type\n      } else {\n        delete newSchema.type;\n      }\n    } else if (typeof newSchema.type === 'object') {\n      if (typeof newSchema.type.every === 'function') {\n        // If array of strings, only allow standard types\n        if (newSchema.type.every(type => typeof type === 'string')) {\n          newSchema.type = newSchema.type.some(type => type === 'any') ?\n            newSchema.type = simpleTypes :\n            newSchema.type.filter(type => simpleTypes.includes(type));\n          // If type is an array with objects, convert the current schema to an 'anyOf' array\n        } else if (newSchema.type.length > 1) {\n          const arrayKeys = ['additionalItems', 'items', 'maxItems', 'minItems', 'uniqueItems', 'contains'];\n          const numberKeys = ['multipleOf', 'maximum', 'exclusiveMaximum', 'minimum', 'exclusiveMinimum'];\n          const objectKeys = ['maxProperties', 'minProperties', 'required', 'additionalProperties',\n            'properties', 'patternProperties', 'dependencies', 'propertyNames'];\n          const stringKeys = ['maxLength', 'minLength', 'pattern', 'format'];\n          const filterKeys = {\n            'array': [...numberKeys, ...objectKeys, ...stringKeys],\n            'integer': [...arrayKeys, ...objectKeys, ...stringKeys],\n            'number': [...arrayKeys, ...objectKeys, ...stringKeys],\n            'object': [...arrayKeys, ...numberKeys, ...stringKeys],\n            'string': [...arrayKeys, ...numberKeys, ...objectKeys],\n            'all': [...arrayKeys, ...numberKeys, ...objectKeys, ...stringKeys],\n          };\n          const anyOf = [];\n          for (const type of newSchema.type) {\n            const newType = typeof type === 'string' ? { type } : { ...type };\n            Object.keys(newSchema)\n              .filter(key => !newType.hasOwnProperty(key) &&\n                ![...(filterKeys[newType.type] || filterKeys.all), 'type', 'default']\n                  .includes(key)\n              )\n              .forEach(key => newType[key] = newSchema[key]);\n            anyOf.push(newType);\n          }\n          newSchema = newSchema.hasOwnProperty('default') ?\n            { anyOf, default: newSchema.default } : { anyOf };\n          // If type is an object, merge it with the current schema\n        } else {\n          const typeSchema = newSchema.type;\n          delete newSchema.type;\n          Object.assign(newSchema, typeSchema);\n        }\n      }\n    } else {\n      delete newSchema.type;\n    }\n  }\n\n  // Convert sub schemas\n  Object.keys(newSchema)\n    .filter(key => typeof newSchema[key] === 'object')\n    .forEach(key => {\n      if (\n        ['definitions', 'dependencies', 'properties', 'patternProperties']\n          .includes(key) && typeof newSchema[key].map !== 'function'\n      ) {\n        const newKey = {};\n        Object.keys(newSchema[key]).forEach(subKey => newKey[subKey] =\n          convertSchemaToDraft6(newSchema[key][subKey], { changed, draft })\n        );\n        newSchema[key] = newKey;\n      } else if (\n        ['items', 'additionalItems', 'additionalProperties',\n          'allOf', 'anyOf', 'oneOf', 'not'].includes(key)\n      ) {\n        newSchema[key] = convertSchemaToDraft6(newSchema[key], { changed, draft });\n      } else {\n        newSchema[key] = cloneDeep(newSchema[key]);\n      }\n    });\n\n  return newSchema;\n}\n","import { AbstractControl } from '@angular/forms';\nimport { from, Observable } from 'rxjs';\n\n/**\n * Validator utility function library:\n *\n * Validator and error utilities:\n *   _executeValidators, _executeAsyncValidators, _mergeObjects, _mergeErrors\n *\n * Individual value checking:\n *   isDefined, hasValue, isEmpty\n *\n * Individual type checking:\n *   isString, isNumber, isInteger, isBoolean, isFunction, isObject, isArray,\n *   isMap, isSet, isPromise, isObservable\n *\n * Multiple type checking and fixing:\n *   getType, isType, isPrimitive, toJavaScriptType, toSchemaType,\n *   _toPromise, toObservable\n *\n * Utility functions:\n *   inArray, xor\n *\n * Typescript types and interfaces:\n *   SchemaPrimitiveType, SchemaType, JavaScriptPrimitiveType, JavaScriptType,\n *   PrimitiveValue, PlainObject, IValidatorFn, AsyncIValidatorFn\n *\n * Note: 'IValidatorFn' is short for 'invertable validator function',\n *   which is a validator functions that accepts an optional second\n *   argument which, if set to TRUE, causes the validator to perform\n *   the opposite of its original function.\n */\n\nexport type SchemaPrimitiveType =\n  'string' | 'number' | 'integer' | 'boolean' | 'null';\nexport type SchemaType =\n  'string' | 'number' | 'integer' | 'boolean' | 'null' | 'object' | 'array';\nexport type JavaScriptPrimitiveType =\n  'string' | 'number' | 'boolean' | 'null' | 'undefined';\nexport type JavaScriptType =\n  'string' | 'number' | 'boolean' | 'null' | 'undefined' | 'object' | 'array' |\n  'map' | 'set' | 'arguments' | 'date' | 'error' | 'function' | 'json' |\n  'math' | 'regexp'; // Note: this list is incomplete\nexport type PrimitiveValue = string | number | boolean | null | undefined;\nexport interface PlainObject { [k: string]: any; }\n\nexport type IValidatorFn = (c: AbstractControl, i?: boolean) => PlainObject;\nexport type AsyncIValidatorFn = (c: AbstractControl, i?: boolean) => any;\n\n/**\n * '_executeValidators' utility function\n *\n * Validates a control against an array of validators, and returns\n * an array of the same length containing a combination of error messages\n * (from invalid validators) and null values (from valid validators)\n *\n * //  { AbstractControl } control - control to validate\n * //  { IValidatorFn[] } validators - array of validators\n * //  { boolean } invert - invert?\n * // { PlainObject[] } - array of nulls and error message\n */\nexport function _executeValidators(control, validators, invert = false) {\n  return validators.map(validator => validator(control, invert));\n}\n\n/**\n * '_executeAsyncValidators' utility function\n *\n * Validates a control against an array of async validators, and returns\n * an array of observabe results of the same length containing a combination of\n * error messages (from invalid validators) and null values (from valid ones)\n *\n * //  { AbstractControl } control - control to validate\n * //  { AsyncIValidatorFn[] } validators - array of async validators\n * //  { boolean } invert - invert?\n * //  - array of observable nulls and error message\n */\nexport function _executeAsyncValidators(control, validators, invert = false) {\n  return validators.map(validator => validator(control, invert));\n}\n\n/**\n * '_mergeObjects' utility function\n *\n * Recursively Merges one or more objects into a single object with combined keys.\n * Automatically detects and ignores null and undefined inputs.\n * Also detects duplicated boolean 'not' keys and XORs their values.\n *\n * //  { PlainObject[] } objects - one or more objects to merge\n * // { PlainObject } - merged object\n */\nexport function _mergeObjects(...objects) {\n  const mergedObject: PlainObject = { };\n  for (const currentObject of objects) {\n    if (isObject(currentObject)) {\n      for (const key of Object.keys(currentObject)) {\n        const currentValue = currentObject[key];\n        const mergedValue = mergedObject[key];\n        mergedObject[key] = !isDefined(mergedValue) ? currentValue :\n          key === 'not' && isBoolean(mergedValue, 'strict') &&\n            isBoolean(currentValue, 'strict') ? xor(mergedValue, currentValue) :\n          getType(mergedValue) === 'object' && getType(currentValue) === 'object' ?\n            _mergeObjects(mergedValue, currentValue) :\n            currentValue;\n      }\n    }\n  }\n  return mergedObject;\n}\n\n/**\n * '_mergeErrors' utility function\n *\n * Merges an array of objects.\n * Used for combining the validator errors returned from 'executeValidators'\n *\n * //  { PlainObject[] } arrayOfErrors - array of objects\n * // { PlainObject } - merged object, or null if no usable input objectcs\n */\nexport function _mergeErrors(arrayOfErrors) {\n  const mergedErrors = _mergeObjects(...arrayOfErrors);\n  return isEmpty(mergedErrors) ? null : mergedErrors;\n}\n\n/**\n * 'isDefined' utility function\n *\n * Checks if a variable contains a value of any type.\n * Returns true even for otherwise 'falsey' values of 0, '', and false.\n *\n * //   value - the value to check\n * // { boolean } - false if undefined or null, otherwise true\n */\nexport function isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\n/**\n * 'hasValue' utility function\n *\n * Checks if a variable contains a value.\n * Returs false for null, undefined, or a zero-length strng, '',\n * otherwise returns true.\n * (Stricter than 'isDefined' because it also returns false for '',\n * though it stil returns true for otherwise 'falsey' values 0 and false.)\n *\n * //   value - the value to check\n * // { boolean } - false if undefined, null, or '', otherwise true\n */\nexport function hasValue(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\n/**\n * 'isEmpty' utility function\n *\n * Similar to !hasValue, but also returns true for empty arrays and objects.\n *\n * //   value - the value to check\n * // { boolean } - false if undefined, null, or '', otherwise true\n */\nexport function isEmpty(value) {\n  if (isArray(value)) { return !value.length; }\n  if (isObject(value)) { return !Object.keys(value).length; }\n  return value === undefined || value === null || value === '';\n}\n\n/**\n * 'isString' utility function\n *\n * Checks if a value is a string.\n *\n * //   value - the value to check\n * // { boolean } - true if string, false if not\n */\nexport function isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * 'isNumber' utility function\n *\n * Checks if a value is a regular number, numeric string, or JavaScript Date.\n *\n * //   value - the value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // { boolean } - true if number, false if not\n */\nexport function isNumber(value, strict: any = false) {\n  if (strict && typeof value !== 'number') { return false; }\n  return !isNaN(value) && value !== value / 0;\n}\n\n/**\n * 'isInteger' utility function\n *\n * Checks if a value is an integer.\n *\n * //   value - the value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // {boolean } - true if number, false if not\n */\nexport function isInteger(value, strict: any = false) {\n  if (strict && typeof value !== 'number') { return false; }\n  return !isNaN(value) &&  value !== value / 0 && value % 1 === 0;\n}\n\n/**\n * 'isBoolean' utility function\n *\n * Checks if a value is a boolean.\n *\n * //   value - the value to check\n * //  { any = null } option - if 'strict', also checks JavaScript type\n *                              if TRUE or FALSE, checks only for that value\n * // { boolean } - true if boolean, false if not\n */\nexport function isBoolean(value, option: any = null) {\n  if (option === 'strict') { return value === true || value === false; }\n  if (option === true) {\n    return value === true || value === 1 || value === 'true' || value === '1';\n  }\n  if (option === false) {\n    return value === false || value === 0 || value === 'false' || value === '0';\n  }\n  return value === true || value === 1 || value === 'true' || value === '1' ||\n    value === false || value === 0 || value === 'false' || value === '0';\n}\n\nexport function isFunction(item: any): boolean {\n  return typeof item === 'function';\n}\n\nexport function isObject(item: any): boolean {\n  return item !== null && typeof item === 'object';\n}\n\nexport function isArray(item: any): boolean {\n  return Array.isArray(item);\n}\n\nexport function isDate(item: any): boolean {\n  return !!item && Object.prototype.toString.call(item) === '[object Date]';\n}\n\nexport function isMap(item: any): boolean {\n  return !!item && Object.prototype.toString.call(item) === '[object Map]';\n}\n\nexport function isSet(item: any): boolean {\n  return !!item && Object.prototype.toString.call(item) === '[object Set]';\n}\n\nexport function isSymbol(item: any): boolean {\n  return typeof item === 'symbol';\n}\n\n/**\n * 'getType' function\n *\n * Detects the JSON Schema Type of a value.\n * By default, detects numbers and integers even if formatted as strings.\n * (So all integers are also numbers, and any number may also be a string.)\n * However, it only detects true boolean values (to detect boolean values\n * in non-boolean formats, use isBoolean() instead).\n *\n * If passed a second optional parameter of 'strict', it will only detect\n * numbers and integers if they are formatted as JavaScript numbers.\n *\n * Examples:\n * getType('10.5') = 'number'\n * getType(10.5) = 'number'\n * getType('10') = 'integer'\n * getType(10) = 'integer'\n * getType('true') = 'string'\n * getType(true) = 'boolean'\n * getType(null) = 'null'\n * getType({ }) = 'object'\n * getType([]) = 'array'\n *\n * getType('10.5', 'strict') = 'string'\n * getType(10.5, 'strict') = 'number'\n * getType('10', 'strict') = 'string'\n * getType(10, 'strict') = 'integer'\n * getType('true', 'strict') = 'string'\n * getType(true, 'strict') = 'boolean'\n *\n * //   value - value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // { SchemaType }\n */\nexport function getType(value, strict: any = false) {\n  if (!isDefined(value)) { return 'null'; }\n  if (isArray(value)) { return 'array'; }\n  if (isObject(value)) { return 'object'; }\n  if (isBoolean(value, 'strict')) { return 'boolean'; }\n  if (isInteger(value, strict)) { return 'integer'; }\n  if (isNumber(value, strict)) { return 'number'; }\n  if (isString(value) || (!strict && isDate(value))) { return 'string'; }\n  return null;\n}\n\n/**\n * 'isType' function\n *\n * Checks wether an input (probably string) value contains data of\n * a specified JSON Schema type\n *\n * //  { PrimitiveValue } value - value to check\n * //  { SchemaPrimitiveType } type - type to check\n * // { boolean }\n */\nexport function isType(value, type) {\n  switch (type) {\n    case 'string':\n      return isString(value) || isDate(value);\n    case 'number':\n      return isNumber(value);\n    case 'integer':\n      return isInteger(value);\n    case 'boolean':\n      return isBoolean(value);\n    case 'null':\n      return !hasValue(value);\n    default:\n      console.error(`isType error: \"${type}\" is not a recognized type.`);\n      return null;\n  }\n}\n\n/**\n * 'isPrimitive' function\n *\n * Checks wether an input value is a JavaScript primitive type:\n * string, number, boolean, or null.\n *\n * //   value - value to check\n * // { boolean }\n */\nexport function isPrimitive(value) {\n  return (isString(value) || isNumber(value) ||\n    isBoolean(value, 'strict') || value === null);\n}\n\n/**\n * 'toJavaScriptType' function\n *\n * Converts an input (probably string) value to a JavaScript primitive type -\n * 'string', 'number', 'boolean', or 'null' - before storing in a JSON object.\n *\n * Does not coerce values (other than null), and only converts the types\n * of values that would otherwise be valid.\n *\n * If the optional third parameter 'strictIntegers' is TRUE, and the\n * JSON Schema type 'integer' is specified, it also verifies the input value\n * is an integer and, if it is, returns it as a JaveScript number.\n * If 'strictIntegers' is FALSE (or not set) the type 'integer' is treated\n * exactly the same as 'number', and allows decimals.\n *\n * Valid Examples:\n * toJavaScriptType('10',   'number' ) = 10   // '10'   is a number\n * toJavaScriptType('10',   'integer') = 10   // '10'   is also an integer\n * toJavaScriptType( 10,    'integer') = 10   //  10    is still an integer\n * toJavaScriptType( 10,    'string' ) = '10' //  10    can be made into a string\n * toJavaScriptType('10.5', 'number' ) = 10.5 // '10.5' is a number\n *\n * Invalid Examples:\n * toJavaScriptType('10.5', 'integer') = null // '10.5' is not an integer\n * toJavaScriptType( 10.5,  'integer') = null //  10.5  is still not an integer\n *\n * //  { PrimitiveValue } value - value to convert\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - types to convert to\n * //  { boolean = false } strictIntegers - if FALSE, treat integers as numbers\n * // { PrimitiveValue }\n */\nexport function toJavaScriptType(value, types, strictIntegers = true)  {\n  if (!isDefined(value)) { return null; }\n  if (isString(types)) { types = [types]; }\n  if (strictIntegers && inArray('integer', types)) {\n    if (isInteger(value, 'strict')) { return value; }\n    if (isInteger(value)) { return parseInt(value, 10); }\n  }\n  if (inArray('number', types) || (!strictIntegers && inArray('integer', types))) {\n    if (isNumber(value, 'strict')) { return value; }\n    if (isNumber(value)) { return parseFloat(value); }\n  }\n  if (inArray('string', types)) {\n    if (isString(value)) { return value; }\n    // If value is a date, and types includes 'string',\n    // convert the date to a string\n    if (isDate(value)) { return value.toISOString().slice(0, 10); }\n    if (isNumber(value)) { return value.toString(); }\n  }\n  // If value is a date, and types includes 'integer' or 'number',\n  // but not 'string', convert the date to a number\n  if (isDate(value) && (inArray('integer', types) || inArray('number', types))) {\n    return value.getTime();\n  }\n  if (inArray('boolean', types)) {\n    if (isBoolean(value, true)) { return true; }\n    if (isBoolean(value, false)) { return false; }\n  }\n  return null;\n}\n\n/**\n * 'toSchemaType' function\n *\n * Converts an input (probably string) value to the \"best\" JavaScript\n * equivalent available from an allowed list of JSON Schema types, which may\n * contain 'string', 'number', 'integer', 'boolean', and/or 'null'.\n * If necssary, it does progressively agressive type coersion.\n * It will not return null unless null is in the list of allowed types.\n *\n * Number conversion examples:\n * toSchemaType('10', ['number','integer','string']) = 10 // integer\n * toSchemaType('10', ['number','string']) = 10 // number\n * toSchemaType('10', ['string']) = '10' // string\n * toSchemaType('10.5', ['number','integer','string']) = 10.5 // number\n * toSchemaType('10.5', ['integer','string']) = '10.5' // string\n * toSchemaType('10.5', ['integer']) = 10 // integer\n * toSchemaType(10.5, ['null','boolean','string']) = '10.5' // string\n * toSchemaType(10.5, ['null','boolean']) = true // boolean\n *\n * String conversion examples:\n * toSchemaType('1.5x', ['boolean','number','integer','string']) = '1.5x' // string\n * toSchemaType('1.5x', ['boolean','number','integer']) = '1.5' // number\n * toSchemaType('1.5x', ['boolean','integer']) = '1' // integer\n * toSchemaType('1.5x', ['boolean']) = true // boolean\n * toSchemaType('xyz', ['number','integer','boolean','null']) = true // boolean\n * toSchemaType('xyz', ['number','integer','null']) = null // null\n * toSchemaType('xyz', ['number','integer']) = 0 // number\n *\n * Boolean conversion examples:\n * toSchemaType('1', ['integer','number','string','boolean']) = 1 // integer\n * toSchemaType('1', ['number','string','boolean']) = 1 // number\n * toSchemaType('1', ['string','boolean']) = '1' // string\n * toSchemaType('1', ['boolean']) = true // boolean\n * toSchemaType('true', ['number','string','boolean']) = 'true' // string\n * toSchemaType('true', ['boolean']) = true // boolean\n * toSchemaType('true', ['number']) = 0 // number\n * toSchemaType(true, ['number','string','boolean']) = true // boolean\n * toSchemaType(true, ['number','string']) = 'true' // string\n * toSchemaType(true, ['number']) = 1 // number\n *\n * //  { PrimitiveValue } value - value to convert\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - allowed types to convert to\n * // { PrimitiveValue }\n */\nexport function toSchemaType(value, types) {\n  if (!isArray(<SchemaPrimitiveType>types)) {\n    types = <SchemaPrimitiveType[]>[types];\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('null') && !hasValue(value)) {\n    return null;\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && !isBoolean(value, 'strict')) {\n    return value;\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) {\n    const testValue = toJavaScriptType(value, 'integer');\n    if (testValue !== null) { return +testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('number')) {\n    const testValue = toJavaScriptType(value, 'number');\n    if (testValue !== null) { return +testValue; }\n  }\n  if (\n    (isString(value) || isNumber(value, 'strict')) &&\n    (<SchemaPrimitiveType[]>types).includes('string')\n  ) { // Convert number to string\n    return toJavaScriptType(value, 'string');\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && isBoolean(value)) {\n    return toJavaScriptType(value, 'boolean');\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('string')) { // Convert null & boolean to string\n    if (value === null) { return ''; }\n    const testValue = toJavaScriptType(value, 'string');\n    if (testValue !== null) { return testValue; }\n  }\n  if ((\n    (<SchemaPrimitiveType[]>types).includes('number') ||\n    (<SchemaPrimitiveType[]>types).includes('integer'))\n  ) {\n    if (value === true) { return 1; } // Convert boolean & null to number\n    if (value === false || value === null || value === '') { return 0; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('number')) { // Convert mixed string to number\n    const testValue = parseFloat(<string>value);\n    if (!!testValue) { return testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) { // Convert string or number to integer\n    const testValue = parseInt(<string>value, 10);\n    if (!!testValue) { return testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean')) { // Convert anything to boolean\n    return !!value;\n  }\n  if ((\n      (<SchemaPrimitiveType[]>types).includes('number') ||\n      (<SchemaPrimitiveType[]>types).includes('integer')\n    ) && !(<SchemaPrimitiveType[]>types).includes('null')\n  ) {\n    return 0; // If null not allowed, return 0 for non-convertable values\n  }\n}\n\n/**\n * 'isPromise' function\n *\n * //   object\n * // { boolean }\n */\nexport function isPromise(object): object is Promise<any> {\n  return !!object && typeof object.then === 'function';\n}\n\n/**\n * 'isObservable' function\n *\n * //   object\n * // { boolean }\n */\nexport function isObservable(object): object is Observable<any> {\n  return !!object && typeof object.subscribe === 'function';\n}\n\n/**\n * '_toPromise' function\n *\n * //  { object } object\n * // { Promise<any> }\n */\nexport function _toPromise(object): Promise<any> {\n  return isPromise(object) ? object : object.toPromise();\n}\n\n/**\n * 'toObservable' function\n *\n * //  { object } object\n * // { Observable<any> }\n */\nexport function toObservable(object): Observable<any> {\n  const observable = isPromise(object) ? from(object) : object;\n  if (isObservable(observable)) { return observable; }\n  console.error('toObservable error: Expected validator to return Promise or Observable.');\n  return new Observable();\n}\n\n/**\n * 'inArray' function\n *\n * Searches an array for an item, or one of a list of items, and returns true\n * as soon as a match is found, or false if no match.\n *\n * If the optional third parameter allIn is set to TRUE, and the item to find\n * is an array, then the function returns true only if all elements from item\n * are found in the array list, and false if any element is not found. If the\n * item to find is not an array, setting allIn to TRUE has no effect.\n *\n * //  { any|any[] } item - the item to search for\n * //   array - the array to search\n * //  { boolean = false } allIn - if TRUE, all items must be in array\n * // { boolean } - true if item(s) in array, false otherwise\n */\nexport function inArray(item, array, allIn = false) {\n  if (!isDefined(item) || !isArray(array)) { return false; }\n  return isArray(item) ?\n    item[allIn ? 'every' : 'some'](subItem => array.includes(subItem)) :\n    array.includes(item);\n}\n\n/**\n * 'xor' utility function - exclusive or\n *\n * Returns true if exactly one of two values is truthy.\n *\n * //   value1 - first value to check\n * //   value2 - second value to check\n * // { boolean } - true if exactly one input value is truthy, false if not\n */\nexport function xor(value1, value2) {\n  return (!!value1 && !value2) || (!value1 && !!value2);\n}\n","import {hasValue, inArray, isArray, isDefined, isEmpty, isMap, isObject, isSet, isString, PlainObject} from './validator.functions';\n\n/**\n * Utility function library:\n *\n * addClasses, copy, forEach, forEachCopy, hasOwn, mergeFilteredObject,\n * uniqueItems, commonItems, fixTitle, toTitleCase\n*/\n\n/**\n * 'addClasses' function\n *\n * Merges two space-delimited lists of CSS classes and removes duplicates.\n *\n * // {string | string[] | Set<string>} oldClasses\n * // {string | string[] | Set<string>} newClasses\n * // {string | string[] | Set<string>} - Combined classes\n */\nexport function addClasses(\n  oldClasses: string | string[] | Set<string>,\n  newClasses: string | string[] | Set<string>\n): string | string[] | Set<string> {\n  const badType = i => !isSet(i) && !isArray(i) && !isString(i);\n  if (badType(newClasses)) { return oldClasses; }\n  if (badType(oldClasses)) { oldClasses = ''; }\n  const toSet = i => isSet(i) ? i : isArray(i) ? new Set(i) : new Set(i.split(' '));\n  const combinedSet: Set<any> = toSet(oldClasses);\n  const newSet: Set<any> = toSet(newClasses);\n  newSet.forEach(c => combinedSet.add(c));\n  if (isSet(oldClasses)) { return combinedSet; }\n  if (isArray(oldClasses)) { return Array.from(combinedSet); }\n  return Array.from(combinedSet).join(' ');\n}\n\n/**\n * 'copy' function\n *\n * Makes a shallow copy of a JavaScript object, array, Map, or Set.\n * If passed a JavaScript primitive value (string, number, boolean, or null),\n * it returns the value.\n *\n * // {Object|Array|string|number|boolean|null} object - The object to copy\n * // {boolean = false} errors - Show errors?\n * // {Object|Array|string|number|boolean|null} - The copied object\n */\nexport function copy(object: any, errors = false): any {\n  if (typeof object !== 'object' || object === null) { return object; }\n  if (isMap(object))    { return new Map(object); }\n  if (isSet(object))    { return new Set(object); }\n  if (isArray(object))  { return [ ...object ];   }\n  if (isObject(object)) { return { ...object };   }\n  if (errors) {\n    console.error('copy error: Object to copy must be a JavaScript object or value.');\n  }\n  return object;\n}\n\n/**\n * 'forEach' function\n *\n * Iterates over all items in the first level of an object or array\n * and calls an iterator funciton on each item.\n *\n * The iterator function is called with four values:\n * 1. The current item's value\n * 2. The current item's key\n * 3. The parent object, which contains the current item\n * 4. The root object\n *\n * Setting the optional third parameter to 'top-down' or 'bottom-up' will cause\n * it to also recursively iterate over items in sub-objects or sub-arrays in the\n * specified direction.\n *\n * // {Object|Array} object - The object or array to iterate over\n * // {function} fn - the iterator funciton to call on each item\n * // {boolean = false} errors - Show errors?\n * // {void}\n */\nexport function forEach(\n  object: any, fn: (v: any, k?: string | number, c?: any, rc?: any) => any,\n  recurse: boolean | string = false, rootObject: any = object, errors = false\n): void {\n  if (isEmpty(object)) { return; }\n  if ((isObject(object) || isArray(object)) && typeof fn === 'function') {\n    for (const key of Object.keys(object)) {\n      const value = object[key];\n      if (recurse === 'bottom-up' && (isObject(value) || isArray(value))) {\n        forEach(value, fn, recurse, rootObject);\n      }\n      fn(value, key, object, rootObject);\n      if (recurse === 'top-down' && (isObject(value) || isArray(value))) {\n        forEach(value, fn, recurse, rootObject);\n      }\n    }\n  }\n  if (errors) {\n    if (typeof fn !== 'function') {\n      console.error('forEach error: Iterator must be a function.');\n      console.error('function', fn);\n    }\n    if (!isObject(object) && !isArray(object)) {\n      console.error('forEach error: Input object must be an object or array.');\n      console.error('object', object);\n    }\n  }\n}\n\n/**\n * 'forEachCopy' function\n *\n * Iterates over all items in the first level of an object or array\n * and calls an iterator function on each item. Returns a new object or array\n * with the same keys or indexes as the original, and values set to the results\n * of the iterator function.\n *\n * Does NOT recursively iterate over items in sub-objects or sub-arrays.\n *\n * // {Object | Array} object - The object or array to iterate over\n * // {function} fn - The iterator funciton to call on each item\n * // {boolean = false} errors - Show errors?\n * // {Object | Array} - The resulting object or array\n */\nexport function forEachCopy(\n  object: any, fn: (v: any, k?: string | number, o?: any, p?: string) => any,\n  errors = false\n): any {\n  if (!hasValue(object)) { return; }\n  if ((isObject(object) || isArray(object)) && typeof object !== 'function') {\n    const newObject: any = isArray(object) ? [] : {};\n    for (const key of Object.keys(object)) {\n      newObject[key] = fn(object[key], key, object);\n    }\n    return newObject;\n  }\n  if (errors) {\n    if (typeof fn !== 'function') {\n      console.error('forEachCopy error: Iterator must be a function.');\n      console.error('function', fn);\n    }\n    if (!isObject(object) && !isArray(object)) {\n      console.error('forEachCopy error: Input object must be an object or array.');\n      console.error('object', object);\n    }\n  }\n}\n\n/**\n * 'hasOwn' utility function\n *\n * Checks whether an object or array has a particular property.\n *\n * // {any} object - the object to check\n * // {string} property - the property to look for\n * // {boolean} - true if object has property, false if not\n */\nexport function hasOwn(object: any, property: string): boolean {\n  if (!object || !['number', 'string', 'symbol'].includes(typeof property) ||\n    (!isObject(object) && !isArray(object) && !isMap(object) && !isSet(object))\n  ) { return false; }\n  if (isMap(object) || isSet(object)) { return object.has(property); }\n  if (typeof property === 'number') {\n    if (isArray(object)) { return object[<number>property]; }\n    property = property + '';\n  }\n  return object.hasOwnProperty(property);\n}\n\n/**\n * Types of possible expressions which the app is able to evaluate.\n */\nexport enum ExpressionType {\n  EQUALS,\n  NOT_EQUALS,\n  NOT_AN_EXPRESSION\n}\n\n/**\n * Detects the type of expression from the given candidate. `==` for equals,\n * `!=` for not equals. If none of these are contained in the candidate, the candidate\n * is not considered to be an expression at all and thus `NOT_AN_EXPRESSION` is returned.\n * // {expressionCandidate} expressionCandidate - potential expression\n */\nexport function getExpressionType(expressionCandidate: string): ExpressionType {\n  if (expressionCandidate.indexOf('==') !== -1) {\n    return ExpressionType.EQUALS;\n  }\n\n  if (expressionCandidate.toString().indexOf('!=') !== -1) {\n    return ExpressionType.NOT_EQUALS;\n  }\n\n  return ExpressionType.NOT_AN_EXPRESSION;\n}\n\nexport function isEqual(expressionType) {\n  return expressionType as ExpressionType === ExpressionType.EQUALS;\n}\n\nexport function isNotEqual(expressionType) {\n  return expressionType as ExpressionType === ExpressionType.NOT_EQUALS;\n}\n\nexport function isNotExpression(expressionType) {\n  return expressionType as ExpressionType === ExpressionType.NOT_AN_EXPRESSION;\n}\n\n/**\n * Splits the expression key by the expressionType on a pair of values\n * before and after the equals or nor equals sign.\n * // {expressionType} enum of an expression type\n * // {key} the given key from a for loop iver all conditions\n */\nexport function getKeyAndValueByExpressionType(expressionType: ExpressionType, key: string) {\n  if (isEqual(expressionType)) {\n    return key.split('==', 2);\n  }\n\n  if (isNotEqual(expressionType)) {\n    return key.split('!=', 2);\n  }\n\n  return null;\n}\n\nexport function cleanValueOfQuotes(keyAndValue): String {\n  if (keyAndValue.charAt(0) === '\\'' && keyAndValue.charAt(keyAndValue.length - 1) === '\\'') {\n    return keyAndValue.replace('\\'', '').replace('\\'', '');\n  }\n  return keyAndValue;\n}\n\n/**\n * 'mergeFilteredObject' utility function\n *\n * Shallowly merges two objects, setting key and values from source object\n * in target object, excluding specified keys.\n *\n * Optionally, it can also use functions to transform the key names and/or\n * the values of the merging object.\n *\n * // {PlainObject} targetObject - Target object to add keys and values to\n * // {PlainObject} sourceObject - Source object to copy keys and values from\n * // {string[]} excludeKeys - Array of keys to exclude\n * // {(string: string) => string = (k) => k} keyFn - Function to apply to keys\n * // {(any: any) => any = (v) => v} valueFn - Function to apply to values\n * // {PlainObject} - Returns targetObject\n */\nexport function mergeFilteredObject(\n  targetObject: PlainObject,\n  sourceObject: PlainObject,\n  excludeKeys = <string[]>[],\n  keyFn = (key: string): string => key,\n  valFn = (val: any): any => val\n): PlainObject {\n  if (!isObject(sourceObject)) { return targetObject; }\n  if (!isObject(targetObject)) { targetObject = {}; }\n  for (const key of Object.keys(sourceObject)) {\n    if (!inArray(key, excludeKeys) && isDefined(sourceObject[key])) {\n      targetObject[keyFn(key)] = valFn(sourceObject[key]);\n    }\n  }\n  return targetObject;\n}\n\n/**\n * 'uniqueItems' function\n *\n * Accepts any number of string value inputs,\n * and returns an array of all input vaues, excluding duplicates.\n *\n * // {...string} ...items -\n * // {string[]} -\n */\nexport function uniqueItems(...items): string[] {\n  const returnItems = [];\n  for (const item of items) {\n    if (!returnItems.includes(item)) { returnItems.push(item); }\n  }\n  return returnItems;\n}\n\n/**\n * 'commonItems' function\n *\n * Accepts any number of strings or arrays of string values,\n * and returns a single array containing only values present in all inputs.\n *\n * // {...string|string[]} ...arrays -\n * // {string[]} -\n */\nexport function commonItems(...arrays): string[] {\n  let returnItems = null;\n  for (let array of arrays) {\n    if (isString(array)) { array = [array]; }\n    returnItems = returnItems === null ? [ ...array ] :\n      returnItems.filter(item => array.includes(item));\n    if (!returnItems.length) { return []; }\n  }\n  return returnItems;\n}\n\n/**\n * 'fixTitle' function\n *\n *\n * // {string} input -\n * // {string} -\n */\nexport function fixTitle(name: string): string {\n  return name && toTitleCase(name.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' '));\n}\n\n/**\n * 'toTitleCase' function\n *\n * Intelligently converts an input string to Title Case.\n *\n * Accepts an optional second parameter with a list of additional\n * words and abbreviations to force into a particular case.\n *\n * This function is built on prior work by John Gruber and David Gouch:\n * http://daringfireball.net/2008/08/title_case_update\n * https://github.com/gouch/to-title-case\n *\n * // {string} input -\n * // {string|string[]} forceWords? -\n * // {string} -\n */\nexport function toTitleCase(input: string, forceWords?: string|string[]): string {\n  if (!isString(input)) { return input; }\n  let forceArray: string[] = ['a', 'an', 'and', 'as', 'at', 'but', 'by', 'en',\n   'for', 'if', 'in', 'nor', 'of', 'on', 'or', 'per', 'the', 'to', 'v', 'v.',\n   'vs', 'vs.', 'via'];\n  if (isString(forceWords)) { forceWords = (<string>forceWords).split('|'); }\n  if (isArray(forceWords)) { forceArray = forceArray.concat(forceWords); }\n  const forceArrayLower: string[] = forceArray.map(w => w.toLowerCase());\n  const noInitialCase: boolean =\n    input === input.toUpperCase() || input === input.toLowerCase();\n  let prevLastChar = '';\n  input = input.trim();\n  return input.replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, (word, idx) => {\n    if (!noInitialCase && word.slice(1).search(/[A-Z]|\\../) !== -1) {\n      return word;\n    } else {\n      let newWord: string;\n      const forceWord: string =\n        forceArray[forceArrayLower.indexOf(word.toLowerCase())];\n      if (!forceWord) {\n        if (noInitialCase) {\n          if (word.slice(1).search(/\\../) !== -1) {\n            newWord = word.toLowerCase();\n          } else {\n            newWord = word[0].toUpperCase() + word.slice(1).toLowerCase();\n          }\n        } else {\n          newWord = word[0].toUpperCase() + word.slice(1);\n        }\n      } else if (\n        forceWord === forceWord.toLowerCase() && (\n          idx === 0 || idx + word.length === input.length ||\n          prevLastChar === ':' || input[idx - 1].search(/[^\\s-]/) !== -1 ||\n          (input[idx - 1] !== '-' && input[idx + word.length] === '-')\n        )\n      ) {\n        newWord = forceWord[0].toUpperCase() + forceWord.slice(1);\n      } else {\n        newWord = forceWord;\n      }\n      prevLastChar = word.slice(-1);\n      return newWord;\n    }\n  });\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Framework {\n  name: string;\n  framework: any;\n  widgets?: { [key: string]: any } = {};\n  stylesheets?: string[] = [];\n  scripts?: string[] = [];\n}\n","import {\n  cleanValueOfQuotes,\n  copy,\n  ExpressionType,\n  getExpressionType,\n  getKeyAndValueByExpressionType,\n  hasOwn,\n  isEqual,\n  isNotEqual,\n  isNotExpression\n} from './utility.functions';\nimport {Injectable} from '@angular/core';\nimport {isArray, isDefined, isEmpty, isMap, isNumber, isObject, isString} from './validator.functions';\n\n/**\n * 'JsonPointer' class\n *\n * Some utilities for using JSON Pointers with JSON objects\n * https://tools.ietf.org/html/rfc6901\n *\n * get, getCopy, getFirst, set, setCopy, insert, insertCopy, remove, has, dict,\n * forEachDeep, forEachDeepCopy, escape, unescape, parse, compile, toKey,\n * isJsonPointer, isSubPointer, toIndexedPointer, toGenericPointer,\n * toControlPointer, toSchemaPointer, toDataPointer, parseObjectPath\n *\n * Some functions based on manuelstofer's json-pointer utilities\n * https://github.com/manuelstofer/json-pointer\n */\nexport type Pointer = string | string[];\n\n@Injectable()\nexport class JsonPointer {\n\n  /**\n   * 'get' function\n   *\n   * Uses a JSON Pointer to retrieve a value from an object.\n   *\n   * //  { object } object - Object to get value from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\n   * //  { boolean = false } getBoolean - Return only true or false?\n   * //  { boolean = false } errors - Show error if not found?\n   * // { object } - Located value (or true or false if getBoolean = true)\n   */\n  static get(\n    object, pointer, startSlice = 0, endSlice: number = null,\n    getBoolean = false, errors = false\n  ) {\n    if (object === null) { return getBoolean ? false : undefined; }\n    let keyArray: any[] = this.parse(pointer, errors);\n    if (typeof object === 'object' && keyArray !== null) {\n      let subObject = object;\n      if (startSlice >= keyArray.length || endSlice <= -keyArray.length) { return object; }\n      if (startSlice <= -keyArray.length) { startSlice = 0; }\n      if (!isDefined(endSlice) || endSlice >= keyArray.length) { endSlice = keyArray.length; }\n      keyArray = keyArray.slice(startSlice, endSlice);\n      for (let key of keyArray) {\n        if (key === '-' && isArray(subObject) && subObject.length) {\n          key = subObject.length - 1;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject = subObject.get(key);\n        } else if (typeof subObject === 'object' && subObject !== null &&\n          hasOwn(subObject, key)\n        ) {\n          subObject = subObject[key];\n        } else {\n          const evaluatedExpression = JsonPointer.evaluateExpression(subObject, key);\n          if (evaluatedExpression.passed) {\n            subObject = evaluatedExpression.key ? subObject[evaluatedExpression.key] : subObject;\n          } else {\n            this.logErrors(errors, key, pointer, object);\n            return getBoolean ? false : undefined;\n          }\n        }\n      }\n      return getBoolean ? true : subObject;\n    }\n    if (errors && keyArray === null) {\n      console.error(`get error: Invalid JSON Pointer: ${pointer}`);\n    }\n    if (errors && typeof object !== 'object') {\n      console.error('get error: Invalid object:');\n      console.error(object);\n    }\n    return getBoolean ? false : undefined;\n  }\n\n  private static logErrors(errors, key, pointer, object) {\n    if (errors) {\n      console.error(`get error: \"${key}\" key not found in object.`);\n      console.error(pointer);\n      console.error(object);\n    }\n  }\n\n  /**\n   * Evaluates conditional expression in form of `model.<property>==<value>` or\n   * `model.<property>!=<value>` where the first one means that the value must match to be\n   * shown in a form, while the former shows the property only when the property value is not\n   * set, or does not equal the given value.\n   *\n   * // { subObject } subObject -  an object containing the data values of properties\n   * // { key } key - the key from the for loop in a form of `<property>==<value>`\n   *\n   * Returns the object with two properties. The property passed informs whether\n   * the expression evaluated successfully and the property key returns either the same\n   * key if it is not contained inside the subObject or the key of the property if it is contained.\n   */\n  static evaluateExpression(subObject: Object, key: any) {\n    const defaultResult = {passed: false, key: key};\n    const keysAndExpression = this.parseKeysAndExpression(key, subObject);\n    if (!keysAndExpression) {\n      return defaultResult;\n    }\n\n    const ownCheckResult = this.doOwnCheckResult(subObject, keysAndExpression);\n    if (ownCheckResult) {\n      return ownCheckResult;\n    }\n\n    const cleanedValue = cleanValueOfQuotes(keysAndExpression.keyAndValue[1]);\n\n    const evaluatedResult = this.performExpressionOnValue(keysAndExpression, cleanedValue, subObject);\n    if (evaluatedResult) {\n      return evaluatedResult;\n    }\n\n    return defaultResult;\n  }\n\n  /**\n   * Performs the actual evaluation on the given expression with given values and keys.\n   * // { cleanedValue } cleanedValue - the given valued cleaned of quotes if it had any\n   * // { subObject } subObject - the object with properties values\n   * // { keysAndExpression } keysAndExpression - an object holding the expressions with\n   */\n  private static performExpressionOnValue(keysAndExpression: any, cleanedValue: String, subObject: Object) {\n    const propertyByKey = subObject[keysAndExpression.keyAndValue[0]];\n    if (this.doComparisonByExpressionType(keysAndExpression.expressionType, propertyByKey, cleanedValue)) {\n      return {passed: true, key: keysAndExpression.keyAndValue[0]};\n    }\n\n    return null;\n  }\n\n  private static doComparisonByExpressionType(expressionType: ExpressionType, propertyByKey, cleanedValue: String): Boolean {\n    if (isEqual(expressionType)) {\n      return propertyByKey === cleanedValue;\n    }\n    if (isNotEqual(expressionType)) {\n      return propertyByKey !== cleanedValue;\n    }\n    return false;\n  }\n\n  /**\n   * Does the checks when the parsed key is actually no a property inside subObject.\n   * That would mean that the equal comparison makes no sense and thus the negative result\n   * is returned, and the not equal comparison is not necessary because it doesn't equal\n   * obviously. Returns null when the given key is a real property inside the subObject.\n   * // { subObject } subObject - the object with properties values\n   * // { keysAndExpression } keysAndExpression - an object holding the expressions with\n   * the associated keys.\n   */\n  private static doOwnCheckResult(subObject: Object, keysAndExpression) {\n    let ownCheckResult = null;\n    if (!hasOwn(subObject, keysAndExpression.keyAndValue[0])) {\n      if (isEqual(keysAndExpression.expressionType)) {\n        ownCheckResult = {passed: false, key: null};\n      }\n      if (isNotEqual(keysAndExpression.expressionType)) {\n        ownCheckResult = {passed: true, key: null};\n      }\n    }\n    return ownCheckResult;\n  }\n\n  /**\n   * Does the basic checks and tries to parse an expression and a pair\n   * of key and value.\n   * // { key } key - the original for loop created value containing key and value in one string\n   * // { subObject } subObject - the object with properties values\n   */\n  private static parseKeysAndExpression(key: string, subObject) {\n    if (this.keyOrSubObjEmpty(key, subObject)) {\n      return null;\n    }\n    const expressionType = getExpressionType(key.toString());\n    if (isNotExpression(expressionType)) {\n      return null;\n    }\n    const keyAndValue = getKeyAndValueByExpressionType(expressionType, key);\n    if (!keyAndValue || !keyAndValue[0] || !keyAndValue[1]) {\n      return null;\n    }\n    return {expressionType: expressionType, keyAndValue: keyAndValue};\n  }\n\n  private static keyOrSubObjEmpty(key: any, subObject: Object) {\n    return !key || !subObject;\n  }\n\n  /**\n   * 'getCopy' function\n   *\n   * Uses a JSON Pointer to deeply clone a value from an object.\n   *\n   * //  { object } object - Object to get value from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\n   * //  { boolean = false } getBoolean - Return only true or false?\n   * //  { boolean = false } errors - Show error if not found?\n   * // { object } - Located value (or true or false if getBoolean = true)\n   */\n  static getCopy(\n    object, pointer, startSlice = 0, endSlice: number = null,\n    getBoolean = false, errors = false\n  ) {\n    const objectToCopy =\n      this.get(object, pointer, startSlice, endSlice, getBoolean, errors);\n    return this.forEachDeepCopy(objectToCopy);\n  }\n\n  /**\n   * 'getFirst' function\n   *\n   * Takes an array of JSON Pointers and objects,\n   * checks each object for a value specified by the pointer,\n   * and returns the first value found.\n   *\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\n   * //  { any = null } defaultValue - Value to return if nothing found\n   * //  { boolean = false } getCopy - Return a copy instead?\n   * //  - First value found\n   */\n  static getFirst(items, defaultValue: any = null, getCopy = false) {\n    if (isEmpty(items)) { return; }\n    if (isArray(items)) {\n      for (const item of items) {\n        if (isEmpty(item)) { continue; }\n        if (isArray(item) && item.length >= 2) {\n          if (isEmpty(item[0]) || isEmpty(item[1])) { continue; }\n          const value = getCopy ?\n            this.getCopy(item[0], item[1]) :\n            this.get(item[0], item[1]);\n          if (value) { return value; }\n          continue;\n        }\n        console.error('getFirst error: Input not in correct format.\\n' +\n          'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\n        return;\n      }\n      return defaultValue;\n    }\n    if (isMap(items)) {\n      for (const [object, pointer] of items) {\n        if (object === null || !this.isJsonPointer(pointer)) { continue; }\n        const value = getCopy ?\n          this.getCopy(object, pointer) :\n          this.get(object, pointer);\n        if (value) { return value; }\n      }\n      return defaultValue;\n    }\n    console.error('getFirst error: Input not in correct format.\\n' +\n      'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\n    return defaultValue;\n  }\n\n  /**\n   * 'getFirstCopy' function\n   *\n   * Similar to getFirst, but always returns a copy.\n   *\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\n   * //  { any = null } defaultValue - Value to return if nothing found\n   * //  - Copy of first value found\n   */\n  static getFirstCopy(items, defaultValue: any = null) {\n    const firstCopy = this.getFirst(items, defaultValue, true);\n    return firstCopy;\n  }\n\n  /**\n   * 'set' function\n   *\n   * Uses a JSON Pointer to set a value on an object.\n   * Also creates any missing sub objects or arrays to contain that value.\n   *\n   * If the optional fourth parameter is TRUE and the inner-most container\n   * is an array, the function will insert the value as a new item at the\n   * specified location in the array, rather than overwriting the existing\n   * value (if any) at that location.\n   *\n   * So set([1, 2, 3], '/1', 4) => [1, 4, 3]\n   * and\n   * So set([1, 2, 3], '/1', 4, true) => [1, 4, 2, 3]\n   *\n   * //  { object } object - The object to set value in\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\n   * //   value - The new value to set\n   * //  { boolean } insert - insert value?\n   * // { object } - The original object, modified with the set value\n   */\n  static set(object, pointer, value, insert = false) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null && keyArray.length) {\n      let subObject = object;\n      for (let i = 0; i < keyArray.length - 1; ++i) {\n        let key = keyArray[i];\n        if (key === '-' && isArray(subObject)) {\n          key = subObject.length;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject = subObject.get(key);\n        } else {\n          if (!hasOwn(subObject, key)) {\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\n          }\n          subObject = subObject[key];\n        }\n      }\n      const lastKey = keyArray[keyArray.length - 1];\n      if (isArray(subObject) && lastKey === '-') {\n        subObject.push(value);\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\n        subObject.splice(lastKey, 0, value);\n      } else if (isMap(subObject)) {\n        subObject.set(lastKey, value);\n      } else {\n        subObject[lastKey] = value;\n      }\n      return object;\n    }\n    console.error(`set error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'setCopy' function\n   *\n   * Copies an object and uses a JSON Pointer to set a value on the copy.\n   * Also creates any missing sub objects or arrays to contain that value.\n   *\n   * If the optional fourth parameter is TRUE and the inner-most container\n   * is an array, the function will insert the value as a new item at the\n   * specified location in the array, rather than overwriting the existing value.\n   *\n   * //  { object } object - The object to copy and set value in\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\n   * //   value - The value to set\n   * //  { boolean } insert - insert value?\n   * // { object } - The new object with the set value\n   */\n  static setCopy(object, pointer, value, insert = false) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null) {\n      const newObject = copy(object);\n      let subObject = newObject;\n      for (let i = 0; i < keyArray.length - 1; ++i) {\n        let key = keyArray[i];\n        if (key === '-' && isArray(subObject)) {\n          key = subObject.length;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject.set(key, copy(subObject.get(key)));\n          subObject = subObject.get(key);\n        } else {\n          if (!hasOwn(subObject, key)) {\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\n          }\n          subObject[key] = copy(subObject[key]);\n          subObject = subObject[key];\n        }\n      }\n      const lastKey = keyArray[keyArray.length - 1];\n      if (isArray(subObject) && lastKey === '-') {\n        subObject.push(value);\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\n        subObject.splice(lastKey, 0, value);\n      } else if (isMap(subObject)) {\n        subObject.set(lastKey, value);\n      } else {\n        subObject[lastKey] = value;\n      }\n      return newObject;\n    }\n    console.error(`setCopy error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'insert' function\n   *\n   * Calls 'set' with insert = TRUE\n   *\n   * //  { object } object - object to insert value in\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //   value - value to insert\n   * // { object }\n   */\n  static insert(object, pointer, value) {\n    const updatedObject = this.set(object, pointer, value, true);\n    return updatedObject;\n  }\n\n  /**\n   * 'insertCopy' function\n   *\n   * Calls 'setCopy' with insert = TRUE\n   *\n   * //  { object } object - object to insert value in\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //   value - value to insert\n   * // { object }\n   */\n  static insertCopy(object, pointer, value) {\n    const updatedObject = this.setCopy(object, pointer, value, true);\n    return updatedObject;\n  }\n\n  /**\n   * 'remove' function\n   *\n   * Uses a JSON Pointer to remove a key and its attribute from an object\n   *\n   * //  { object } object - object to delete attribute from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * // { object }\n   */\n  static remove(object, pointer) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null && keyArray.length) {\n      let lastKey = keyArray.pop();\n      const parentObject = this.get(object, keyArray);\n      if (isArray(parentObject)) {\n        if (lastKey === '-') { lastKey = parentObject.length - 1; }\n        parentObject.splice(lastKey, 1);\n      } else if (isObject(parentObject)) {\n        delete parentObject[lastKey];\n      }\n      return object;\n    }\n    console.error(`remove error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'has' function\n   *\n   * Tests if an object has a value at the location specified by a JSON Pointer\n   *\n   * //  { object } object - object to chek for value\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * // { boolean }\n   */\n  static has(object, pointer) {\n    const hasValue = this.get(object, pointer, 0, null, true);\n    return hasValue;\n  }\n\n  /**\n   * 'dict' function\n   *\n   * Returns a (pointer -> value) dictionary for an object\n   *\n   * //  { object } object - The object to create a dictionary from\n   * // { object } - The resulting dictionary object\n   */\n  static dict(object) {\n    const results: any = {};\n    this.forEachDeep(object, (value, pointer) => {\n      if (typeof value !== 'object') { results[pointer] = value; }\n    });\n    return results;\n  }\n\n  /**\n   * 'forEachDeep' function\n   *\n   * Iterates over own enumerable properties of an object or items in an array\n   * and invokes an iteratee function for each key/value or index/value pair.\n   * By default, iterates over items within objects and arrays after calling\n   * the iteratee function on the containing object or array itself.\n   *\n   * The iteratee is invoked with three arguments: (value, pointer, rootObject),\n   * where pointer is a JSON pointer indicating the location of the current\n   * value within the root object, and rootObject is the root object initially\n   * submitted to th function.\n   *\n   * If a third optional parameter 'bottomUp' is set to TRUE, the iterator\n   * function will be called on sub-objects and arrays after being\n   * called on their contents, rather than before, which is the default.\n   *\n   * This function can also optionally be called directly on a sub-object by\n   * including optional 4th and 5th parameterss to specify the initial\n   * root object and pointer.\n   *\n   * //  { object } object - the initial object or array\n   * //  { (v: any, p?: string, o?: any) => any } function - iteratee function\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\n   * //  { object = object } rootObject - optional, root object or array\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\n   * // { object } - The modified object\n   */\n  static forEachDeep(\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\n    bottomUp = false, pointer = '', rootObject = object\n  ) {\n    if (typeof fn !== 'function') {\n      console.error(`forEachDeep error: Iterator is not a function:`, fn);\n      return;\n    }\n    if (!bottomUp) { fn(object, pointer, rootObject); }\n    if (isObject(object) || isArray(object)) {\n      for (const key of Object.keys(object)) {\n        const newPointer = pointer + '/' + this.escape(key);\n        this.forEachDeep(object[key], fn, bottomUp, newPointer, rootObject);\n      }\n    }\n    if (bottomUp) { fn(object, pointer, rootObject); }\n  }\n\n  /**\n   * 'forEachDeepCopy' function\n   *\n   * Similar to forEachDeep, but returns a copy of the original object, with\n   * the same keys and indexes, but with values replaced with the result of\n   * the iteratee function.\n   *\n   * //  { object } object - the initial object or array\n   * //  { (v: any, k?: string, o?: any, p?: any) => any } function - iteratee function\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\n   * //  { object = object } rootObject - optional, root object or array\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\n   * // { object } - The copied object\n   */\n  static forEachDeepCopy(\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\n    bottomUp = false, pointer = '', rootObject = object\n  ) {\n    if (typeof fn !== 'function') {\n      console.error(`forEachDeepCopy error: Iterator is not a function:`, fn);\n      return null;\n    }\n    if (isObject(object) || isArray(object)) {\n      let newObject = isArray(object) ? [ ...object ] : { ...object };\n      if (!bottomUp) { newObject = fn(newObject, pointer, rootObject); }\n      for (const key of Object.keys(newObject)) {\n        const newPointer = pointer + '/' + this.escape(key);\n        newObject[key] = this.forEachDeepCopy(\n          newObject[key], fn, bottomUp, newPointer, rootObject\n        );\n      }\n      if (bottomUp) { newObject = fn(newObject, pointer, rootObject); }\n      return newObject;\n    } else {\n      return fn(object, pointer, rootObject);\n    }\n  }\n\n  /**\n   * 'escape' function\n   *\n   * Escapes a string reference key\n   *\n   * //  { string } key - string key to escape\n   * // { string } - escaped key\n   */\n  static escape(key) {\n    const escaped = key.toString().replace(/~/g, '~0').replace(/\\//g, '~1');\n    return escaped;\n  }\n\n  /**\n   * 'unescape' function\n   *\n   * Unescapes a string reference key\n   *\n   * //  { string } key - string key to unescape\n   * // { string } - unescaped key\n   */\n  static unescape(key) {\n    const unescaped = key.toString().replace(/~1/g, '/').replace(/~0/g, '~');\n    return unescaped;\n  }\n\n  /**\n   * 'parse' function\n   *\n   * Converts a string JSON Pointer into a array of keys\n   * (if input is already an an array of keys, it is returned unchanged)\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string[] } - JSON Pointer array of keys\n   */\n  static parse(pointer, errors = false) {\n    if (!this.isJsonPointer(pointer)) {\n      if (errors) { console.error(`parse error: Invalid JSON Pointer: ${pointer}`); }\n      return null;\n    }\n    if (isArray(pointer)) { return <string[]>pointer; }\n    if (typeof pointer === 'string') {\n      if ((<string>pointer)[0] === '#') { pointer = pointer.slice(1); }\n      if (<string>pointer === '' || <string>pointer === '/') { return []; }\n      return (<string>pointer).slice(1).split('/').map(this.unescape);\n    }\n  }\n\n  /**\n   * 'compile' function\n   *\n   * Converts an array of keys into a JSON Pointer string\n   * (if input is already a string, it is normalized and returned)\n   *\n   * The optional second parameter is a default which will replace any empty keys.\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { string | number = '' } defaultValue - Default value\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string } - JSON Pointer string\n   */\n  static compile(pointer, defaultValue = '', errors = false) {\n    if (pointer === '#') { return ''; }\n    if (!this.isJsonPointer(pointer)) {\n      if (errors) { console.error(`compile error: Invalid JSON Pointer: ${pointer}`); }\n      return null;\n    }\n    if (isArray(pointer)) {\n      if ((<string[]>pointer).length === 0) { return ''; }\n      return '/' + (<string[]>pointer).map(\n        key => key === '' ? defaultValue : this.escape(key)\n      ).join('/');\n    }\n    if (typeof pointer === 'string') {\n      if (pointer[0] === '#') { pointer = pointer.slice(1); }\n      return pointer;\n    }\n  }\n\n  /**\n   * 'toKey' function\n   *\n   * Extracts name of the final key from a JSON Pointer.\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string } - the extracted key\n   */\n  static toKey(pointer, errors = false) {\n    const keyArray = this.parse(pointer, errors);\n    if (keyArray === null) { return null; }\n    if (!keyArray.length) { return ''; }\n    return keyArray[keyArray.length - 1];\n  }\n\n  /**\n   * 'isJsonPointer' function\n   *\n   * Checks a string or array value to determine if it is a valid JSON Pointer.\n   * Returns true if a string is empty, or starts with '/' or '#/'.\n   * Returns true if an array contains only string values.\n   *\n   * //   value - value to check\n   * // { boolean } - true if value is a valid JSON Pointer, otherwise false\n   */\n  static isJsonPointer(value) {\n    if (isArray(value)) {\n      return value.every(key => typeof key === 'string');\n    } else if (isString(value)) {\n      if (value === '' || value === '#') { return true; }\n      if (value[0] === '/' || value.slice(0, 2) === '#/') {\n        return !/(~[^01]|~$)/g.test(value);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * 'isSubPointer' function\n   *\n   * Checks whether one JSON Pointer is a subset of another.\n   *\n   * //  { Pointer } shortPointer - potential subset JSON Pointer\n   * //  { Pointer } longPointer - potential superset JSON Pointer\n   * //  { boolean = false } trueIfMatching - return true if pointers match?\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { boolean } - true if shortPointer is a subset of longPointer, false if not\n   */\n  static isSubPointer(\n    shortPointer, longPointer, trueIfMatching = false, errors = false\n  ) {\n    if (!this.isJsonPointer(shortPointer) || !this.isJsonPointer(longPointer)) {\n      if (errors) {\n        let invalid = '';\n        if (!this.isJsonPointer(shortPointer)) { invalid += ` 1: ${shortPointer}`; }\n        if (!this.isJsonPointer(longPointer)) { invalid += ` 2: ${longPointer}`; }\n        console.error(`isSubPointer error: Invalid JSON Pointer ${invalid}`);\n      }\n      return;\n    }\n    shortPointer = this.compile(shortPointer, '', errors);\n    longPointer = this.compile(longPointer, '', errors);\n    return shortPointer === longPointer ? trueIfMatching :\n      `${shortPointer}/` === longPointer.slice(0, shortPointer.length + 1);\n  }\n\n  /**\n   * 'toIndexedPointer' function\n   *\n   * Merges an array of numeric indexes and a generic pointer to create an\n   * indexed pointer for a specific item.\n   *\n   * For example, merging the generic pointer '/foo/-/bar/-/baz' and\n   * the array [4, 2] would result in the indexed pointer '/foo/4/bar/2/baz'\n   *\n   *\n   * //  { Pointer } genericPointer - The generic pointer\n   * //  { number[] } indexArray - The array of numeric indexes\n   * //  { Map<string, number> } arrayMap - An optional array map\n   * // { string } - The merged pointer with indexes\n   */\n  static toIndexedPointer(\n    genericPointer, indexArray, arrayMap: Map<string, number> = null\n  ) {\n    if (this.isJsonPointer(genericPointer) && isArray(indexArray)) {\n      let indexedPointer = this.compile(genericPointer);\n      if (isMap(arrayMap)) {\n        let arrayIndex = 0;\n        return indexedPointer.replace(/\\/\\-(?=\\/|$)/g, (key, stringIndex) =>\n          arrayMap.has((<string>indexedPointer).slice(0, stringIndex)) ?\n            '/' + indexArray[arrayIndex++] : key\n        );\n      } else {\n        for (const pointerIndex of indexArray) {\n          indexedPointer = indexedPointer.replace('/-', '/' + pointerIndex);\n        }\n        return indexedPointer;\n      }\n    }\n    if (!this.isJsonPointer(genericPointer)) {\n      console.error(`toIndexedPointer error: Invalid JSON Pointer: ${genericPointer}`);\n    }\n    if (!isArray(indexArray)) {\n      console.error(`toIndexedPointer error: Invalid indexArray: ${indexArray}`);\n    }\n  }\n\n  /**\n   * 'toGenericPointer' function\n   *\n   * Compares an indexed pointer to an array map and removes list array\n   * indexes (but leaves tuple arrray indexes and all object keys, including\n   * numeric keys) to create a generic pointer.\n   *\n   * For example, using the indexed pointer '/foo/1/bar/2/baz/3' and\n   * the arrayMap [['/foo', 0], ['/foo/-/bar', 3], ['/foo/-/bar/-/baz', 0]]\n   * would result in the generic pointer '/foo/-/bar/2/baz/-'\n   * Using the indexed pointer '/foo/1/bar/4/baz/3' and the same arrayMap\n   * would result in the generic pointer '/foo/-/bar/-/baz/-'\n   * (the bar array has 3 tuple items, so index 2 is retained, but 4 is removed)\n   *\n   * The structure of the arrayMap is: [['path to array', number of tuple items]...]\n   *\n   *\n   * //  { Pointer } indexedPointer - The indexed pointer (array or string)\n   * //  { Map<string, number> } arrayMap - The optional array map (for preserving tuple indexes)\n   * // { string } - The generic pointer with indexes removed\n   */\n  static toGenericPointer(indexedPointer, arrayMap = new Map<string, number>()) {\n    if (this.isJsonPointer(indexedPointer) && isMap(arrayMap)) {\n      const pointerArray = this.parse(indexedPointer);\n      for (let i = 1; i < pointerArray.length; i++) {\n        const subPointer = this.compile(pointerArray.slice(0, i));\n        if (arrayMap.has(subPointer) &&\n          arrayMap.get(subPointer) <= +pointerArray[i]\n        ) {\n          pointerArray[i] = '-';\n        }\n      }\n      return this.compile(pointerArray);\n    }\n    if (!this.isJsonPointer(indexedPointer)) {\n      console.error(`toGenericPointer error: invalid JSON Pointer: ${indexedPointer}`);\n    }\n    if (!isMap(arrayMap)) {\n      console.error(`toGenericPointer error: invalid arrayMap: ${arrayMap}`);\n    }\n  }\n\n  /**\n   * 'toControlPointer' function\n   *\n   * Accepts a JSON Pointer for a data object and returns a JSON Pointer for the\n   * matching control in an Angular FormGroup.\n   *\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to a data object\n   * //  { FormGroup } formGroup - Angular FormGroup to get value from\n   * //  { boolean = false } controlMustExist - Only return if control exists?\n   * // { Pointer } - JSON Pointer (string) to the formGroup object\n   */\n  static toControlPointer(dataPointer, formGroup, controlMustExist = false) {\n    const dataPointerArray = this.parse(dataPointer);\n    const controlPointerArray: string[] = [];\n    let subGroup = formGroup;\n    if (dataPointerArray !== null) {\n      for (const key of dataPointerArray) {\n        if (hasOwn(subGroup, 'controls')) {\n          controlPointerArray.push('controls');\n          subGroup = subGroup.controls;\n        }\n        if (isArray(subGroup) && (key === '-')) {\n          controlPointerArray.push((subGroup.length - 1).toString());\n          subGroup = subGroup[subGroup.length - 1];\n        } else if (hasOwn(subGroup, key)) {\n          controlPointerArray.push(key);\n          subGroup = subGroup[key];\n        } else if (controlMustExist) {\n          console.error(`toControlPointer error: Unable to find \"${key}\" item in FormGroup.`);\n          console.error(dataPointer);\n          console.error(formGroup);\n          return;\n        } else {\n          controlPointerArray.push(key);\n          subGroup = { controls: {} };\n        }\n      }\n      return this.compile(controlPointerArray);\n    }\n    console.error(`toControlPointer error: Invalid JSON Pointer: ${dataPointer}`);\n  }\n\n  /**\n   * 'toSchemaPointer' function\n   *\n   * Accepts a JSON Pointer to a value inside a data object and a JSON schema\n   * for that object.\n   *\n   * Returns a Pointer to the sub-schema for the value inside the object's schema.\n   *\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to an object\n   * //   schema - JSON schema for the object\n   * // { Pointer } - JSON Pointer (string) to the object's schema\n   */\n  static toSchemaPointer(dataPointer, schema) {\n    if (this.isJsonPointer(dataPointer) && typeof schema === 'object') {\n      const pointerArray = this.parse(dataPointer);\n      if (!pointerArray.length) { return ''; }\n      const firstKey = pointerArray.shift();\n      if (schema.type === 'object' || schema.properties || schema.additionalProperties) {\n        if ((schema.properties || {})[firstKey]) {\n          return `/properties/${this.escape(firstKey)}` +\n            this.toSchemaPointer(pointerArray, schema.properties[firstKey]);\n        } else  if (schema.additionalProperties) {\n          return '/additionalProperties' +\n            this.toSchemaPointer(pointerArray, schema.additionalProperties);\n        }\n      }\n      if ((schema.type === 'array' || schema.items) &&\n        (isNumber(firstKey) || firstKey === '-' || firstKey === '')\n      ) {\n        const arrayItem = firstKey === '-' || firstKey === '' ? 0 : +firstKey;\n        if (isArray(schema.items)) {\n          if (arrayItem < schema.items.length) {\n            return '/items/' + arrayItem +\n              this.toSchemaPointer(pointerArray, schema.items[arrayItem]);\n          } else if (schema.additionalItems) {\n            return '/additionalItems' +\n              this.toSchemaPointer(pointerArray, schema.additionalItems);\n          }\n        } else if (isObject(schema.items)) {\n          return '/items' + this.toSchemaPointer(pointerArray, schema.items);\n        } else if (isObject(schema.additionalItems)) {\n          return '/additionalItems' +\n            this.toSchemaPointer(pointerArray, schema.additionalItems);\n        }\n      }\n      console.error(`toSchemaPointer error: Data pointer ${dataPointer} ` +\n        `not compatible with schema ${schema}`);\n      return null;\n    }\n    if (!this.isJsonPointer(dataPointer)) {\n      console.error(`toSchemaPointer error: Invalid JSON Pointer: ${dataPointer}`);\n    }\n    if (typeof schema !== 'object') {\n      console.error(`toSchemaPointer error: Invalid JSON Schema: ${schema}`);\n    }\n    return null;\n  }\n\n  /**\n   * 'toDataPointer' function\n   *\n   * Accepts a JSON Pointer to a sub-schema inside a JSON schema and the schema.\n   *\n   * If possible, returns a generic Pointer to the corresponding value inside\n   * the data object described by the JSON schema.\n   *\n   * Returns null if the sub-schema is in an ambiguous location (such as\n   * definitions or additionalProperties) where the corresponding value\n   * location cannot be determined.\n   *\n   * //  { Pointer } schemaPointer - JSON Pointer (string or array) to a JSON schema\n   * //   schema - the JSON schema\n   * //  { boolean = false } errors - Show errors?\n   * // { Pointer } - JSON Pointer (string) to the value in the data object\n   */\n  static toDataPointer(schemaPointer, schema, errors = false) {\n    if (this.isJsonPointer(schemaPointer) && typeof schema === 'object' &&\n      this.has(schema, schemaPointer)\n    ) {\n      const pointerArray = this.parse(schemaPointer);\n      if (!pointerArray.length) { return ''; }\n      const firstKey = pointerArray.shift();\n      if (firstKey === 'properties' ||\n        (firstKey === 'items' && isArray(schema.items))\n      ) {\n        const secondKey = pointerArray.shift();\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\n        return pointerSuffix === null ? null : '/' + secondKey + pointerSuffix;\n      } else if (firstKey === 'additionalItems' ||\n        (firstKey === 'items' && isObject(schema.items))\n      ) {\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey]);\n        return pointerSuffix === null ? null : '/-' + pointerSuffix;\n      } else if (['allOf', 'anyOf', 'oneOf'].includes(firstKey)) {\n        const secondKey = pointerArray.shift();\n        return this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\n      } else if (firstKey === 'not') {\n        return this.toDataPointer(pointerArray, schema[firstKey]);\n      } else if (['contains', 'definitions', 'dependencies', 'additionalItems',\n        'additionalProperties', 'patternProperties', 'propertyNames'].includes(firstKey)\n      ) {\n        if (errors) { console.error(`toDataPointer error: Ambiguous location`); }\n      }\n      return '';\n    }\n    if (errors) {\n      if (!this.isJsonPointer(schemaPointer)) {\n        console.error(`toDataPointer error: Invalid JSON Pointer: ${schemaPointer}`);\n      }\n      if (typeof schema !== 'object') {\n        console.error(`toDataPointer error: Invalid JSON Schema: ${schema}`);\n      }\n      if (typeof schema !== 'object') {\n        console.error(`toDataPointer error: Pointer ${schemaPointer} invalid for Schema: ${schema}`);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 'parseObjectPath' function\n   *\n   * Parses a JavaScript object path into an array of keys, which\n   * can then be passed to compile() to convert into a string JSON Pointer.\n   *\n   * Based on mike-marcacci's excellent objectpath parse function:\n   * https://github.com/mike-marcacci/objectpath\n   *\n   * //  { Pointer } path - The object path to parse\n   * // { string[] } - The resulting array of keys\n   */\n  static parseObjectPath(path) {\n    if (isArray(path)) { return <string[]>path; }\n    if (this.isJsonPointer(path)) { return this.parse(path); }\n    if (typeof path === 'string') {\n      let index = 0;\n      const parts: string[] = [];\n      while (index < path.length) {\n        const nextDot = path.indexOf('.', index);\n        const nextOB = path.indexOf('[', index); // next open bracket\n        if (nextDot === -1 && nextOB === -1) { // last item\n          parts.push(path.slice(index));\n          index = path.length;\n        } else if (nextDot !== -1 && (nextDot < nextOB || nextOB === -1)) { // dot notation\n          parts.push(path.slice(index, nextDot));\n          index = nextDot + 1;\n        } else { // bracket notation\n          if (nextOB > index) {\n            parts.push(path.slice(index, nextOB));\n            index = nextOB;\n          }\n          const quote = path.charAt(nextOB + 1);\n          if (quote === '\"' || quote === '\\'') { // enclosing quotes\n            let nextCB = path.indexOf(quote + ']', nextOB); // next close bracket\n            while (nextCB !== -1 && path.charAt(nextCB - 1) === '\\\\') {\n              nextCB = path.indexOf(quote + ']', nextCB + 2);\n            }\n            if (nextCB === -1) { nextCB = path.length; }\n            parts.push(path.slice(index + 2, nextCB)\n              .replace(new RegExp('\\\\' + quote, 'g'), quote));\n            index = nextCB + 2;\n          } else { // no enclosing quotes\n            let nextCB = path.indexOf(']', nextOB); // next close bracket\n            if (nextCB === -1) { nextCB = path.length; }\n            parts.push(path.slice(index + 1, nextCB));\n            index = nextCB + 1;\n          }\n          if (path.charAt(index) === '.') { index++; }\n        }\n      }\n      return parts;\n    }\n    console.error('parseObjectPath error: Input object path must be a string.');\n  }\n}\n","// updated from AJV fast format regular expressions:\n// https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\n\nexport const jsonSchemaFormatTests = {\n\n  'date': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n\n  'time': /^[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n\n  // Modified to allow incomplete entries, such as\n  // \"2000-03-14T01:59:26.535\" (needs \"Z\") or \"2000-03-14T01:59\" (needs \":00Z\")\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d(?::[0-5]\\d)?(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  'email': /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n\n  'hostname': /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i,\n\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  'ipv4': /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  // tslint:disable-next-line:max-line-length\n  'ipv6': /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  'uri': /^(?:[a-z][a-z0-9+-.]*)(?::|\\/)\\/?[^\\s]*$/i,\n\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/\\/)?[^\\s]*$/i,\n\n  // uri-template: https://tools.ietf.org/html/rfc6570\n  // tslint:disable-next-line:max-line-length\n  'uri-template': /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n\n  // For the source: https://gist.github.com/dperini/729294\n  // For test cases: https://mathiasbynens.be/demo/url-regex\n  // tslint:disable-next-line:max-line-length\n  // @todo Delete current URL in favour of the commented out URL rule when this ajv issue is fixed https://github.com/eslint/eslint/issues/7983.\n  // tslint:disable-next-line:max-line-length\n  // URL: /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n  // tslint:disable-next-line:max-line-length\n  'url': /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i,\n\n  // uuid: http://tools.ietf.org/html/rfc4122\n  'uuid': /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n\n  // optimized https://gist.github.com/olmokramer/82ccce673f86db7cda5e\n  // tslint:disable-next-line:max-line-length\n  'color': /^\\s*(#(?:[\\da-f]{3}){1,2}|rgb\\((?:\\d{1,3},\\s*){2}\\d{1,3}\\)|rgba\\((?:\\d{1,3},\\s*){3}\\d*\\.?\\d+\\)|hsl\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2}\\)|hsla\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2},\\s*\\d*\\.?\\d+\\))\\s*$/gi,\n\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  'json-pointer': /^(?:\\/(?:[^~/]|~0|~1)*)*$|^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n\n  'relative-json-pointer': /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n\n  'regex': function (str) {\n    if (/[^\\\\]\\\\Z/.test(str)) { return false; }\n    try {\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n};\n\nexport type JsonSchemaFormatNames =\n  'date' | 'time' | 'date-time' | 'email' | 'hostname' | 'ipv4' | 'ipv6' |\n  'uri' | 'uri-reference' | 'uri-template' | 'url' | 'uuid' | 'color' |\n  'json-pointer' | 'relative-json-pointer' | 'regex';\n","import isEqual from 'lodash/isEqual';\nimport {\n  _executeAsyncValidators,\n  _executeValidators,\n  _mergeErrors,\n  _mergeObjects,\n  AsyncIValidatorFn,\n  getType,\n  hasValue,\n  isArray,\n  isBoolean,\n  isDefined,\n  isEmpty,\n  isNumber,\n  isString,\n  isType,\n  IValidatorFn,\n  SchemaPrimitiveType,\n  toJavaScriptType,\n  toObservable,\n  xor\n  } from './validator.functions';\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { forEachCopy } from './utility.functions';\nimport { forkJoin } from 'rxjs';\nimport { JsonSchemaFormatNames, jsonSchemaFormatTests } from './format-regex.constants';\nimport { map } from 'rxjs/operators';\n\n\n\n/**\n * 'JsonValidators' class\n *\n * Provides an extended set of validators to be used by form controls,\n * compatible with standard JSON Schema validation options.\n * http://json-schema.org/latest/json-schema-validation.html\n *\n * Note: This library is designed as a drop-in replacement for the Angular\n * Validators library, and except for one small breaking change to the 'pattern'\n * validator (described below) it can even be imported as a substitute, like so:\n *\n *   import { JsonValidators as Validators } from 'json-validators';\n *\n * and it should work with existing code as a complete replacement.\n *\n * The one exception is the 'pattern' validator, which has been changed to\n * matche partial values by default (the standard 'pattern' validator wrapped\n * all patterns in '^' and '$', forcing them to always match an entire value).\n * However, the old behavior can be restored by simply adding '^' and '$'\n * around your patterns, or by passing an optional second parameter of TRUE.\n * This change is to make the 'pattern' validator match the behavior of a\n * JSON Schema pattern, which allows partial matches, rather than the behavior\n * of an HTML input control pattern, which does not.\n *\n * This library replaces Angular's validators and combination functions\n * with the following validators and transformation functions:\n *\n * Validators:\n *   For all formControls:     required (*), type, enum, const\n *   For text formControls:    minLength (*), maxLength (*), pattern (*), format\n *   For numeric formControls: maximum, exclusiveMaximum,\n *                             minimum, exclusiveMinimum, multipleOf\n *   For formGroup objects:    minProperties, maxProperties, dependencies\n *   For formArray arrays:     minItems, maxItems, uniqueItems, contains\n *   Not used by JSON Schema:  min (*), max (*), requiredTrue (*), email (*)\n * (Validators originally included with Angular are maked with (*).)\n *\n * NOTE / TODO: The dependencies validator is not complete.\n * NOTE / TODO: The contains validator is not complete.\n *\n * Validators not used by JSON Schema (but included for compatibility)\n * and their JSON Schema equivalents:\n *\n *   Angular validator | JSON Schema equivalent\n *   ------------------|-----------------------\n *     min(number)     |   minimum(number)\n *     max(number)     |   maximum(number)\n *     requiredTrue()  |   const(true)\n *     email()         |   format('email')\n *\n * Validator transformation functions:\n *   composeAnyOf, composeOneOf, composeAllOf, composeNot\n * (Angular's original combination funciton, 'compose', is also included for\n * backward compatibility, though it is functionally equivalent to composeAllOf,\n * asside from its more generic error message.)\n *\n * All validators have also been extended to accept an optional second argument\n * which, if passed a TRUE value, causes the validator to perform the opposite\n * of its original finction. (This is used internally to enable 'not' and\n * 'composeOneOf' to function and return useful error messages.)\n *\n * The 'required' validator has also been overloaded so that if called with\n * a boolean parameter (or no parameters) it returns the original validator\n * function (rather than executing it). However, if it is called with an\n * AbstractControl parameter (as was previously required), it behaves\n * exactly as before.\n *\n * This enables all validators (including 'required') to be constructed in\n * exactly the same way, so they can be automatically applied using the\n * equivalent key names and values taken directly from a JSON Schema.\n *\n * This source code is partially derived from Angular,\n * which is Copyright (c) 2014-2017 Google, Inc.\n * Use of this source code is therefore governed by the same MIT-style license\n * that can be found in the LICENSE file at https://angular.io/license\n *\n * Original Angular Validators:\n * https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\n */\nexport class JsonValidators {\n\n  /**\n   * Validator functions:\n   *\n   * For all formControls:     required, type, enum, const\n   * For text formControls:    minLength, maxLength, pattern, format\n   * For numeric formControls: maximum, exclusiveMaximum,\n   *                           minimum, exclusiveMinimum, multipleOf\n   * For formGroup objects:    minProperties, maxProperties, dependencies\n   * For formArray arrays:     minItems, maxItems, uniqueItems, contains\n   *\n   * TODO: finish dependencies validator\n   */\n\n  /**\n   * 'required' validator\n   *\n   * This validator is overloaded, compared to the default required validator.\n   * If called with no parameters, or TRUE, this validator returns the\n   * 'required' validator function (rather than executing it). This matches\n   * the behavior of all other validators in this library.\n   *\n   * If this validator is called with an AbstractControl parameter\n   * (as was previously required) it behaves the same as Angular's default\n   * required validator, and returns an error if the control is empty.\n   *\n   * Old behavior: (if input type = AbstractControl)\n   * // {AbstractControl} control - required control\n   * // {{[key: string]: boolean}} - returns error message if no input\n   *\n   * New behavior: (if no input, or input type = boolean)\n   * // {boolean = true} required? - true to validate, false to disable\n   * // {IValidatorFn} - returns the 'required' validator function itself\n   */\n  static required(input: AbstractControl): ValidationErrors|null;\n  static required(input?: boolean): IValidatorFn;\n\n  static required(input?: AbstractControl|boolean): ValidationErrors|null|IValidatorFn {\n    if (input === undefined) { input = true; }\n    switch (input) {\n      case true: // Return required function (do not execute it yet)\n        return (control: AbstractControl, invert = false): ValidationErrors|null => {\n          if (invert) { return null; } // if not required, always return valid\n          return hasValue(control.value) ? null : { 'required': true };\n        };\n      case false: // Do nothing (if field is not required, it is always valid)\n        return JsonValidators.nullValidator;\n      default: // Execute required function\n        return hasValue((<AbstractControl>input).value) ? null : { 'required': true };\n    }\n  }\n\n  /**\n   * 'type' validator\n   *\n   * Requires a control to only accept values of a specified type,\n   * or one of an array of types.\n   *\n   * Note: SchemaPrimitiveType = 'string'|'number'|'integer'|'boolean'|'null'\n   *\n   * // {SchemaPrimitiveType|SchemaPrimitiveType[]} type - type(s) to accept\n   * // {IValidatorFn}\n   */\n  static type(requiredType: SchemaPrimitiveType|SchemaPrimitiveType[]): IValidatorFn {\n    if (!hasValue(requiredType)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isValid = isArray(requiredType) ?\n        (<SchemaPrimitiveType[]>requiredType).some(type => isType(currentValue, type)) :\n        isType(currentValue, <SchemaPrimitiveType>requiredType);\n      return xor(isValid, invert) ?\n        null : { 'type': { requiredType, currentValue } };\n    };\n  }\n\n  /**\n   * 'enum' validator\n   *\n   * Requires a control to have a value from an enumerated list of values.\n   *\n   * Converts types as needed to allow string inputs to still correctly\n   * match number, boolean, and null enum values.\n   *\n   * // {any[]} allowedValues - array of acceptable values\n   * // {IValidatorFn}\n   */\n  static enum(allowedValues: any[]): IValidatorFn {\n    if (!isArray(allowedValues)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isEqualVal = (enumValue, inputValue) =>\n        enumValue === inputValue ||\n        (isNumber(enumValue) && +inputValue === +enumValue) ||\n        (isBoolean(enumValue, 'strict') &&\n          toJavaScriptType(inputValue, 'boolean') === enumValue) ||\n        (enumValue === null && !hasValue(inputValue)) ||\n        isEqual(enumValue, inputValue);\n      const isValid = isArray(currentValue) ?\n        currentValue.every(inputValue => allowedValues.some(enumValue =>\n          isEqualVal(enumValue, inputValue)\n        )) :\n        allowedValues.some(enumValue => isEqualVal(enumValue, currentValue));\n      return xor(isValid, invert) ?\n        null : { 'enum': { allowedValues, currentValue } };\n    };\n  }\n\n  /**\n   * 'const' validator\n   *\n   * Requires a control to have a specific value.\n   *\n   * Converts types as needed to allow string inputs to still correctly\n   * match number, boolean, and null values.\n   *\n   * TODO: modify to work with objects\n   *\n   * // {any[]} requiredValue - required value\n   * // {IValidatorFn}\n   */\n  static const(requiredValue: any): IValidatorFn {\n    if (!hasValue(requiredValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isEqualVal = (constValue, inputValue) =>\n        constValue === inputValue ||\n        isNumber(constValue) && +inputValue === +constValue ||\n        isBoolean(constValue, 'strict') &&\n          toJavaScriptType(inputValue, 'boolean') === constValue ||\n        constValue === null && !hasValue(inputValue);\n      const isValid = isEqualVal(requiredValue, currentValue);\n      return xor(isValid, invert) ?\n        null : { 'const': { requiredValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'minLength' validator\n   *\n   * Requires a control's text value to be greater than a specified length.\n   *\n   * // {number} minimumLength - minimum allowed string length\n   * // {boolean = false} invert - instead return error object only if valid\n   * // {IValidatorFn}\n   */\n  static minLength(minimumLength: number): IValidatorFn {\n    if (!hasValue(minimumLength)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentLength = isString(control.value) ? control.value.length : 0;\n      const isValid = currentLength >= minimumLength;\n      return xor(isValid, invert) ?\n        null : { 'minLength': { minimumLength, currentLength } };\n    };\n  }\n\n  /**\n   * 'maxLength' validator\n   *\n   * Requires a control's text value to be less than a specified length.\n   *\n   * // {number} maximumLength - maximum allowed string length\n   * // {boolean = false} invert - instead return error object only if valid\n   * // {IValidatorFn}\n   */\n  static maxLength(maximumLength: number): IValidatorFn {\n    if (!hasValue(maximumLength)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentLength = isString(control.value) ? control.value.length : 0;\n      const isValid = currentLength <= maximumLength;\n      return xor(isValid, invert) ?\n        null : { 'maxLength': { maximumLength, currentLength } };\n    };\n  }\n\n  /**\n   * 'pattern' validator\n   *\n   * Note: NOT the same as Angular's default pattern validator.\n   *\n   * Requires a control's value to match a specified regular expression pattern.\n   *\n   * This validator changes the behavior of default pattern validator\n   * by replacing RegExp(`^${pattern}$`) with RegExp(`${pattern}`),\n   * which allows for partial matches.\n   *\n   * To return to the default funcitonality, and match the entire string,\n   * pass TRUE as the optional second parameter.\n   *\n   * // {string} pattern - regular expression pattern\n   * // {boolean = false} wholeString - match whole value string?\n   * // {IValidatorFn}\n   */\n  static pattern(pattern: string|RegExp, wholeString = false): IValidatorFn {\n    if (!hasValue(pattern)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let regex: RegExp;\n      let requiredPattern: string;\n      if (typeof pattern === 'string') {\n        requiredPattern = (wholeString) ? `^${pattern}$` : pattern;\n        regex = new RegExp(requiredPattern);\n      } else {\n        requiredPattern = pattern.toString();\n        regex = pattern;\n      }\n      const currentValue: string = control.value;\n      const isValid = isString(currentValue) ? regex.test(currentValue) : false;\n      return xor(isValid, invert) ?\n        null : { 'pattern': { requiredPattern, currentValue } };\n    };\n  }\n\n  /**\n   * 'format' validator\n   *\n   * Requires a control to have a value of a certain format.\n   *\n   * This validator currently checks the following formsts:\n   *   date, time, date-time, email, hostname, ipv4, ipv6,\n   *   uri, uri-reference, uri-template, url, uuid, color,\n   *   json-pointer, relative-json-pointer, regex\n   *\n   * Fast format regular expressions copied from AJV:\n   * https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\n   *\n   * // {JsonSchemaFormatNames} requiredFormat - format to check\n   * // {IValidatorFn}\n   */\n  static format(requiredFormat: JsonSchemaFormatNames): IValidatorFn {\n    if (!hasValue(requiredFormat)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let isValid: boolean;\n      const currentValue: string|Date = control.value;\n      if (isString(currentValue)) {\n        const formatTest: Function|RegExp = jsonSchemaFormatTests[requiredFormat];\n        if (typeof formatTest === 'object') {\n          isValid = (<RegExp>formatTest).test(<string>currentValue);\n        } else if (typeof formatTest === 'function') {\n          isValid = (<Function>formatTest)(<string>currentValue);\n        } else {\n          console.error(`format validator error: \"${requiredFormat}\" is not a recognized format.`);\n          isValid = true;\n        }\n      } else {\n        // Allow JavaScript Date objects\n        isValid = ['date', 'time', 'date-time'].includes(requiredFormat) &&\n          Object.prototype.toString.call(currentValue) === '[object Date]';\n      }\n      return xor(isValid, invert) ?\n        null : { 'format': { requiredFormat, currentValue } };\n    };\n  }\n\n  /**\n   * 'minimum' validator\n   *\n   * Requires a control's numeric value to be greater than or equal to\n   * a minimum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a minimum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} minimum - minimum allowed value\n   * // {IValidatorFn}\n   */\n  static minimum(minimumValue: number): IValidatorFn {\n    if (!hasValue(minimumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || currentValue >= minimumValue;\n      return xor(isValid, invert) ?\n        null : { 'minimum': { minimumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'exclusiveMinimum' validator\n   *\n   * Requires a control's numeric value to be less than a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} exclusiveMinimumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static exclusiveMinimum(exclusiveMinimumValue: number): IValidatorFn {\n    if (!hasValue(exclusiveMinimumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue < exclusiveMinimumValue;\n      return xor(isValid, invert) ?\n        null : { 'exclusiveMinimum': { exclusiveMinimumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'maximum' validator\n   *\n   * Requires a control's numeric value to be less than or equal to\n   * a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} maximumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static maximum(maximumValue: number): IValidatorFn {\n    if (!hasValue(maximumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue <= maximumValue;\n      return xor(isValid, invert) ?\n        null : { 'maximum': { maximumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'exclusiveMaximum' validator\n   *\n   * Requires a control's numeric value to be less than a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} exclusiveMaximumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static exclusiveMaximum(exclusiveMaximumValue: number): IValidatorFn {\n    if (!hasValue(exclusiveMaximumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue < exclusiveMaximumValue;\n      return xor(isValid, invert) ?\n        null : { 'exclusiveMaximum': { exclusiveMaximumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'multipleOf' validator\n   *\n   * Requires a control to have a numeric value that is a multiple\n   * of a specified number.\n   *\n   * // {number} multipleOfValue - number value must be a multiple of\n   * // {IValidatorFn}\n   */\n  static multipleOf(multipleOfValue: number): IValidatorFn {\n    if (!hasValue(multipleOfValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = isNumber(currentValue) &&\n        currentValue % multipleOfValue === 0;\n      return xor(isValid, invert) ?\n        null : { 'multipleOf': { multipleOfValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'minProperties' validator\n   *\n   * Requires a form group to have a minimum number of properties (i.e. have\n   * values entered in a minimum number of controls within the group).\n   *\n   * // {number} minimumProperties - minimum number of properties allowed\n   * // {IValidatorFn}\n   */\n  static minProperties(minimumProperties: number): IValidatorFn {\n    if (!hasValue(minimumProperties)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentProperties = Object.keys(control.value).length || 0;\n      const isValid = currentProperties >= minimumProperties;\n      return xor(isValid, invert) ?\n        null : { 'minProperties': { minimumProperties, currentProperties } };\n    };\n  }\n\n  /**\n   * 'maxProperties' validator\n   *\n   * Requires a form group to have a maximum number of properties (i.e. have\n   * values entered in a maximum number of controls within the group).\n   *\n   * Note: Has no effect if the form group does not contain more than the\n   * maximum number of controls.\n   *\n   * // {number} maximumProperties - maximum number of properties allowed\n   * // {IValidatorFn}\n   */\n  static maxProperties(maximumProperties: number): IValidatorFn {\n    if (!hasValue(maximumProperties)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentProperties = Object.keys(control.value).length || 0;\n      const isValid = currentProperties <= maximumProperties;\n      return xor(isValid, invert) ?\n        null : { 'maxProperties': { maximumProperties, currentProperties } };\n    };\n  }\n\n  /**\n   * 'dependencies' validator\n   *\n   * Requires the controls in a form group to meet additional validation\n   * criteria, depending on the values of other controls in the group.\n   *\n   * Examples:\n   * https://spacetelescope.github.io/understanding-json-schema/reference/object.html#dependencies\n   *\n   * // {any} dependencies - required dependencies\n   * // {IValidatorFn}\n   */\n  static dependencies(dependencies: any): IValidatorFn {\n    if (getType(dependencies) !== 'object' || isEmpty(dependencies)) {\n      return JsonValidators.nullValidator;\n    }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const allErrors = _mergeObjects(\n        forEachCopy(dependencies, (value, requiringField) => {\n          if (!hasValue(control.value[requiringField])) { return null; }\n          let requiringFieldErrors: ValidationErrors = { };\n          let requiredFields: string[];\n          let properties: ValidationErrors = { };\n          if (getType(dependencies[requiringField]) === 'array') {\n            requiredFields = dependencies[requiringField];\n          } else if (getType(dependencies[requiringField]) === 'object') {\n            requiredFields = dependencies[requiringField]['required'] || [];\n            properties = dependencies[requiringField]['properties'] || { };\n          }\n\n          // Validate property dependencies\n          for (const requiredField of requiredFields) {\n            if (xor(!hasValue(control.value[requiredField]), invert)) {\n              requiringFieldErrors[requiredField] = { 'required': true };\n            }\n          }\n\n          // Validate schema dependencies\n          requiringFieldErrors = _mergeObjects(requiringFieldErrors,\n            forEachCopy(properties, (requirements, requiredField) => {\n              const requiredFieldErrors = _mergeObjects(\n                forEachCopy(requirements, (requirement, parameter) => {\n                  let validator: IValidatorFn = null;\n                  if (requirement === 'maximum' || requirement === 'minimum') {\n                    const exclusive = !!requirements['exclusiveM' + requirement.slice(1)];\n                    validator = JsonValidators[requirement](parameter, exclusive);\n                  } else if (typeof JsonValidators[requirement] === 'function') {\n                    validator = JsonValidators[requirement](parameter);\n                  }\n                  return !isDefined(validator) ?\n                    null : validator(control.value[requiredField]);\n                })\n              );\n              return isEmpty(requiredFieldErrors) ?\n                null : { [requiredField]: requiredFieldErrors };\n            })\n          );\n          return isEmpty(requiringFieldErrors) ?\n            null : { [requiringField]: requiringFieldErrors };\n        })\n      );\n      return isEmpty(allErrors) ? null : allErrors;\n    };\n  }\n\n  /**\n   * 'minItems' validator\n   *\n   * Requires a form array to have a minimum number of values.\n   *\n   * // {number} minimumItems - minimum number of items allowed\n   * // {IValidatorFn}\n   */\n  static minItems(minimumItems: number): IValidatorFn {\n    if (!hasValue(minimumItems)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentItems = isArray(control.value) ? control.value.length : 0;\n      const isValid = currentItems >= minimumItems;\n      return xor(isValid, invert) ?\n        null : { 'minItems': { minimumItems, currentItems } };\n    };\n  }\n\n  /**\n   * 'maxItems' validator\n   *\n   * Requires a form array to have a maximum number of values.\n   *\n   * // {number} maximumItems - maximum number of items allowed\n   * // {IValidatorFn}\n   */\n  static maxItems(maximumItems: number): IValidatorFn {\n    if (!hasValue(maximumItems)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentItems = isArray(control.value) ? control.value.length : 0;\n      const isValid = currentItems <= maximumItems;\n      return xor(isValid, invert) ?\n        null : { 'maxItems': { maximumItems, currentItems } };\n    };\n  }\n\n  /**\n   * 'uniqueItems' validator\n   *\n   * Requires values in a form array to be unique.\n   *\n   * // {boolean = true} unique? - true to validate, false to disable\n   * // {IValidatorFn}\n   */\n  static uniqueItems(unique = true): IValidatorFn {\n    if (!unique) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const sorted: any[] = control.value.slice().sort();\n      const duplicateItems = [];\n      for (let i = 1; i < sorted.length; i++) {\n        if (sorted[i - 1] === sorted[i] && duplicateItems.includes(sorted[i])) {\n          duplicateItems.push(sorted[i]);\n        }\n      }\n      const isValid = !duplicateItems.length;\n      return xor(isValid, invert) ?\n        null : { 'uniqueItems': { duplicateItems } };\n    };\n  }\n\n  /**\n   * 'contains' validator\n   *\n   * TODO: Complete this validator\n   *\n   * Requires values in a form array to be unique.\n   *\n   * // {boolean = true} unique? - true to validate, false to disable\n   * // {IValidatorFn}\n   */\n  static contains(requiredItem = true): IValidatorFn {\n    if (!requiredItem) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value) || !isArray(control.value)) { return null; }\n      const currentItems = control.value;\n      // const isValid = currentItems.some(item =>\n      //\n      // );\n      const isValid = true;\n      return xor(isValid, invert) ?\n        null : { 'contains': { requiredItem, currentItems } };\n    };\n  }\n\n  /**\n   * No-op validator. Included for backward compatibility.\n   */\n  static nullValidator(control: AbstractControl): ValidationErrors|null {\n    return null;\n  }\n\n  /**\n   * Validator transformation functions:\n   * composeAnyOf, composeOneOf, composeAllOf, composeNot,\n   * compose, composeAsync\n   *\n   * TODO: Add composeAnyOfAsync, composeOneOfAsync,\n   *           composeAllOfAsync, composeNotAsync\n   */\n\n  /**\n   * 'composeAnyOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid if any one or more of the submitted validators are\n   * valid. If every validator is invalid, it returns combined errors from\n   * all validators.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeAnyOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const arrayOfErrors =\n        _executeValidators(control, presentValidators, invert).filter(isDefined);\n      const isValid = validators.length > arrayOfErrors.length;\n      return xor(isValid, invert) ?\n        null : _mergeObjects(...arrayOfErrors, { 'anyOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeOneOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid only if exactly one of the submitted validators\n   * is valid. Otherwise returns combined information from all validators,\n   * both valid and invalid.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeOneOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const arrayOfErrors =\n        _executeValidators(control, presentValidators);\n      const validControls =\n        validators.length - arrayOfErrors.filter(isDefined).length;\n      const isValid = validControls === 1;\n      if (xor(isValid, invert)) { return null; }\n      const arrayOfValids =\n        _executeValidators(control, presentValidators, invert);\n      return _mergeObjects(...arrayOfErrors, ...arrayOfValids, { 'oneOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeAllOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid only if all the submitted validators are individually\n   * valid. Otherwise it returns combined errors from all invalid validators.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeAllOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const combinedErrors = _mergeErrors(\n        _executeValidators(control, presentValidators, invert)\n      );\n      const isValid = combinedErrors === null;\n      return (xor(isValid, invert)) ?\n        null : _mergeObjects(combinedErrors, { 'allOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeNot' validator inversion function\n   *\n   * Accepts a single validator function and inverts its result.\n   * Returns valid if the submitted validator is invalid, and\n   * returns invalid if the submitted validator is valid.\n   * (Note: this function can itself be inverted\n   *   - e.g. composeNot(composeNot(validator)) -\n   *   but this can be confusing and is therefore not recommended.)\n   *\n   * // {IValidatorFn[]} validators - validator(s) to invert\n   * // {IValidatorFn} - new validator function that returns opposite result\n   */\n  static composeNot(validator: IValidatorFn): IValidatorFn {\n    if (!validator) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const error = validator(control, !invert);\n      const isValid = error === null;\n      return (xor(isValid, invert)) ?\n        null : _mergeObjects(error, { 'not': !invert });\n    };\n  }\n\n  /**\n   * 'compose' validator combination function\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static compose(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null =>\n      _mergeErrors(_executeValidators(control, presentValidators, invert));\n  }\n\n  /**\n   * 'composeAsync' async validator combination function\n   *\n   * // {AsyncIValidatorFn[]} async validators - array of async validators\n   * // {AsyncIValidatorFn} - single combined async validator function\n   */\n  static composeAsync(validators: AsyncIValidatorFn[]): AsyncIValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl) => {\n      const observables =\n        _executeAsyncValidators(control, presentValidators).map(toObservable);\n      return map.call(forkJoin(observables), _mergeErrors);\n    };\n  }\n\n  // Additional angular validators (not used by Angualr JSON Schema Form)\n  // From https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\n\n  /**\n   * Validator that requires controls to have a value greater than a number.\n   */\n  static min(min: number): ValidatorFn {\n    if (!hasValue(min)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl): ValidationErrors|null => {\n      // don't validate empty values to allow optional controls\n      if (isEmpty(control.value) || isEmpty(min)) { return null; }\n      const value = parseFloat(control.value);\n      const actual = control.value;\n      // Controls with NaN values after parsing should be treated as not having a\n      // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n      return isNaN(value) || value >= min ? null : { 'min': { min, actual } };\n    };\n  }\n\n  /**\n   * Validator that requires controls to have a value less than a number.\n   */\n  static max(max: number): ValidatorFn {\n    if (!hasValue(max)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl): ValidationErrors|null => {\n      // don't validate empty values to allow optional controls\n      if (isEmpty(control.value) || isEmpty(max)) { return null; }\n      const value = parseFloat(control.value);\n      const actual = control.value;\n      // Controls with NaN values after parsing should be treated as not having a\n      // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n      return isNaN(value) || value <= max ? null : { 'max': { max, actual } };\n    };\n  }\n\n  /**\n   * Validator that requires control value to be true.\n   */\n  static requiredTrue(control: AbstractControl): ValidationErrors|null {\n    if (!control) { return JsonValidators.nullValidator; }\n    return control.value === true ? null : { 'required': true };\n  }\n\n  /**\n   * Validator that performs email validation.\n   */\n  static email(control: AbstractControl): ValidationErrors|null {\n    if (!control) { return JsonValidators.nullValidator; }\n    const EMAIL_REGEXP =\n      // tslint:disable-next-line:max-line-length\n      /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n  }\n}\n","import isEqual from 'lodash/isEqual';\n\nimport {\n  isArray, isEmpty, isNumber, isObject, isString\n} from './validator.functions';\nimport { hasOwn, uniqueItems, commonItems } from './utility.functions';\nimport { JsonPointer, Pointer } from './jsonpointer.functions';\n\n/**\n * 'mergeSchemas' function\n *\n * Merges multiple JSON schemas into a single schema with combined rules.\n *\n * If able to logically merge properties from all schemas,\n * returns a single schema object containing all merged properties.\n *\n * Example: ({ a: b, max: 1 }, { c: d, max: 2 }) => { a: b, c: d, max: 1 }\n *\n * If unable to logically merge, returns an allOf schema object containing\n * an array of the original schemas;\n *\n * Example: ({ a: b }, { a: d }) => { allOf: [ { a: b }, { a: d } ] }\n *\n * //   schemas - one or more input schemas\n * //  - merged schema\n */\nexport function mergeSchemas(...schemas) {\n  schemas = schemas.filter(schema => !isEmpty(schema));\n  if (schemas.some(schema => !isObject(schema))) { return null; }\n  const combinedSchema: any = {};\n  for (const schema of schemas) {\n    for (const key of Object.keys(schema)) {\n      const combinedValue = combinedSchema[key];\n      const schemaValue = schema[key];\n      if (!hasOwn(combinedSchema, key) || isEqual(combinedValue, schemaValue)) {\n        combinedSchema[key] = schemaValue;\n      } else {\n        switch (key) {\n          case 'allOf':\n            // Combine all items from both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.allOf = mergeSchemas(...combinedValue, ...schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'additionalItems': case 'additionalProperties':\n          case 'contains': case 'propertyNames':\n            // Merge schema objects\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              combinedSchema[key] = mergeSchemas(combinedValue, schemaValue);\n            // additionalProperties == false in any schema overrides all other values\n            } else if (\n              key === 'additionalProperties' &&\n              (combinedValue === false || schemaValue === false)\n            ) {\n              combinedSchema.combinedSchema = false;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'anyOf': case 'oneOf': case 'enum':\n            // Keep only items that appear in both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema[key] = combinedValue.filter(item1 =>\n                schemaValue.findIndex(item2 => isEqual(item1, item2)) > -1\n              );\n              if (!combinedSchema[key].length) { return { allOf: [ ...schemas ] }; }\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'definitions':\n            // Combine keys from both objects\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // Don't combine matching keys with different values\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.definitions = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'dependencies':\n            // Combine all keys from both objects\n            // and merge schemas on matching keys,\n            // converting from arrays to objects if necessary\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If both keys are arrays, include all items from both arrays,\n                // excluding duplicates\n                } else if (\n                  isArray(schemaValue[subKey]) && isArray(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    uniqueItems(...combinedObject[subKey], ...schemaValue[subKey]);\n                // If either key is an object, merge the schemas\n                } else if (\n                  (isArray(schemaValue[subKey]) || isObject(schemaValue[subKey])) &&\n                  (isArray(combinedObject[subKey]) || isObject(combinedObject[subKey]))\n                ) {\n                  // If either key is an array, convert it to an object first\n                  const required = isArray(combinedSchema.required) ?\n                    combinedSchema.required : [];\n                  const combinedDependency = isArray(combinedObject[subKey]) ?\n                    { required: uniqueItems(...required, combinedObject[subKey]) } :\n                    combinedObject[subKey];\n                  const schemaDependency = isArray(schemaValue[subKey]) ?\n                    { required: uniqueItems(...required, schemaValue[subKey]) } :\n                    schemaValue[subKey];\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedDependency, schemaDependency);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.dependencies = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'items':\n            // If arrays, keep only items that appear in both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.items = combinedValue.filter(item1 =>\n                schemaValue.findIndex(item2 => isEqual(item1, item2)) > -1\n              );\n              if (!combinedSchema.items.length) { return { allOf: [ ...schemas ] }; }\n            // If both keys are objects, merge them\n            } else if (isObject(combinedValue) && isObject(schemaValue)) {\n              combinedSchema.items = mergeSchemas(combinedValue, schemaValue);\n            // If object + array, combine object with each array item\n            } else if (isArray(combinedValue) && isObject(schemaValue)) {\n              combinedSchema.items =\n                combinedValue.map(item => mergeSchemas(item, schemaValue));\n            } else if (isObject(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.items =\n                schemaValue.map(item => mergeSchemas(item, combinedValue));\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'multipleOf':\n            // TODO: Adjust to correctly handle decimal values\n            // If numbers, set to least common multiple\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              const gcd = (x, y) => !y ? x : gcd(y, x % y);\n              const lcm = (x, y) => (x * y) / gcd(x, y);\n              combinedSchema.multipleOf = lcm(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'maximum': case 'exclusiveMaximum': case 'maxLength':\n          case 'maxItems': case 'maxProperties':\n            // If numbers, set to lowest value\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              combinedSchema[key] = Math.min(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'minimum': case 'exclusiveMinimum': case 'minLength':\n          case 'minItems': case 'minProperties':\n            // If numbers, set to highest value\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              combinedSchema[key] = Math.max(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'not':\n            // Combine not values into anyOf array\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const notAnyOf = [combinedValue, schemaValue]\n                .reduce((notAnyOfArray, notSchema) =>\n                  isArray(notSchema.anyOf) &&\n                  Object.keys(notSchema).length === 1 ?\n                    [ ...notAnyOfArray, ...notSchema.anyOf ] :\n                    [ ...notAnyOfArray, notSchema ]\n                , []);\n              // TODO: Remove duplicate items from array\n              combinedSchema.not = { anyOf: notAnyOf };\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'patternProperties':\n            // Combine all keys from both objects\n            // and merge schemas on matching keys\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If both keys are objects, merge them\n                } else if (\n                  isObject(schemaValue[subKey]) && isObject(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.patternProperties = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'properties':\n            // Combine all keys from both objects\n            // unless additionalProperties === false\n            // and merge schemas on matching keys\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              // If new schema has additionalProperties,\n              // merge or remove non-matching property keys in combined schema\n              if (hasOwn(schemaValue, 'additionalProperties')) {\n                Object.keys(combinedValue)\n                  .filter(combinedKey => !Object.keys(schemaValue).includes(combinedKey))\n                  .forEach(nonMatchingKey => {\n                    if (schemaValue.additionalProperties === false) {\n                      delete combinedObject[nonMatchingKey];\n                    } else if (isObject(schemaValue.additionalProperties)) {\n                      combinedObject[nonMatchingKey] = mergeSchemas(\n                        combinedObject[nonMatchingKey],\n                        schemaValue.additionalProperties\n                      );\n                    }\n                  });\n              }\n              for (const subKey of Object.keys(schemaValue)) {\n                if (isEqual(combinedObject[subKey], schemaValue[subKey]) || (\n                  !hasOwn(combinedObject, subKey) &&\n                  !hasOwn(combinedObject, 'additionalProperties')\n                )) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If combined schema has additionalProperties,\n                // merge or ignore non-matching property keys in new schema\n                } else if (\n                  !hasOwn(combinedObject, subKey) &&\n                  hasOwn(combinedObject, 'additionalProperties')\n                ) {\n                  // If combinedObject.additionalProperties === false,\n                  // do nothing (don't set key)\n                  // If additionalProperties is object, merge with new key\n                  if (isObject(combinedObject.additionalProperties)) {\n                    combinedObject[subKey] = mergeSchemas(\n                      combinedObject.additionalProperties, schemaValue[subKey]\n                    );\n                  }\n                // If both keys are objects, merge them\n                } else if (\n                  isObject(schemaValue[subKey]) &&\n                  isObject(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.properties = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'required':\n            // If arrays, include all items from both arrays, excluding duplicates\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.required = uniqueItems(...combinedValue, ...schemaValue);\n            // If booleans, aet true if either true\n            } else if (\n              typeof schemaValue === 'boolean' &&\n              typeof combinedValue === 'boolean'\n            ) {\n              combinedSchema.required = !!combinedValue || !!schemaValue;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case '$schema': case '$id': case 'id':\n            // Don't combine these keys\n          break;\n          case 'title': case 'description': case '$comment':\n            // Return the last value, overwriting any previous one\n            // These properties are not used for validation, so conflicts don't matter\n            combinedSchema[key] = schemaValue;\n          break;\n          case 'type':\n            if (\n              (isArray(schemaValue) || isString(schemaValue)) &&\n              (isArray(combinedValue) || isString(combinedValue))\n            ) {\n              const combinedTypes = commonItems(combinedValue, schemaValue);\n              if (!combinedTypes.length) { return { allOf: [ ...schemas ] }; }\n              combinedSchema.type = combinedTypes.length > 1 ? combinedTypes : combinedTypes[0];\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'uniqueItems':\n            // Set true if either true\n            combinedSchema.uniqueItems = !!combinedValue || !!schemaValue;\n          break;\n          default:\n            return { allOf: [ ...schemas ] };\n        }\n      }\n    }\n  }\n  return combinedSchema;\n}\n","import cloneDeep from 'lodash/cloneDeep';\nimport { forEach, hasOwn, mergeFilteredObject } from './utility.functions';\nimport {\n  getType,\n  hasValue,\n  inArray,\n  isArray,\n  isNumber,\n  isObject,\n  isString\n  } from './validator.functions';\nimport { JsonPointer } from './jsonpointer.functions';\nimport { mergeSchemas } from './merge-schemas.function';\n\n\n/**\n * JSON Schema function library:\n *\n * buildSchemaFromLayout:   TODO: Write this function\n *\n * buildSchemaFromData:\n *\n * getFromSchema:\n *\n * removeRecursiveReferences:\n *\n * getInputType:\n *\n * checkInlineType:\n *\n * isInputRequired:\n *\n * updateInputOptions:\n *\n * getTitleMapFromOneOf:\n *\n * getControlValidators:\n *\n * resolveSchemaReferences:\n *\n * getSubSchema:\n *\n * combineAllOf:\n *\n * fixRequiredArrayProperties:\n */\n\n/**\n * 'buildSchemaFromLayout' function\n *\n * TODO: Build a JSON Schema from a JSON Form layout\n *\n * //   layout - The JSON Form layout\n * //  - The new JSON Schema\n */\nexport function buildSchemaFromLayout(layout) {\n  return;\n  // let newSchema: any = { };\n  // const walkLayout = (layoutItems: any[], callback: Function): any[] => {\n  //   let returnArray: any[] = [];\n  //   for (let layoutItem of layoutItems) {\n  //     const returnItem: any = callback(layoutItem);\n  //     if (returnItem) { returnArray = returnArray.concat(callback(layoutItem)); }\n  //     if (layoutItem.items) {\n  //       returnArray = returnArray.concat(walkLayout(layoutItem.items, callback));\n  //     }\n  //   }\n  //   return returnArray;\n  // };\n  // walkLayout(layout, layoutItem => {\n  //   let itemKey: string;\n  //   if (typeof layoutItem === 'string') {\n  //     itemKey = layoutItem;\n  //   } else if (layoutItem.key) {\n  //     itemKey = layoutItem.key;\n  //   }\n  //   if (!itemKey) { return; }\n  //   //\n  // });\n}\n\n/**\n * 'buildSchemaFromData' function\n *\n * Build a JSON Schema from a data object\n *\n * //   data - The data object\n * //  { boolean = false } requireAllFields - Require all fields?\n * //  { boolean = true } isRoot - is root\n * //  - The new JSON Schema\n */\nexport function buildSchemaFromData(\n  data, requireAllFields = false, isRoot = true\n) {\n  const newSchema: any = {};\n  const getFieldType = (value: any): string => {\n    const fieldType = getType(value, 'strict');\n    return { integer: 'number', null: 'string' }[fieldType] || fieldType;\n  };\n  const buildSubSchema = (value) =>\n    buildSchemaFromData(value, requireAllFields, false);\n  if (isRoot) { newSchema.$schema = 'http://json-schema.org/draft-06/schema#'; }\n  newSchema.type = getFieldType(data);\n  if (newSchema.type === 'object') {\n    newSchema.properties = {};\n    if (requireAllFields) { newSchema.required = []; }\n    for (const key of Object.keys(data)) {\n      newSchema.properties[key] = buildSubSchema(data[key]);\n      if (requireAllFields) { newSchema.required.push(key); }\n    }\n  } else if (newSchema.type === 'array') {\n    newSchema.items = data.map(buildSubSchema);\n    // If all items are the same type, use an object for items instead of an array\n    if ((new Set(data.map(getFieldType))).size === 1) {\n      newSchema.items = newSchema.items.reduce((a, b) => ({ ...a, ...b }), {});\n    }\n    if (requireAllFields) { newSchema.minItems = 1; }\n  }\n  return newSchema;\n}\n\n/**\n * 'getFromSchema' function\n *\n * Uses a JSON Pointer for a value within a data object to retrieve\n * the schema for that value within schema for the data object.\n *\n * The optional third parameter can also be set to return something else:\n * 'schema' (default): the schema for the value indicated by the data pointer\n * 'parentSchema': the schema for the value's parent object or array\n * 'schemaPointer': a pointer to the value's schema within the object's schema\n * 'parentSchemaPointer': a pointer to the schema for the value's parent object or array\n *\n * //   schema - The schema to get the sub-schema from\n * //  { Pointer } dataPointer - JSON Pointer (string or array)\n * //  { string = 'schema' } returnType - what to return?\n * //  - The located sub-schema\n */\nexport function getFromSchema(schema, dataPointer, returnType = 'schema') {\n  const dataPointerArray: any[] = JsonPointer.parse(dataPointer);\n  if (dataPointerArray === null) {\n    console.error(`getFromSchema error: Invalid JSON Pointer: ${dataPointer}`);\n    return null;\n  }\n  let subSchema = schema;\n  const schemaPointer = [];\n  const length = dataPointerArray.length;\n  if (returnType.slice(0, 6) === 'parent') { dataPointerArray.length--; }\n  for (let i = 0; i < length; ++i) {\n    const parentSchema = subSchema;\n    const key = dataPointerArray[i];\n    let subSchemaFound = false;\n    if (typeof subSchema !== 'object') {\n      console.error(`getFromSchema error: Unable to find \"${key}\" key in schema.`);\n      console.error(schema);\n      console.error(dataPointer);\n      return null;\n    }\n    if (subSchema.type === 'array' && (!isNaN(key) || key === '-')) {\n      if (hasOwn(subSchema, 'items')) {\n        if (isObject(subSchema.items)) {\n          subSchemaFound = true;\n          subSchema = subSchema.items;\n          schemaPointer.push('items');\n        } else if (isArray(subSchema.items)) {\n          if (!isNaN(key) && subSchema.items.length >= +key) {\n            subSchemaFound = true;\n            subSchema = subSchema.items[+key];\n            schemaPointer.push('items', key);\n          }\n        }\n      }\n      if (!subSchemaFound && isObject(subSchema.additionalItems)) {\n        subSchemaFound = true;\n        subSchema = subSchema.additionalItems;\n        schemaPointer.push('additionalItems');\n      } else if (subSchema.additionalItems !== false) {\n        subSchemaFound = true;\n        subSchema = { };\n        schemaPointer.push('additionalItems');\n      }\n    } else if (subSchema.type === 'object') {\n      if (isObject(subSchema.properties) && hasOwn(subSchema.properties, key)) {\n        subSchemaFound = true;\n        subSchema = subSchema.properties[key];\n        schemaPointer.push('properties', key);\n      } else if (isObject(subSchema.additionalProperties)) {\n        subSchemaFound = true;\n        subSchema = subSchema.additionalProperties;\n        schemaPointer.push('additionalProperties');\n      } else if (subSchema.additionalProperties !== false) {\n        subSchemaFound = true;\n        subSchema = { };\n        schemaPointer.push('additionalProperties');\n      }\n    }\n    if (!subSchemaFound) {\n      console.error(`getFromSchema error: Unable to find \"${key}\" item in schema.`);\n      console.error(schema);\n      console.error(dataPointer);\n      return;\n    }\n  }\n  return returnType.slice(-7) === 'Pointer' ? schemaPointer : subSchema;\n}\n\n/**\n * 'removeRecursiveReferences' function\n *\n * Checks a JSON Pointer against a map of recursive references and returns\n * a JSON Pointer to the shallowest equivalent location in the same object.\n *\n * Using this functions enables an object to be constructed with unlimited\n * recursion, while maintaing a fixed set of metadata, such as field data types.\n * The object can grow as large as it wants, and deeply recursed nodes can\n * just refer to the metadata for their shallow equivalents, instead of having\n * to add additional redundant metadata for each recursively added node.\n *\n * Example:\n *\n * pointer:         '/stuff/and/more/and/more/and/more/and/more/stuff'\n * recursiveRefMap: [['/stuff/and/more/and/more', '/stuff/and/more/']]\n * returned:        '/stuff/and/more/stuff'\n *\n * //  { Pointer } pointer -\n * //  { Map<string, string> } recursiveRefMap -\n * //  { Map<string, number> = new Map() } arrayMap - optional\n * // { string } -\n */\nexport function removeRecursiveReferences(\n  pointer, recursiveRefMap, arrayMap = new Map()\n) {\n  if (!pointer) { return ''; }\n  let genericPointer =\n    JsonPointer.toGenericPointer(JsonPointer.compile(pointer), arrayMap);\n  if (genericPointer.indexOf('/') === -1) { return genericPointer; }\n  let possibleReferences = true;\n  while (possibleReferences) {\n    possibleReferences = false;\n    recursiveRefMap.forEach((toPointer, fromPointer) => {\n      if (JsonPointer.isSubPointer(toPointer, fromPointer)) {\n        while (JsonPointer.isSubPointer(fromPointer, genericPointer, true)) {\n          genericPointer = JsonPointer.toGenericPointer(\n            toPointer + genericPointer.slice(fromPointer.length), arrayMap\n          );\n          possibleReferences = true;\n        }\n      }\n    });\n  }\n  return genericPointer;\n}\n\n/**\n * 'getInputType' function\n *\n * //   schema\n * //  { any = null } layoutNode\n * // { string }\n */\nexport function getInputType(schema, layoutNode: any = null) {\n  // x-schema-form = Angular Schema Form compatibility\n  // widget & component = React Jsonschema Form compatibility\n  const controlType = JsonPointer.getFirst([\n    [schema, '/x-schema-form/type'],\n    [schema, '/x-schema-form/widget/component'],\n    [schema, '/x-schema-form/widget'],\n    [schema, '/widget/component'],\n    [schema, '/widget']\n  ]);\n  if (isString(controlType)) { return checkInlineType(controlType, schema, layoutNode); }\n  let schemaType = schema.type;\n  if (schemaType) {\n    if (isArray(schemaType)) { // If multiple types listed, use most inclusive type\n      schemaType =\n        inArray('object', schemaType) && hasOwn(schema, 'properties') ? 'object' :\n        inArray('array', schemaType) && hasOwn(schema, 'items') ? 'array' :\n        inArray('array', schemaType) && hasOwn(schema, 'additionalItems') ? 'array' :\n        inArray('string', schemaType) ? 'string' :\n        inArray('number', schemaType) ? 'number' :\n        inArray('integer', schemaType) ? 'integer' :\n        inArray('boolean', schemaType) ? 'boolean' : 'unknown';\n    }\n    if (schemaType === 'boolean') { return 'checkbox'; }\n    if (schemaType === 'object') {\n      if (hasOwn(schema, 'properties') || hasOwn(schema, 'additionalProperties')) {\n        return 'section';\n      }\n      // TODO: Figure out how to handle additionalProperties\n      if (hasOwn(schema, '$ref')) { return '$ref'; }\n    }\n    if (schemaType === 'array') {\n      const itemsObject = JsonPointer.getFirst([\n        [schema, '/items'],\n        [schema, '/additionalItems']\n      ]) || {};\n      return hasOwn(itemsObject, 'enum') && schema.maxItems !== 1 ?\n        checkInlineType('checkboxes', schema, layoutNode) : 'array';\n    }\n    if (schemaType === 'null') { return 'none'; }\n    if (JsonPointer.has(layoutNode, '/options/titleMap') ||\n      hasOwn(schema, 'enum') || getTitleMapFromOneOf(schema, null, true)\n    ) { return 'select'; }\n    if (schemaType === 'number' || schemaType === 'integer') {\n      return (schemaType === 'integer' || hasOwn(schema, 'multipleOf')) &&\n        hasOwn(schema, 'maximum') && hasOwn(schema, 'minimum') ? 'range' : schemaType;\n    }\n    if (schemaType === 'string') {\n      return {\n        'color': 'color',\n        'date': 'date',\n        'date-time': 'datetime-local',\n        'email': 'email',\n        'uri': 'url',\n      }[schema.format] || 'text';\n    }\n  }\n  if (hasOwn(schema, '$ref')) { return '$ref'; }\n  if (isArray(schema.oneOf) || isArray(schema.anyOf)) { return 'one-of'; }\n  console.error(`getInputType error: Unable to determine input type for ${schemaType}`);\n  console.error('schema', schema);\n  if (layoutNode) { console.error('layoutNode', layoutNode); }\n  return 'none';\n}\n\n/**\n * 'checkInlineType' function\n *\n * Checks layout and schema nodes for 'inline: true', and converts\n * 'radios' or 'checkboxes' to 'radios-inline' or 'checkboxes-inline'\n *\n * //  { string } controlType -\n * //   schema -\n * //  { any = null } layoutNode -\n * // { string }\n */\nexport function checkInlineType(controlType, schema, layoutNode: any = null) {\n  if (!isString(controlType) || (\n    controlType.slice(0, 8) !== 'checkbox' && controlType.slice(0, 5) !== 'radio'\n  )) {\n    return controlType;\n  }\n  if (\n    JsonPointer.getFirst([\n      [layoutNode, '/inline'],\n      [layoutNode, '/options/inline'],\n      [schema, '/inline'],\n      [schema, '/x-schema-form/inline'],\n      [schema, '/x-schema-form/options/inline'],\n      [schema, '/x-schema-form/widget/inline'],\n      [schema, '/x-schema-form/widget/component/inline'],\n      [schema, '/x-schema-form/widget/component/options/inline'],\n      [schema, '/widget/inline'],\n      [schema, '/widget/component/inline'],\n      [schema, '/widget/component/options/inline'],\n    ]) === true\n  ) {\n    return controlType.slice(0, 5) === 'radio' ?\n      'radios-inline' : 'checkboxes-inline';\n  } else {\n    return controlType;\n  }\n}\n\n/**\n * 'isInputRequired' function\n *\n * Checks a JSON Schema to see if an item is required\n *\n * //   schema - the schema to check\n * //  { string } schemaPointer - the pointer to the item to check\n * // { boolean } - true if the item is required, false if not\n */\nexport function isInputRequired(schema, schemaPointer) {\n  if (!isObject(schema)) {\n    console.error('isInputRequired error: Input schema must be an object.');\n    return false;\n  }\n  const listPointerArray = JsonPointer.parse(schemaPointer);\n  if (isArray(listPointerArray)) {\n    if (!listPointerArray.length) { return schema.required === true; }\n    const keyName = listPointerArray.pop();\n    const nextToLastKey = listPointerArray[listPointerArray.length - 1];\n    if (['properties', 'additionalProperties', 'patternProperties', 'items', 'additionalItems']\n      .includes(nextToLastKey)\n    ) {\n      listPointerArray.pop();\n    }\n    const parentSchema = JsonPointer.get(schema, listPointerArray) || {};\n    if (isArray(parentSchema.required)) {\n      return parentSchema.required.includes(keyName);\n    }\n    if (parentSchema.type === 'array') {\n      return hasOwn(parentSchema, 'minItems') &&\n        isNumber(keyName) &&\n        +parentSchema.minItems > +keyName;\n    }\n  }\n  return false;\n}\n\n/**\n * 'updateInputOptions' function\n *\n * //   layoutNode\n * //   schema\n * //   jsf\n * // { void }\n */\nexport function updateInputOptions(layoutNode, schema, jsf) {\n  if (!isObject(layoutNode) || !isObject(layoutNode.options)) { return; }\n\n  // Set all option values in layoutNode.options\n  const newOptions: any = { };\n  const fixUiKeys = key => key.slice(0, 3).toLowerCase() === 'ui:' ? key.slice(3) : key;\n  mergeFilteredObject(newOptions, jsf.formOptions.defautWidgetOptions, [], fixUiKeys);\n  [ [ JsonPointer.get(schema, '/ui:widget/options'), [] ],\n    [ JsonPointer.get(schema, '/ui:widget'), [] ],\n    [ schema, [\n      'additionalProperties', 'additionalItems', 'properties', 'items',\n      'required', 'type', 'x-schema-form', '$ref'\n    ] ],\n    [ JsonPointer.get(schema, '/x-schema-form/options'), [] ],\n    [ JsonPointer.get(schema, '/x-schema-form'), ['items', 'options'] ],\n    [ layoutNode, [\n      '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\n      'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\n    ] ],\n    [ layoutNode.options, [] ],\n  ].forEach(([ object, excludeKeys ]) =>\n    mergeFilteredObject(newOptions, object, excludeKeys, fixUiKeys)\n  );\n  if (!hasOwn(newOptions, 'titleMap')) {\n    let newTitleMap: any = null;\n    newTitleMap = getTitleMapFromOneOf(schema, newOptions.flatList);\n    if (newTitleMap) { newOptions.titleMap = newTitleMap; }\n    if (!hasOwn(newOptions, 'titleMap') && !hasOwn(newOptions, 'enum') && hasOwn(schema, 'items')) {\n      if (JsonPointer.has(schema, '/items/titleMap')) {\n        newOptions.titleMap = schema.items.titleMap;\n      } else if (JsonPointer.has(schema, '/items/enum')) {\n        newOptions.enum = schema.items.enum;\n        if (!hasOwn(newOptions, 'enumNames') && JsonPointer.has(schema, '/items/enumNames')) {\n          newOptions.enumNames = schema.items.enumNames;\n        }\n      } else if (JsonPointer.has(schema, '/items/oneOf')) {\n        newTitleMap = getTitleMapFromOneOf(schema.items, newOptions.flatList);\n        if (newTitleMap) { newOptions.titleMap = newTitleMap; }\n      }\n    }\n  }\n\n  // If schema type is integer, enforce by setting multipleOf = 1\n  if (schema.type === 'integer' && !hasValue(newOptions.multipleOf)) {\n    newOptions.multipleOf = 1;\n  }\n\n  // Copy any typeahead word lists to options.typeahead.source\n  if (JsonPointer.has(newOptions, '/autocomplete/source')) {\n    newOptions.typeahead = newOptions.autocomplete;\n  } else if (JsonPointer.has(newOptions, '/tagsinput/source')) {\n    newOptions.typeahead = newOptions.tagsinput;\n  } else if (JsonPointer.has(newOptions, '/tagsinput/typeahead/source')) {\n    newOptions.typeahead = newOptions.tagsinput.typeahead;\n  }\n\n  layoutNode.options = newOptions;\n}\n\n/**\n * 'getTitleMapFromOneOf' function\n *\n * //  { schema } schema\n * //  { boolean = null } flatList\n * //  { boolean = false } validateOnly\n * // { validators }\n */\nexport function getTitleMapFromOneOf(\n  schema: any = {}, flatList: boolean = null, validateOnly = false\n) {\n  let titleMap = null;\n  const oneOf = schema.oneOf || schema.anyOf || null;\n  if (isArray(oneOf) && oneOf.every(item => item.title)) {\n    if (oneOf.every(item => isArray(item.enum) && item.enum.length === 1)) {\n      if (validateOnly) { return true; }\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.enum[0] }));\n    } else if (oneOf.every(item => item.const)) {\n      if (validateOnly) { return true; }\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.const }));\n    }\n\n    // if flatList !== false and some items have colons, make grouped map\n    if (flatList !== false && (titleMap || [])\n      .filter(title => ((title || {}).name || '').indexOf(': ')).length > 1\n    ) {\n\n      // Split name on first colon to create grouped map (name -> group: name)\n      const newTitleMap = titleMap.map(title => {\n        const [group, name] = title.name.split(/: (.+)/);\n        return group && name ? { ...title, group, name } : title;\n      });\n\n      // If flatList === true or at least one group has multiple items, use grouped map\n      if (flatList === true || newTitleMap.some((title, index) => index &&\n        hasOwn(title, 'group') && title.group === newTitleMap[index - 1].group\n      )) {\n        titleMap = newTitleMap;\n      }\n    }\n  }\n  return validateOnly ? false : titleMap;\n}\n\n/**\n * 'getControlValidators' function\n *\n * //  schema\n * // { validators }\n */\nexport function getControlValidators(schema) {\n  if (!isObject(schema)) { return null; }\n  const validators: any = { };\n  if (hasOwn(schema, 'type')) {\n    switch (schema.type) {\n      case 'string':\n        forEach(['pattern', 'format', 'minLength', 'maxLength'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'number': case 'integer':\n        forEach(['Minimum', 'Maximum'], (ucLimit) => {\n          const eLimit = 'exclusive' + ucLimit;\n          const limit = ucLimit.toLowerCase();\n          if (hasOwn(schema, limit)) {\n            const exclusive = hasOwn(schema, eLimit) && schema[eLimit] === true;\n            validators[limit] = [schema[limit], exclusive];\n          }\n        });\n        forEach(['multipleOf', 'type'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'object':\n        forEach(['minProperties', 'maxProperties', 'dependencies'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'array':\n        forEach(['minItems', 'maxItems', 'uniqueItems'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n    }\n  }\n  if (hasOwn(schema, 'enum')) { validators.enum = [schema.enum]; }\n  return validators;\n}\n\n/**\n * 'resolveSchemaReferences' function\n *\n * Find all $ref links in schema and save links and referenced schemas in\n * schemaRefLibrary, schemaRecursiveRefMap, and dataRecursiveRefMap\n *\n * //  schema\n * //  schemaRefLibrary\n * // { Map<string, string> } schemaRecursiveRefMap\n * // { Map<string, string> } dataRecursiveRefMap\n * // { Map<string, number> } arrayMap\n * //\n */\nexport function resolveSchemaReferences(\n  schema, schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, arrayMap\n) {\n  if (!isObject(schema)) {\n    console.error('resolveSchemaReferences error: schema must be an object.');\n    return;\n  }\n  const refLinks = new Set<string>();\n  const refMapSet = new Set<string>();\n  const refMap = new Map<string, string>();\n  const recursiveRefMap = new Map<string, string>();\n  const refLibrary: any = {};\n\n  // Search schema for all $ref links, and build full refLibrary\n  JsonPointer.forEachDeep(schema, (subSchema, subSchemaPointer) => {\n    if (hasOwn(subSchema, '$ref') && isString(subSchema['$ref'])) {\n      const refPointer = JsonPointer.compile(subSchema['$ref']);\n      refLinks.add(refPointer);\n      refMapSet.add(subSchemaPointer + '~~' + refPointer);\n      refMap.set(subSchemaPointer, refPointer);\n    }\n  });\n  refLinks.forEach(ref => refLibrary[ref] = getSubSchema(schema, ref));\n\n  // Follow all ref links and save in refMapSet,\n  // to find any multi-link recursive refernces\n  let checkRefLinks = true;\n  while (checkRefLinks) {\n    checkRefLinks = false;\n    Array.from(refMap).forEach(([fromRef1, toRef1]) => Array.from(refMap)\n      .filter(([fromRef2, toRef2]) =>\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\n        !JsonPointer.isSubPointer(toRef2, toRef1, true) &&\n        !refMapSet.has(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2)\n      )\n      .forEach(([fromRef2, toRef2]) => {\n        refMapSet.add(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2);\n        checkRefLinks = true;\n      })\n    );\n  }\n\n  // Build full recursiveRefMap\n  // First pass - save all internally recursive refs from refMapSet\n  Array.from(refMapSet)\n    .map(refLink => refLink.split('~~'))\n    .filter(([fromRef, toRef]) => JsonPointer.isSubPointer(toRef, fromRef))\n    .forEach(([fromRef, toRef]) => recursiveRefMap.set(fromRef, toRef));\n  // Second pass - create recursive versions of any other refs that link to recursive refs\n  Array.from(refMap)\n    .filter(([fromRef1, toRef1]) => Array.from(recursiveRefMap.keys())\n      .every(fromRef2 => !JsonPointer.isSubPointer(fromRef1, fromRef2, true))\n    )\n    .forEach(([fromRef1, toRef1]) => Array.from(recursiveRefMap)\n      .filter(([fromRef2, toRef2]) =>\n        !recursiveRefMap.has(fromRef1 + fromRef2.slice(toRef1.length)) &&\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\n        !JsonPointer.isSubPointer(toRef1, fromRef1, true)\n      )\n      .forEach(([fromRef2, toRef2]) => recursiveRefMap.set(\n        fromRef1 + fromRef2.slice(toRef1.length),\n        fromRef1 + toRef2.slice(toRef1.length)\n      ))\n    );\n\n  // Create compiled schema by replacing all non-recursive $ref links with\n  // thieir linked schemas and, where possible, combining schemas in allOf arrays.\n  let compiledSchema = { ...schema };\n  delete compiledSchema.definitions;\n  compiledSchema =\n    getSubSchema(compiledSchema, '', refLibrary, recursiveRefMap);\n\n  // Make sure all remaining schema $refs are recursive, and build final\n  // schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\n  JsonPointer.forEachDeep(compiledSchema, (subSchema, subSchemaPointer) => {\n    if (isString(subSchema['$ref'])) {\n      let refPointer = JsonPointer.compile(subSchema['$ref']);\n      if (!JsonPointer.isSubPointer(refPointer, subSchemaPointer, true)) {\n        refPointer = removeRecursiveReferences(subSchemaPointer, recursiveRefMap);\n        JsonPointer.set(compiledSchema, subSchemaPointer, { $ref: `#${refPointer}` });\n      }\n      if (!hasOwn(schemaRefLibrary, 'refPointer')) {\n        schemaRefLibrary[refPointer] = !refPointer.length ? compiledSchema :\n          getSubSchema(compiledSchema, refPointer, schemaRefLibrary, recursiveRefMap);\n      }\n      if (!schemaRecursiveRefMap.has(subSchemaPointer)) {\n        schemaRecursiveRefMap.set(subSchemaPointer, refPointer);\n      }\n      const fromDataRef = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\n      if (!dataRecursiveRefMap.has(fromDataRef)) {\n        const toDataRef = JsonPointer.toDataPointer(refPointer, compiledSchema);\n        dataRecursiveRefMap.set(fromDataRef, toDataRef);\n      }\n    }\n    if (subSchema.type === 'array' &&\n      (hasOwn(subSchema, 'items') || hasOwn(subSchema, 'additionalItems'))\n    ) {\n      const dataPointer = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\n      if (!arrayMap.has(dataPointer)) {\n        const tupleItems = isArray(subSchema.items) ? subSchema.items.length : 0;\n        arrayMap.set(dataPointer, tupleItems);\n      }\n    }\n  }, true);\n  return compiledSchema;\n}\n\n/**\n * 'getSubSchema' function\n *\n * //   schema\n * //  { Pointer } pointer\n * //  { object } schemaRefLibrary\n * //  { Map<string, string> } schemaRecursiveRefMap\n * //  { string[] = [] } usedPointers\n * //\n */\nexport function getSubSchema(\n  schema, pointer, schemaRefLibrary = null,\n  schemaRecursiveRefMap: Map<string, string> = null, usedPointers: string[] = []\n) {\n  if (!schemaRefLibrary || !schemaRecursiveRefMap) {\n    return JsonPointer.getCopy(schema, pointer);\n  }\n  if (typeof pointer !== 'string') { pointer = JsonPointer.compile(pointer); }\n  usedPointers = [ ...usedPointers, pointer ];\n  let newSchema: any = null;\n  if (pointer === '') {\n    newSchema = cloneDeep(schema);\n  } else {\n    const shortPointer = removeRecursiveReferences(pointer, schemaRecursiveRefMap);\n    if (shortPointer !== pointer) { usedPointers = [ ...usedPointers, shortPointer ]; }\n    newSchema = JsonPointer.getFirstCopy([\n      [schemaRefLibrary, [shortPointer]],\n      [schema, pointer],\n      [schema, shortPointer]\n    ]);\n  }\n  return JsonPointer.forEachDeepCopy(newSchema, (subSchema, subPointer) => {\n    if (isObject(subSchema)) {\n\n      // Replace non-recursive $ref links with referenced schemas\n      if (isString(subSchema.$ref)) {\n        const refPointer = JsonPointer.compile(subSchema.$ref);\n        if (refPointer.length && usedPointers.every(ptr =>\n          !JsonPointer.isSubPointer(refPointer, ptr, true)\n        )) {\n          const refSchema = getSubSchema(\n            schema, refPointer, schemaRefLibrary, schemaRecursiveRefMap, usedPointers\n          );\n          if (Object.keys(subSchema).length === 1) {\n            return refSchema;\n          } else {\n            const extraKeys = { ...subSchema };\n            delete extraKeys.$ref;\n            return mergeSchemas(refSchema, extraKeys);\n          }\n        }\n      }\n\n      // TODO: Convert schemas with 'type' arrays to 'oneOf'\n\n      // Combine allOf subSchemas\n      if (isArray(subSchema.allOf)) { return combineAllOf(subSchema); }\n\n      // Fix incorrectly placed array object required lists\n      if (subSchema.type === 'array' && isArray(subSchema.required)) {\n        return fixRequiredArrayProperties(subSchema);\n      }\n    }\n    return subSchema;\n  }, true, <string>pointer);\n}\n\n/**\n * 'combineAllOf' function\n *\n * Attempt to convert an allOf schema object into\n * a non-allOf schema object with equivalent rules.\n *\n * //   schema - allOf schema object\n * //  - converted schema object\n */\nexport function combineAllOf(schema) {\n  if (!isObject(schema) || !isArray(schema.allOf)) { return schema; }\n  let mergedSchema = mergeSchemas(...schema.allOf);\n  if (Object.keys(schema).length > 1) {\n    const extraKeys = { ...schema };\n    delete extraKeys.allOf;\n    mergedSchema = mergeSchemas(mergedSchema, extraKeys);\n  }\n  return mergedSchema;\n}\n\n/**\n * 'fixRequiredArrayProperties' function\n *\n * Fixes an incorrectly placed required list inside an array schema, by moving\n * it into items.properties or additionalItems.properties, where it belongs.\n *\n * //   schema - allOf schema object\n * //  - converted schema object\n */\nexport function fixRequiredArrayProperties(schema) {\n  if (schema.type === 'array' && isArray(schema.required)) {\n    const itemsObject = hasOwn(schema.items, 'properties') ? 'items' :\n      hasOwn(schema.additionalItems, 'properties') ? 'additionalItems' : null;\n    if (itemsObject && !hasOwn(schema[itemsObject], 'required') && (\n      hasOwn(schema[itemsObject], 'additionalProperties') ||\n      schema.required.every(key => hasOwn(schema[itemsObject].properties, key))\n    )) {\n      schema = cloneDeep(schema);\n      schema[itemsObject].required = schema.required;\n      delete schema.required;\n    }\n  }\n  return schema;\n}\n","import cloneDeep from \"lodash/cloneDeep\";\nimport filter from \"lodash/filter\";\nimport map from \"lodash/map\";\nimport {\n  AbstractControl,\n  FormArray,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n} from \"@angular/forms\";\nimport { forEach, hasOwn } from \"./utility.functions\";\nimport {\n  getControlValidators,\n  removeRecursiveReferences,\n} from \"./json-schema.functions\";\nimport {\n  hasValue,\n  inArray,\n  isArray,\n  isDate,\n  isDefined,\n  isEmpty,\n  isObject,\n  isPrimitive,\n  SchemaPrimitiveType,\n  toJavaScriptType,\n  toSchemaType,\n} from \"./validator.functions\";\nimport { JsonPointer, Pointer } from \"./jsonpointer.functions\";\nimport { JsonValidators } from \"./json.validators\";\n\n/**\n * FormGroup function library:\n *\n * buildFormGroupTemplate:  Builds a FormGroupTemplate from schema\n *\n * buildFormGroup:          Builds an Angular FormGroup from a FormGroupTemplate\n *\n * mergeValues:\n *\n * setRequiredFields:\n *\n * formatFormData:\n *\n * getControl:\n *\n * ---- TODO: ----\n * TODO: add buildFormGroupTemplateFromLayout function\n * buildFormGroupTemplateFromLayout: Builds a FormGroupTemplate from a form layout\n */\n\n/**\n * 'buildFormGroupTemplate' function\n *\n * Builds a template for an Angular FormGroup from a JSON Schema.\n *\n * TODO: add support for pattern properties\n * https://spacetelescope.github.io/understanding-json-schema/reference/object.html\n *\n * //  {any} jsf -\n * //  {any = null} nodeValue -\n * //  {boolean = true} mapArrays -\n * //  {string = ''} schemaPointer -\n * //  {string = ''} dataPointer -\n * //  {any = ''} templatePointer -\n * // {any} -\n */\nexport function buildFormGroupTemplate(\n  jsf: any,\n  nodeValue: any = null,\n  setValues = true,\n  schemaPointer = \"\",\n  dataPointer = \"\",\n  templatePointer = \"\"\n) {\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\n  if (setValues) {\n    if (\n      !isDefined(nodeValue) &&\n      (jsf.formOptions.setSchemaDefaults === true ||\n        (jsf.formOptions.setSchemaDefaults === \"auto\" &&\n          isEmpty(jsf.formValues)))\n    ) {\n      nodeValue = JsonPointer.get(jsf.schema, schemaPointer + \"/default\");\n    }\n  } else {\n    nodeValue = null;\n  }\n  // TODO: If nodeValue still not set, check layout for default value\n  const schemaType: string | string[] = JsonPointer.get(schema, \"/type\");\n  const controlType =\n    (hasOwn(schema, \"properties\") || hasOwn(schema, \"additionalProperties\")) &&\n    schemaType === \"object\"\n      ? \"FormGroup\"\n      : (hasOwn(schema, \"items\") || hasOwn(schema, \"additionalItems\")) &&\n        schemaType === \"array\"\n      ? \"FormArray\"\n      : !schemaType && hasOwn(schema, \"$ref\")\n      ? \"$ref\"\n      : \"FormControl\";\n  const shortDataPointer = removeRecursiveReferences(\n    dataPointer,\n    jsf.dataRecursiveRefMap,\n    jsf.arrayMap\n  );\n  if (!jsf.dataMap.has(shortDataPointer)) {\n    jsf.dataMap.set(shortDataPointer, new Map());\n  }\n  const nodeOptions = jsf.dataMap.get(shortDataPointer);\n  if (!nodeOptions.has(\"schemaType\")) {\n    nodeOptions.set(\"schemaPointer\", schemaPointer);\n    nodeOptions.set(\"schemaType\", schema.type);\n    if (schema.format) {\n      nodeOptions.set(\"schemaFormat\", schema.format);\n      if (!schema.type) {\n        nodeOptions.set(\"schemaType\", \"string\");\n      }\n    }\n    if (controlType) {\n      nodeOptions.set(\"templatePointer\", templatePointer);\n      nodeOptions.set(\"templateType\", controlType);\n    }\n  }\n  let controls: any;\n  const validators = getControlValidators(schema);\n  switch (controlType) {\n    case \"FormGroup\":\n      controls = {};\n      if (hasOwn(schema, \"ui:order\") || hasOwn(schema, \"properties\")) {\n        const propertyKeys =\n          schema[\"ui:order\"] || Object.keys(schema.properties);\n        if (propertyKeys.includes(\"*\") && !hasOwn(schema.properties, \"*\")) {\n          const unnamedKeys = Object.keys(schema.properties).filter(\n            (key) => !propertyKeys.includes(key)\n          );\n          for (let i = propertyKeys.length - 1; i >= 0; i--) {\n            if (propertyKeys[i] === \"*\") {\n              propertyKeys.splice(i, 1, ...unnamedKeys);\n            }\n          }\n        }\n        propertyKeys\n          .filter(\n            (key) =>\n              hasOwn(schema.properties, key) ||\n              hasOwn(schema, \"additionalProperties\")\n          )\n          .forEach(\n            (key) =>\n              (controls[key] = buildFormGroupTemplate(\n                jsf,\n                JsonPointer.get(nodeValue, [<string>key]),\n                setValues,\n                schemaPointer +\n                  (hasOwn(schema.properties, key)\n                    ? \"/properties/\" + key\n                    : \"/additionalProperties\"),\n                dataPointer + \"/\" + key,\n                templatePointer + \"/controls/\" + key\n              ))\n          );\n        jsf.formOptions.fieldsRequired = setRequiredFields(schema, controls);\n      }\n      return { controlType, controls, validators };\n\n    case \"FormArray\":\n      controls = [];\n      const minItems = Math.max(\n        schema.minItems || 0,\n        nodeOptions.get(\"minItems\") || 0\n      );\n      const maxItems = Math.min(\n        schema.maxItems || 1000,\n        nodeOptions.get(\"maxItems\") || 1000\n      );\n      let additionalItemsPointer: string = null;\n      if (isArray(schema.items)) {\n        // 'items' is an array = tuple items\n        const tupleItems =\n          nodeOptions.get(\"tupleItems\") ||\n          (isArray(schema.items) ? Math.min(schema.items.length, maxItems) : 0);\n        for (let i = 0; i < tupleItems; i++) {\n          if (i < minItems) {\n            controls.push(\n              buildFormGroupTemplate(\n                jsf,\n                isArray(nodeValue) ? nodeValue[i] : nodeValue,\n                setValues,\n                schemaPointer + \"/items/\" + i,\n                dataPointer + \"/\" + i,\n                templatePointer + \"/controls/\" + i\n              )\n            );\n          } else {\n            const schemaRefPointer = removeRecursiveReferences(\n              schemaPointer + \"/items/\" + i,\n              jsf.schemaRecursiveRefMap\n            );\n            const itemRefPointer = removeRecursiveReferences(\n              shortDataPointer + \"/\" + i,\n              jsf.dataRecursiveRefMap,\n              jsf.arrayMap\n            );\n            const itemRecursive = itemRefPointer !== shortDataPointer + \"/\" + i;\n            if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\n              jsf.templateRefLibrary[itemRefPointer] = null;\n              jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\n                jsf,\n                null,\n                setValues,\n                schemaRefPointer,\n                itemRefPointer,\n                templatePointer + \"/controls/\" + i\n              );\n            }\n            controls.push(\n              isArray(nodeValue)\n                ? buildFormGroupTemplate(\n                    jsf,\n                    nodeValue[i],\n                    setValues,\n                    schemaPointer + \"/items/\" + i,\n                    dataPointer + \"/\" + i,\n                    templatePointer + \"/controls/\" + i\n                  )\n                : itemRecursive\n                ? null\n                : cloneDeep(jsf.templateRefLibrary[itemRefPointer])\n            );\n          }\n        }\n\n        // If 'additionalItems' is an object = additional list items (after tuple items)\n        if (\n          schema.items.length < maxItems &&\n          isObject(schema.additionalItems)\n        ) {\n          additionalItemsPointer = schemaPointer + \"/additionalItems\";\n        }\n\n        // If 'items' is an object = list items only (no tuple items)\n      } else {\n        additionalItemsPointer = schemaPointer + \"/items\";\n      }\n\n      if (additionalItemsPointer) {\n        const schemaRefPointer = removeRecursiveReferences(\n          additionalItemsPointer,\n          jsf.schemaRecursiveRefMap\n        );\n        const itemRefPointer = removeRecursiveReferences(\n          shortDataPointer + \"/-\",\n          jsf.dataRecursiveRefMap,\n          jsf.arrayMap\n        );\n        const itemRecursive = itemRefPointer !== shortDataPointer + \"/-\";\n        if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\n          jsf.templateRefLibrary[itemRefPointer] = null;\n          jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\n            jsf,\n            null,\n            setValues,\n            schemaRefPointer,\n            itemRefPointer,\n            templatePointer + \"/controls/-\"\n          );\n        }\n        // const itemOptions = jsf.dataMap.get(itemRefPointer) || new Map();\n        const itemOptions = nodeOptions;\n        if (!itemRecursive || hasOwn(validators, \"required\")) {\n          const arrayLength = Math.min(\n            Math.max(\n              itemRecursive\n                ? 0\n                : itemOptions.get(\"tupleItems\") +\n                    itemOptions.get(\"listItems\") || 0,\n              isArray(nodeValue) ? nodeValue.length : 0\n            ),\n            maxItems\n          );\n          for (let i = controls.length; i < arrayLength; i++) {\n            controls.push(\n              isArray(nodeValue)\n                ? buildFormGroupTemplate(\n                    jsf,\n                    nodeValue[i],\n                    setValues,\n                    schemaRefPointer,\n                    dataPointer + \"/-\",\n                    templatePointer + \"/controls/-\"\n                  )\n                : itemRecursive\n                ? null\n                : cloneDeep(jsf.templateRefLibrary[itemRefPointer])\n            );\n          }\n        }\n      }\n      return { controlType, controls, validators };\n\n    case \"$ref\":\n      const schemaRef = JsonPointer.compile(schema.$ref);\n      const dataRef = JsonPointer.toDataPointer(schemaRef, schema);\n      const refPointer = removeRecursiveReferences(\n        dataRef,\n        jsf.dataRecursiveRefMap,\n        jsf.arrayMap\n      );\n      if (refPointer && !hasOwn(jsf.templateRefLibrary, refPointer)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.templateRefLibrary[refPointer] = null;\n        const newTemplate = buildFormGroupTemplate(\n          jsf,\n          setValues,\n          setValues,\n          schemaRef\n        );\n        if (newTemplate) {\n          jsf.templateRefLibrary[refPointer] = newTemplate;\n        } else {\n          delete jsf.templateRefLibrary[refPointer];\n        }\n      }\n      return null;\n\n    case \"FormControl\":\n      const value = {\n        value: setValues && isPrimitive(nodeValue) ? nodeValue : null,\n        disabled: nodeOptions.get(\"disabled\") || false,\n      };\n      return { controlType, value, validators };\n\n    default:\n      return null;\n  }\n}\n\n/**\n * 'buildFormGroup' function\n *\n * // {any} template -\n * // {AbstractControl}\n */\nexport function buildFormGroup(template: any): AbstractControl {\n  const validatorFns: ValidatorFn[] = [];\n  let validatorFn: ValidatorFn = null;\n  // if (hasOwn(template, \"validators\")) {\n  //   forEach(template.validators, (parameters, validator) => {\n  //     if (typeof JsonValidators[validator] === \"function\") {\n  //       validatorFns.push(JsonValidators[validator].apply(null, parameters));\n  //     }\n  //   });\n  //   if (\n  //     validatorFns.length &&\n  //     inArray(template.controlType, [\"FormGroup\", \"FormArray\"])\n  //   ) {\n  //     validatorFn =\n  //       validatorFns.length > 1\n  //         ? JsonValidators.compose(validatorFns)\n  //         : validatorFns[0];\n  //   }\n  // }\n  if (hasOwn(template, \"controlType\")) {\n    switch (template.controlType) {\n      case \"FormGroup\":\n        const groupControls: { [key: string]: AbstractControl } = {};\n        forEach(template.controls, (controls, key) => {\n          const newControl: AbstractControl = buildFormGroup(controls);\n          if (newControl) {\n            groupControls[key] = newControl;\n          }\n        });\n        return new FormGroup(groupControls, validatorFn);\n      case \"FormArray\":\n        return new FormArray(\n          filter(\n            map(template.controls, (controls) => buildFormGroup(controls))\n          ),\n          validatorFn\n        );\n      case \"FormControl\":\n        return new FormControl(template.value, validatorFns);\n    }\n  }\n  return null;\n}\n\n/**\n * 'mergeValues' function\n *\n * //  {any[]} ...valuesToMerge - Multiple values to merge\n * // {any} - Merged values\n */\nexport function mergeValues(...valuesToMerge) {\n  let mergedValues: any = null;\n  for (const currentValue of valuesToMerge) {\n    if (!isEmpty(currentValue)) {\n      if (\n        typeof currentValue === \"object\" &&\n        (isEmpty(mergedValues) || typeof mergedValues !== \"object\")\n      ) {\n        if (isArray(currentValue)) {\n          mergedValues = [...currentValue];\n        } else if (isObject(currentValue)) {\n          mergedValues = { ...currentValue };\n        }\n      } else if (typeof currentValue !== \"object\") {\n        mergedValues = currentValue;\n      } else if (isObject(mergedValues) && isObject(currentValue)) {\n        Object.assign(mergedValues, currentValue);\n      } else if (isObject(mergedValues) && isArray(currentValue)) {\n        const newValues = [];\n        for (const value of currentValue) {\n          newValues.push(mergeValues(mergedValues, value));\n        }\n        mergedValues = newValues;\n      } else if (isArray(mergedValues) && isObject(currentValue)) {\n        const newValues = [];\n        for (const value of mergedValues) {\n          newValues.push(mergeValues(value, currentValue));\n        }\n        mergedValues = newValues;\n      } else if (isArray(mergedValues) && isArray(currentValue)) {\n        const newValues = [];\n        for (\n          let i = 0;\n          i < Math.max(mergedValues.length, currentValue.length);\n          i++\n        ) {\n          if (i < mergedValues.length && i < currentValue.length) {\n            newValues.push(mergeValues(mergedValues[i], currentValue[i]));\n          } else if (i < mergedValues.length) {\n            newValues.push(mergedValues[i]);\n          } else if (i < currentValue.length) {\n            newValues.push(currentValue[i]);\n          }\n        }\n        mergedValues = newValues;\n      }\n    }\n  }\n  return mergedValues;\n}\n\n/**\n * 'setRequiredFields' function\n *\n * // {schema} schema - JSON Schema\n * // {object} formControlTemplate - Form Control Template object\n * // {boolean} - true if any fields have been set to required, false if not\n */\nexport function setRequiredFields(\n  schema: any,\n  formControlTemplate: any\n): boolean {\n  let fieldsRequired = false;\n  if (hasOwn(schema, \"required\") && !isEmpty(schema.required)) {\n    fieldsRequired = true;\n    let requiredArray = isArray(schema.required)\n      ? schema.required\n      : [schema.required];\n    requiredArray = forEach(requiredArray, (key) =>\n      JsonPointer.set(\n        formControlTemplate,\n        \"/\" + key + \"/validators/required\",\n        []\n      )\n    );\n  }\n  return fieldsRequired;\n\n  // TODO: Add support for patternProperties\n  // https://spacetelescope.github.io/understanding-json-schema/reference/object.html#pattern-properties\n}\n\n/**\n * 'formatFormData' function\n *\n * // {any} formData - Angular FormGroup data object\n * // {Map<string, any>} dataMap -\n * // {Map<string, string>} recursiveRefMap -\n * // {Map<string, number>} arrayMap -\n * // {boolean = false} fixErrors - if TRUE, tries to fix data\n * // {any} - formatted data object\n */\nexport function formatFormData(\n  formData: any,\n  dataMap: Map<string, any>,\n  recursiveRefMap: Map<string, string>,\n  arrayMap: Map<string, number>,\n  returnEmptyFields = false,\n  fixErrors = false\n): any {\n  if (formData === null || typeof formData !== \"object\") {\n    return formData;\n  }\n  const formattedData = isArray(formData) ? [] : {};\n  JsonPointer.forEachDeep(formData, (value, dataPointer) => {\n    // If returnEmptyFields === true,\n    // add empty arrays and objects to all allowed keys\n    if (returnEmptyFields && isArray(value)) {\n      JsonPointer.set(formattedData, dataPointer, []);\n    } else if (returnEmptyFields && isObject(value) && !isDate(value)) {\n      JsonPointer.set(formattedData, dataPointer, {});\n    } else {\n      const genericPointer = JsonPointer.has(dataMap, [\n        dataPointer,\n        \"schemaType\",\n      ])\n        ? dataPointer\n        : removeRecursiveReferences(dataPointer, recursiveRefMap, arrayMap);\n      if (JsonPointer.has(dataMap, [genericPointer, \"schemaType\"])) {\n        const schemaType:\n          | SchemaPrimitiveType\n          | SchemaPrimitiveType[] = dataMap\n          .get(genericPointer)\n          .get(\"schemaType\");\n        if (schemaType === \"null\") {\n          JsonPointer.set(formattedData, dataPointer, null);\n        } else if (\n          (hasValue(value) || returnEmptyFields) &&\n          inArray(schemaType, [\"string\", \"integer\", \"number\", \"boolean\"])\n        ) {\n          const newValue =\n            fixErrors || (value === null && returnEmptyFields)\n              ? toSchemaType(value, schemaType)\n              : toJavaScriptType(value, schemaType);\n          if (isDefined(newValue) || returnEmptyFields) {\n            JsonPointer.set(formattedData, dataPointer, newValue);\n          }\n\n          // If returnEmptyFields === false,\n          // only add empty arrays and objects to required keys\n        } else if (schemaType === \"object\" && !returnEmptyFields) {\n          (dataMap.get(genericPointer).get(\"required\") || []).forEach((key) => {\n            const keySchemaType = dataMap\n              .get(`${genericPointer}/${key}`)\n              .get(\"schemaType\");\n            if (keySchemaType === \"array\") {\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, []);\n            } else if (keySchemaType === \"object\") {\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, {});\n            }\n          });\n        }\n\n        // Finish incomplete 'date-time' entries\n        if (dataMap.get(genericPointer).get(\"schemaFormat\") === \"date-time\") {\n          // \"2000-03-14T01:59:26.535\" -> \"2000-03-14T01:59:26.535Z\" (add \"Z\")\n          if (\n            /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$/i.test(\n              value\n            )\n          ) {\n            JsonPointer.set(formattedData, dataPointer, `${value}Z`);\n            // \"2000-03-14T01:59\" -> \"2000-03-14T01:59:00Z\" (add \":00Z\")\n          } else if (\n            /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d$/i.test(value)\n          ) {\n            JsonPointer.set(formattedData, dataPointer, `${value}:00Z`);\n            // \"2000-03-14\" -> \"2000-03-14T00:00:00Z\" (add \"T00:00:00Z\")\n          } else if (fixErrors && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}:00:00:00Z`);\n          }\n        }\n      } else if (\n        typeof value !== \"object\" ||\n        isDate(value) ||\n        (value === null && returnEmptyFields)\n      ) {\n        console.error(\n          \"formatFormData error: \" +\n            `Schema type not found for form value at ${genericPointer}`\n        );\n        console.error(\"dataMap\", dataMap);\n        console.error(\"recursiveRefMap\", recursiveRefMap);\n        console.error(\"genericPointer\", genericPointer);\n      }\n    }\n  });\n  return formattedData;\n}\n\n/**\n * 'getControl' function\n *\n * Uses a JSON Pointer for a data object to retrieve a control from\n * an Angular formGroup or formGroup template. (Note: though a formGroup\n * template is much simpler, its basic structure is idential to a formGroup).\n *\n * If the optional third parameter 'returnGroup' is set to TRUE, the group\n * containing the control is returned, rather than the control itself.\n *\n * // {FormGroup} formGroup - Angular FormGroup to get value from\n * // {Pointer} dataPointer - JSON Pointer (string or array)\n * // {boolean = false} returnGroup - If true, return group containing control\n * // {group} - Located value (or null, if no control found)\n */\nexport function getControl(\n  formGroup: any,\n  dataPointer: Pointer,\n  returnGroup = false\n): any {\n  if (!isObject(formGroup) || !JsonPointer.isJsonPointer(dataPointer)) {\n    if (!JsonPointer.isJsonPointer(dataPointer)) {\n      // If dataPointer input is not a valid JSON pointer, check to\n      // see if it is instead a valid object path, using dot notaion\n      if (typeof dataPointer === \"string\") {\n        const formControl = formGroup.get(dataPointer);\n        if (formControl) {\n          return formControl;\n        }\n      }\n      console.error(`getControl error: Invalid JSON Pointer: ${dataPointer}`);\n    }\n    if (!isObject(formGroup)) {\n      console.error(`getControl error: Invalid formGroup: ${formGroup}`);\n    }\n    return null;\n  }\n  let dataPointerArray = JsonPointer.parse(dataPointer);\n  if (returnGroup) {\n    dataPointerArray = dataPointerArray.slice(0, -1);\n  }\n\n  // If formGroup input is a real formGroup (not a formGroup template)\n  // try using formGroup.get() to return the control\n  if (\n    typeof formGroup.get === \"function\" &&\n    dataPointerArray.every((key) => key.indexOf(\".\") === -1)\n  ) {\n    const formControl = formGroup.get(dataPointerArray.join(\".\"));\n    if (formControl) {\n      return formControl;\n    }\n  }\n\n  // If formGroup input is a formGroup template,\n  // or formGroup.get() failed to return the control,\n  // search the formGroup object for dataPointer's control\n  let subGroup = formGroup;\n  for (const key of dataPointerArray) {\n    if (hasOwn(subGroup, \"controls\")) {\n      subGroup = subGroup.controls;\n    }\n    if (isArray(subGroup) && key === \"-\") {\n      subGroup = subGroup[subGroup.length - 1];\n    } else if (hasOwn(subGroup, key)) {\n      subGroup = subGroup[key];\n    } else {\n      console.error(\n        `getControl error: Unable to find \"${key}\" item in FormGroup.`\n      );\n      console.error(dataPointer);\n      console.error(formGroup);\n      return;\n    }\n  }\n  return subGroup;\n}\n","import uniqueId from 'lodash/uniqueId';\nimport cloneDeep from 'lodash/cloneDeep';\nimport {\n  checkInlineType,\n  getFromSchema,\n  getInputType,\n  isInputRequired,\n  removeRecursiveReferences,\n  updateInputOptions\n  } from './json-schema.functions';\nimport {\n  copy,\n  fixTitle,\n  forEach,\n  hasOwn\n  } from './utility.functions';\nimport {\n  inArray,\n  isArray,\n  isDefined,\n  isEmpty,\n  isNumber,\n  isObject,\n  isString\n  } from './validator.functions';\nimport { JsonPointer } from './jsonpointer.functions';\nimport { TitleMapItem } from '../json-schema-form.service';\n\n\n\n/**\n * Layout function library:\n *\n * buildLayout:            Builds a complete layout from an input layout and schema\n *\n * buildLayoutFromSchema:  Builds a complete layout entirely from an input schema\n *\n * mapLayout:\n *\n * getLayoutNode:\n *\n * buildTitleMap:\n */\n\n/**\n * 'buildLayout' function\n *\n * //   jsf\n * //   widgetLibrary\n * //\n */\nexport function buildLayout(jsf, widgetLibrary) {\n  let hasSubmitButton = !JsonPointer.get(jsf, '/formOptions/addSubmit');\n  const formLayout = mapLayout(jsf.layout, (layoutItem, index, layoutPointer) => {\n    const newNode: any = {\n      _id: uniqueId(),\n      options: {},\n    };\n    if (isObject(layoutItem)) {\n      Object.assign(newNode, layoutItem);\n      Object.keys(newNode)\n        .filter(option => !inArray(option, [\n          '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\n          'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\n        ]))\n        .forEach(option => {\n          newNode.options[option] = newNode[option];\n          delete newNode[option];\n        });\n      if (!hasOwn(newNode, 'type') && isString(newNode.widget)) {\n        newNode.type = newNode.widget;\n        delete newNode.widget;\n      }\n      if (!hasOwn(newNode.options, 'title')) {\n        if (hasOwn(newNode.options, 'legend')) {\n          newNode.options.title = newNode.options.legend;\n          delete newNode.options.legend;\n        }\n      }\n      if (!hasOwn(newNode.options, 'validationMessages')) {\n        if (hasOwn(newNode.options, 'errorMessages')) {\n          newNode.options.validationMessages = newNode.options.errorMessages;\n          delete newNode.options.errorMessages;\n\n          // Convert Angular Schema Form (AngularJS) 'validationMessage' to\n          // Angular JSON Schema Form 'validationMessages'\n          // TV4 codes from https://github.com/geraintluff/tv4/blob/master/source/api.js\n        } else if (hasOwn(newNode.options, 'validationMessage')) {\n          if (typeof newNode.options.validationMessage === 'string') {\n            newNode.options.validationMessages = newNode.options.validationMessage;\n          } else {\n            newNode.options.validationMessages = {};\n            Object.keys(newNode.options.validationMessage).forEach(key => {\n              const code = key + '';\n              const newKey =\n                code === '0' ? 'type' :\n                  code === '1' ? 'enum' :\n                    code === '100' ? 'multipleOf' :\n                      code === '101' ? 'minimum' :\n                        code === '102' ? 'exclusiveMinimum' :\n                          code === '103' ? 'maximum' :\n                            code === '104' ? 'exclusiveMaximum' :\n                              code === '200' ? 'minLength' :\n                                code === '201' ? 'maxLength' :\n                                  code === '202' ? 'pattern' :\n                                    code === '300' ? 'minProperties' :\n                                      code === '301' ? 'maxProperties' :\n                                        code === '302' ? 'required' :\n                                          code === '304' ? 'dependencies' :\n                                            code === '400' ? 'minItems' :\n                                              code === '401' ? 'maxItems' :\n                                                code === '402' ? 'uniqueItems' :\n                                                  code === '500' ? 'format' : code + '';\n              newNode.options.validationMessages[newKey] = newNode.options.validationMessage[key];\n            });\n          }\n          delete newNode.options.validationMessage;\n        }\n      }\n    } else if (JsonPointer.isJsonPointer(layoutItem)) {\n      newNode.dataPointer = layoutItem;\n    } else if (isString(layoutItem)) {\n      newNode.key = layoutItem;\n    } else {\n      console.error('buildLayout error: Form layout element not recognized:');\n      console.error(layoutItem);\n      return null;\n    }\n    let nodeSchema: any = null;\n\n    // If newNode does not have a dataPointer, try to find an equivalent\n    if (!hasOwn(newNode, 'dataPointer')) {\n\n      // If newNode has a key, change it to a dataPointer\n      if (hasOwn(newNode, 'key')) {\n        newNode.dataPointer = newNode.key === '*' ? newNode.key :\n          JsonPointer.compile(JsonPointer.parseObjectPath(newNode.key), '-');\n        delete newNode.key;\n\n        // If newNode is an array, search for dataPointer in child nodes\n      } else if (hasOwn(newNode, 'type') && newNode.type.slice(-5) === 'array') {\n        const findDataPointer = (items) => {\n          if (items === null || typeof items !== 'object') { return; }\n          if (hasOwn(items, 'dataPointer')) { return items.dataPointer; }\n          if (isArray(items.items)) {\n            for (const item of items.items) {\n              if (hasOwn(item, 'dataPointer') && item.dataPointer.indexOf('/-') !== -1) {\n                return item.dataPointer;\n              }\n              if (hasOwn(item, 'items')) {\n                const searchItem = findDataPointer(item);\n                if (searchItem) { return searchItem; }\n              }\n            }\n          }\n        };\n        const childDataPointer = findDataPointer(newNode);\n        if (childDataPointer) {\n          newNode.dataPointer =\n            childDataPointer.slice(0, childDataPointer.lastIndexOf('/-'));\n        }\n      }\n    }\n\n    if (hasOwn(newNode, 'dataPointer')) {\n      if (newNode.dataPointer === '*') {\n        return buildLayoutFromSchema(jsf, widgetLibrary, jsf.formValues);\n      }\n      const nodeValue =\n        JsonPointer.get(jsf.formValues, newNode.dataPointer.replace(/\\/-/g, '/1'));\n\n      // TODO: Create function getFormValues(jsf, dataPointer, forRefLibrary)\n      // check formOptions.setSchemaDefaults and formOptions.setLayoutDefaults\n      // then set apropriate values from initialVaues, schema, or layout\n\n      newNode.dataPointer =\n        JsonPointer.toGenericPointer(newNode.dataPointer, jsf.arrayMap);\n      const LastKey = JsonPointer.toKey(newNode.dataPointer);\n      if (!newNode.name && isString(LastKey) && LastKey !== '-') {\n        newNode.name = LastKey;\n      }\n      const shortDataPointer = removeRecursiveReferences(\n        newNode.dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      const recursive = !shortDataPointer.length ||\n        shortDataPointer !== newNode.dataPointer;\n      let schemaPointer: string;\n      if (!jsf.dataMap.has(shortDataPointer)) {\n        jsf.dataMap.set(shortDataPointer, new Map());\n      }\n      const nodeDataMap = jsf.dataMap.get(shortDataPointer);\n      if (nodeDataMap.has('schemaPointer')) {\n        schemaPointer = nodeDataMap.get('schemaPointer');\n      } else {\n        schemaPointer = JsonPointer.toSchemaPointer(shortDataPointer, jsf.schema);\n        nodeDataMap.set('schemaPointer', schemaPointer);\n      }\n      nodeDataMap.set('disabled', !!newNode.options.disabled);\n      nodeSchema = JsonPointer.get(jsf.schema, schemaPointer);\n      if (nodeSchema) {\n        if (!hasOwn(newNode, 'type')) {\n          newNode.type = getInputType(nodeSchema, newNode);\n        } else if (!widgetLibrary.hasWidget(newNode.type)) {\n          const oldWidgetType = newNode.type;\n          newNode.type = getInputType(nodeSchema, newNode);\n          console.error(`error: widget type \"${oldWidgetType}\" ` +\n            `not found in library. Replacing with \"${newNode.type}\".`);\n        } else {\n          newNode.type = checkInlineType(newNode.type, nodeSchema, newNode);\n        }\n        if (nodeSchema.type === 'object' && isArray(nodeSchema.required)) {\n          nodeDataMap.set('required', nodeSchema.required);\n        }\n        newNode.dataType =\n          nodeSchema.type || (hasOwn(nodeSchema, '$ref') ? '$ref' : null);\n        updateInputOptions(newNode, nodeSchema, jsf);\n\n        // Present checkboxes as single control, rather than array\n        if (newNode.type === 'checkboxes' && hasOwn(nodeSchema, 'items')) {\n          updateInputOptions(newNode, nodeSchema.items, jsf);\n        } else if (newNode.dataType === 'array') {\n          newNode.options.maxItems = Math.min(\n            nodeSchema.maxItems || 1000, newNode.options.maxItems || 1000\n          );\n          newNode.options.minItems = Math.max(\n            nodeSchema.minItems || 0, newNode.options.minItems || 0\n          );\n          newNode.options.listItems = Math.max(\n            newNode.options.listItems || 0, isArray(nodeValue) ? nodeValue.length : 0\n          );\n          newNode.options.tupleItems =\n            isArray(nodeSchema.items) ? nodeSchema.items.length : 0;\n          if (newNode.options.maxItems < newNode.options.tupleItems) {\n            newNode.options.tupleItems = newNode.options.maxItems;\n            newNode.options.listItems = 0;\n          } else if (newNode.options.maxItems <\n            newNode.options.tupleItems + newNode.options.listItems\n          ) {\n            newNode.options.listItems =\n              newNode.options.maxItems - newNode.options.tupleItems;\n          } else if (newNode.options.minItems >\n            newNode.options.tupleItems + newNode.options.listItems\n          ) {\n            newNode.options.listItems =\n              newNode.options.minItems - newNode.options.tupleItems;\n          }\n          if (!nodeDataMap.has('maxItems')) {\n            nodeDataMap.set('maxItems', newNode.options.maxItems);\n            nodeDataMap.set('minItems', newNode.options.minItems);\n            nodeDataMap.set('tupleItems', newNode.options.tupleItems);\n            nodeDataMap.set('listItems', newNode.options.listItems);\n          }\n          if (!jsf.arrayMap.has(shortDataPointer)) {\n            jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems);\n          }\n        }\n        if (isInputRequired(jsf.schema, schemaPointer)) {\n          newNode.options.required = true;\n          jsf.fieldsRequired = true;\n        }\n      } else {\n        // TODO: create item in FormGroup model from layout key (?)\n        updateInputOptions(newNode, {}, jsf);\n      }\n\n      if (!newNode.options.title && !/^\\d+$/.test(newNode.name)) {\n        newNode.options.title = fixTitle(newNode.name);\n      }\n\n      if (hasOwn(newNode.options, 'copyValueTo')) {\n        if (typeof newNode.options.copyValueTo === 'string') {\n          newNode.options.copyValueTo = [newNode.options.copyValueTo];\n        }\n        if (isArray(newNode.options.copyValueTo)) {\n          newNode.options.copyValueTo = newNode.options.copyValueTo.map(item =>\n            JsonPointer.compile(JsonPointer.parseObjectPath(item), '-')\n          );\n        }\n      }\n\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\n      nodeDataMap.set('inputType', newNode.type);\n      nodeDataMap.set('widget', newNode.widget);\n\n      if (newNode.dataType === 'array' &&\n        (hasOwn(newNode, 'items') || hasOwn(newNode, 'additionalItems'))\n      ) {\n        const itemRefPointer = removeRecursiveReferences(\n          newNode.dataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        if (!jsf.dataMap.has(itemRefPointer)) {\n          jsf.dataMap.set(itemRefPointer, new Map());\n        }\n        jsf.dataMap.get(itemRefPointer).set('inputType', 'section');\n\n        // Fix insufficiently nested array item groups\n        if (newNode.items.length > 1) {\n          const arrayItemGroup = [];\n          for (let i = newNode.items.length - 1; i >= 0; i--) {\n            const subItem = newNode.items[i];\n            if (hasOwn(subItem, 'dataPointer') &&\n              subItem.dataPointer.slice(0, itemRefPointer.length) === itemRefPointer\n            ) {\n              const arrayItem = newNode.items.splice(i, 1)[0];\n              arrayItem.dataPointer = newNode.dataPointer + '/-' +\n                arrayItem.dataPointer.slice(itemRefPointer.length);\n              arrayItemGroup.unshift(arrayItem);\n            } else {\n              subItem.arrayItem = true;\n              // TODO: Check schema to get arrayItemType and removable\n              subItem.arrayItemType = 'list';\n              subItem.removable = newNode.options.removable !== false;\n            }\n          }\n          if (arrayItemGroup.length) {\n            newNode.items.push({\n              _id: uniqueId(),\n              arrayItem: true,\n              arrayItemType: newNode.options.tupleItems > newNode.items.length ?\n                'tuple' : 'list',\n              items: arrayItemGroup,\n              options: { removable: newNode.options.removable !== false, },\n              dataPointer: newNode.dataPointer + '/-',\n              type: 'section',\n              widget: widgetLibrary.getWidget('section'),\n            });\n          }\n        } else {\n          // TODO: Fix to hndle multiple items\n          newNode.items[0].arrayItem = true;\n          if (!newNode.items[0].dataPointer) {\n            newNode.items[0].dataPointer =\n              JsonPointer.toGenericPointer(itemRefPointer, jsf.arrayMap);\n          }\n          if (!JsonPointer.has(newNode, '/items/0/options/removable')) {\n            newNode.items[0].options.removable = true;\n          }\n          if (newNode.options.orderable === false) {\n            newNode.items[0].options.orderable = false;\n          }\n          newNode.items[0].arrayItemType =\n            newNode.options.tupleItems ? 'tuple' : 'list';\n        }\n\n        if (isArray(newNode.items)) {\n          const arrayListItems =\n            newNode.items.filter(item => item.type !== '$ref').length -\n            newNode.options.tupleItems;\n          if (arrayListItems > newNode.options.listItems) {\n            newNode.options.listItems = arrayListItems;\n            nodeDataMap.set('listItems', arrayListItems);\n          }\n        }\n\n        if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n          jsf.layoutRefLibrary[itemRefPointer] =\n            cloneDeep(newNode.items[newNode.items.length - 1]);\n          if (recursive) {\n            jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n          }\n          forEach(jsf.layoutRefLibrary[itemRefPointer], (item, key) => {\n            if (hasOwn(item, '_id')) { item._id = null; }\n            if (recursive) {\n              if (hasOwn(item, 'dataPointer')) {\n                item.dataPointer = item.dataPointer.slice(itemRefPointer.length);\n              }\n            }\n          }, 'top-down');\n        }\n\n        // Add any additional default items\n        if (!newNode.recursiveReference || newNode.options.required) {\n          const arrayLength = Math.min(Math.max(\n            newNode.options.tupleItems + newNode.options.listItems,\n            isArray(nodeValue) ? nodeValue.length : 0\n          ), newNode.options.maxItems);\n          for (let i = newNode.items.length; i < arrayLength; i++) {\n            newNode.items.push(getLayoutNode({\n              $ref: itemRefPointer,\n              dataPointer: newNode.dataPointer,\n              recursiveReference: newNode.recursiveReference,\n            }, jsf, widgetLibrary));\n          }\n        }\n\n        // If needed, add button to add items to array\n        if (newNode.options.addable !== false &&\n          newNode.options.minItems < newNode.options.maxItems &&\n          (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\n        ) {\n          let buttonText = 'Add';\n          if (newNode.options.title) {\n            if (/^add\\b/i.test(newNode.options.title)) {\n              buttonText = newNode.options.title;\n            } else {\n              buttonText += ' ' + newNode.options.title;\n            }\n          } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\n            if (/^add\\b/i.test(newNode.name)) {\n              buttonText += ' ' + fixTitle(newNode.name);\n            } else {\n              buttonText = fixTitle(newNode.name);\n            }\n\n            // If newNode doesn't have a title, look for title of parent array item\n          } else {\n            const parentSchema =\n              getFromSchema(jsf.schema, newNode.dataPointer, 'parentSchema');\n            if (hasOwn(parentSchema, 'title')) {\n              buttonText += ' to ' + parentSchema.title;\n            } else {\n              const pointerArray = JsonPointer.parse(newNode.dataPointer);\n              buttonText += ' to ' + fixTitle(pointerArray[pointerArray.length - 2]);\n            }\n          }\n          newNode.items.push({\n            _id: uniqueId(),\n            arrayItem: true,\n            arrayItemType: 'list',\n            dataPointer: newNode.dataPointer + '/-',\n            options: {\n              listItems: newNode.options.listItems,\n              maxItems: newNode.options.maxItems,\n              minItems: newNode.options.minItems,\n              removable: false,\n              title: buttonText,\n              tupleItems: newNode.options.tupleItems,\n            },\n            recursiveReference: recursive,\n            type: '$ref',\n            widget: widgetLibrary.getWidget('$ref'),\n            $ref: itemRefPointer,\n          });\n          if (isString(JsonPointer.get(newNode, '/style/add'))) {\n            newNode.items[newNode.items.length - 1].options.fieldStyle =\n              newNode.style.add;\n            delete newNode.style.add;\n            if (isEmpty(newNode.style)) { delete newNode.style; }\n          }\n        }\n      } else {\n        newNode.arrayItem = false;\n      }\n    } else if (hasOwn(newNode, 'type') || hasOwn(newNode, 'items')) {\n      const parentType: string =\n        JsonPointer.get(jsf.layout, layoutPointer, 0, -2).type;\n      if (!hasOwn(newNode, 'type')) {\n        newNode.type =\n          inArray(parentType, ['tabs', 'tabarray']) ? 'tab' : 'array';\n      }\n      newNode.arrayItem = parentType === 'array';\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\n      updateInputOptions(newNode, {}, jsf);\n    }\n    if (newNode.type === 'submit') { hasSubmitButton = true; }\n    return newNode;\n  });\n  if (jsf.hasRootReference) {\n    const fullLayout = cloneDeep(formLayout);\n    if (fullLayout[fullLayout.length - 1].type === 'submit') { fullLayout.pop(); }\n    jsf.layoutRefLibrary[''] = {\n      _id: null,\n      dataPointer: '',\n      dataType: 'object',\n      items: fullLayout,\n      name: '',\n      options: cloneDeep(jsf.formOptions.defautWidgetOptions),\n      recursiveReference: true,\n      required: false,\n      type: 'section',\n      widget: widgetLibrary.getWidget('section'),\n    };\n  }\n  if (!hasSubmitButton) {\n    formLayout.push({\n      _id: uniqueId(),\n      options: { title: 'Submit' },\n      type: 'submit',\n      widget: widgetLibrary.getWidget('submit'),\n    });\n  }\n  return formLayout;\n}\n\n/**\n * 'buildLayoutFromSchema' function\n *\n * //   jsf -\n * //   widgetLibrary -\n * //   nodeValue -\n * //  { string = '' } schemaPointer -\n * //  { string = '' } dataPointer -\n * //  { boolean = false } arrayItem -\n * //  { string = null } arrayItemType -\n * //  { boolean = null } removable -\n * //  { boolean = false } forRefLibrary -\n * //  { string = '' } dataPointerPrefix -\n * //\n */\nexport function buildLayoutFromSchema(\n  jsf, widgetLibrary, nodeValue = null, schemaPointer = '',\n  dataPointer = '', arrayItem = false, arrayItemType: string = null,\n  removable: boolean = null, forRefLibrary = false, dataPointerPrefix = ''\n) {\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\n  if (!hasOwn(schema, 'type') && !hasOwn(schema, '$ref') &&\n    !hasOwn(schema, 'x-schema-form')\n  ) { return null; }\n  const newNodeType: string = getInputType(schema);\n  if (!isDefined(nodeValue) && (\n    jsf.formOptions.setSchemaDefaults === true ||\n    (jsf.formOptions.setSchemaDefaults === 'auto' && isEmpty(jsf.formValues))\n  )) {\n    nodeValue = JsonPointer.get(jsf.schema, schemaPointer + '/default');\n  }\n  let newNode: any = {\n    _id: forRefLibrary ? null : uniqueId(),\n    arrayItem: arrayItem,\n    dataPointer: JsonPointer.toGenericPointer(dataPointer, jsf.arrayMap),\n    dataType: schema.type || (hasOwn(schema, '$ref') ? '$ref' : null),\n    options: {},\n    required: isInputRequired(jsf.schema, schemaPointer),\n    type: newNodeType,\n    widget: widgetLibrary.getWidget(newNodeType),\n  };\n  const lastDataKey = JsonPointer.toKey(newNode.dataPointer);\n  if (lastDataKey !== '-') { newNode.name = lastDataKey; }\n  if (newNode.arrayItem) {\n    newNode.arrayItemType = arrayItemType;\n    newNode.options.removable = removable !== false;\n  }\n  const shortDataPointer = removeRecursiveReferences(\n    dataPointerPrefix + dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\n  );\n  const recursive = !shortDataPointer.length ||\n    shortDataPointer !== dataPointerPrefix + dataPointer;\n  if (!jsf.dataMap.has(shortDataPointer)) {\n    jsf.dataMap.set(shortDataPointer, new Map());\n  }\n  const nodeDataMap = jsf.dataMap.get(shortDataPointer);\n  if (!nodeDataMap.has('inputType')) {\n    nodeDataMap.set('schemaPointer', schemaPointer);\n    nodeDataMap.set('inputType', newNode.type);\n    nodeDataMap.set('widget', newNode.widget);\n    nodeDataMap.set('disabled', !!newNode.options.disabled);\n  }\n  updateInputOptions(newNode, schema, jsf);\n  if (!newNode.options.title && newNode.name && !/^\\d+$/.test(newNode.name)) {\n    newNode.options.title = fixTitle(newNode.name);\n  }\n\n  if (newNode.dataType === 'object') {\n    if (isArray(schema.required) && !nodeDataMap.has('required')) {\n      nodeDataMap.set('required', schema.required);\n    }\n    if (isObject(schema.properties)) {\n      const newSection: any[] = [];\n      const propertyKeys = schema['ui:order'] || Object.keys(schema.properties);\n      if (propertyKeys.includes('*') && !hasOwn(schema.properties, '*')) {\n        const unnamedKeys = Object.keys(schema.properties)\n          .filter(key => !propertyKeys.includes(key));\n        for (let i = propertyKeys.length - 1; i >= 0; i--) {\n          if (propertyKeys[i] === '*') {\n            propertyKeys.splice(i, 1, ...unnamedKeys);\n          }\n        }\n      }\n      propertyKeys\n        .filter(key => hasOwn(schema.properties, key) ||\n          hasOwn(schema, 'additionalProperties')\n        )\n        .forEach(key => {\n          const keySchemaPointer = hasOwn(schema.properties, key) ?\n            '/properties/' + key : '/additionalProperties';\n          const innerItem = buildLayoutFromSchema(\n            jsf, widgetLibrary, isObject(nodeValue) ? nodeValue[key] : null,\n            schemaPointer + keySchemaPointer,\n            dataPointer + '/' + key,\n            false, null, null, forRefLibrary, dataPointerPrefix\n          );\n          if (innerItem) {\n            if (isInputRequired(schema, '/' + key)) {\n              innerItem.options.required = true;\n              jsf.fieldsRequired = true;\n            }\n            newSection.push(innerItem);\n          }\n        });\n      if (dataPointer === '' && !forRefLibrary) {\n        newNode = newSection;\n      } else {\n        newNode.items = newSection;\n      }\n    }\n    // TODO: Add patternProperties and additionalProperties inputs?\n    // ... possibly provide a way to enter both key names and values?\n    // if (isObject(schema.patternProperties)) { }\n    // if (isObject(schema.additionalProperties)) { }\n\n  } else if (newNode.dataType === 'array') {\n    newNode.items = [];\n    newNode.options.maxItems = Math.min(\n      schema.maxItems || 1000, newNode.options.maxItems || 1000\n    );\n    newNode.options.minItems = Math.max(\n      schema.minItems || 0, newNode.options.minItems || 0\n    );\n    if (!newNode.options.minItems && isInputRequired(jsf.schema, schemaPointer)) {\n      newNode.options.minItems = 1;\n    }\n    if (!hasOwn(newNode.options, 'listItems')) { newNode.options.listItems = 1; }\n    newNode.options.tupleItems = isArray(schema.items) ? schema.items.length : 0;\n    if (newNode.options.maxItems <= newNode.options.tupleItems) {\n      newNode.options.tupleItems = newNode.options.maxItems;\n      newNode.options.listItems = 0;\n    } else if (newNode.options.maxItems <\n      newNode.options.tupleItems + newNode.options.listItems\n    ) {\n      newNode.options.listItems = newNode.options.maxItems - newNode.options.tupleItems;\n    } else if (newNode.options.minItems >\n      newNode.options.tupleItems + newNode.options.listItems\n    ) {\n      newNode.options.listItems = newNode.options.minItems - newNode.options.tupleItems;\n    }\n    if (!nodeDataMap.has('maxItems')) {\n      nodeDataMap.set('maxItems', newNode.options.maxItems);\n      nodeDataMap.set('minItems', newNode.options.minItems);\n      nodeDataMap.set('tupleItems', newNode.options.tupleItems);\n      nodeDataMap.set('listItems', newNode.options.listItems);\n    }\n    if (!jsf.arrayMap.has(shortDataPointer)) {\n      jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems);\n    }\n    removable = newNode.options.removable !== false;\n    let additionalItemsSchemaPointer: string = null;\n\n    // If 'items' is an array = tuple items\n    if (isArray(schema.items)) {\n      newNode.items = [];\n      for (let i = 0; i < newNode.options.tupleItems; i++) {\n        let newItem: any;\n        const itemRefPointer = removeRecursiveReferences(\n          shortDataPointer + '/' + i, jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        const itemRecursive = !itemRefPointer.length ||\n          itemRefPointer !== shortDataPointer + '/' + i;\n\n        // If removable, add tuple item layout to layoutRefLibrary\n        if (removable && i >= newNode.options.minItems) {\n          if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n            // Set to null first to prevent recursive reference from causing endless loop\n            jsf.layoutRefLibrary[itemRefPointer] = null;\n            jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\n              jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\n              schemaPointer + '/items/' + i,\n              itemRecursive ? '' : dataPointer + '/' + i,\n              true, 'tuple', true, true, itemRecursive ? dataPointer + '/' + i : ''\n            );\n            if (itemRecursive) {\n              jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n            }\n          }\n          newItem = getLayoutNode({\n            $ref: itemRefPointer,\n            dataPointer: dataPointer + '/' + i,\n            recursiveReference: itemRecursive,\n          }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null);\n        } else {\n          newItem = buildLayoutFromSchema(\n            jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\n            schemaPointer + '/items/' + i,\n            dataPointer + '/' + i,\n            true, 'tuple', false, forRefLibrary, dataPointerPrefix\n          );\n        }\n        if (newItem) { newNode.items.push(newItem); }\n      }\n\n      // If 'additionalItems' is an object = additional list items, after tuple items\n      if (isObject(schema.additionalItems)) {\n        additionalItemsSchemaPointer = schemaPointer + '/additionalItems';\n      }\n\n      // If 'items' is an object = list items only (no tuple items)\n    } else if (isObject(schema.items)) {\n      additionalItemsSchemaPointer = schemaPointer + '/items';\n    }\n\n    if (additionalItemsSchemaPointer) {\n      const itemRefPointer = removeRecursiveReferences(\n        shortDataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      const itemRecursive = !itemRefPointer.length ||\n        itemRefPointer !== shortDataPointer + '/-';\n      const itemSchemaPointer = removeRecursiveReferences(\n        additionalItemsSchemaPointer, jsf.schemaRecursiveRefMap, jsf.arrayMap\n      );\n      // Add list item layout to layoutRefLibrary\n      if (itemRefPointer.length && !hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.layoutRefLibrary[itemRefPointer] = null;\n        jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\n          jsf, widgetLibrary, null,\n          itemSchemaPointer,\n          itemRecursive ? '' : dataPointer + '/-',\n          true, 'list', removable, true, itemRecursive ? dataPointer + '/-' : ''\n        );\n        if (itemRecursive) {\n          jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n        }\n      }\n\n      // Add any additional default items\n      if (!itemRecursive || newNode.options.required) {\n        const arrayLength = Math.min(Math.max(\n          itemRecursive ? 0 :\n            newNode.options.tupleItems + newNode.options.listItems,\n          isArray(nodeValue) ? nodeValue.length : 0\n        ), newNode.options.maxItems);\n        if (newNode.items.length < arrayLength) {\n          for (let i = newNode.items.length; i < arrayLength; i++) {\n            newNode.items.push(getLayoutNode({\n              $ref: itemRefPointer,\n              dataPointer: dataPointer + '/-',\n              recursiveReference: itemRecursive,\n            }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null));\n          }\n        }\n      }\n\n      // If needed, add button to add items to array\n      if (newNode.options.addable !== false &&\n        newNode.options.minItems < newNode.options.maxItems &&\n        (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\n      ) {\n        let buttonText =\n          ((jsf.layoutRefLibrary[itemRefPointer] || {}).options || {}).title;\n        const prefix = buttonText ? 'Add ' : 'Add to ';\n        if (!buttonText) {\n          buttonText = schema.title || fixTitle(JsonPointer.toKey(dataPointer));\n        }\n        if (!/^add\\b/i.test(buttonText)) { buttonText = prefix + buttonText; }\n        newNode.items.push({\n          _id: uniqueId(),\n          arrayItem: true,\n          arrayItemType: 'list',\n          dataPointer: newNode.dataPointer + '/-',\n          options: {\n            listItems: newNode.options.listItems,\n            maxItems: newNode.options.maxItems,\n            minItems: newNode.options.minItems,\n            removable: false,\n            title: buttonText,\n            tupleItems: newNode.options.tupleItems,\n          },\n          recursiveReference: itemRecursive,\n          type: '$ref',\n          widget: widgetLibrary.getWidget('$ref'),\n          $ref: itemRefPointer,\n        });\n      }\n    }\n\n  } else if (newNode.dataType === '$ref') {\n    const schemaRef = JsonPointer.compile(schema.$ref);\n    const dataRef = JsonPointer.toDataPointer(schemaRef, jsf.schema);\n    let buttonText = '';\n\n    // Get newNode title\n    if (newNode.options.add) {\n      buttonText = newNode.options.add;\n    } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\n      buttonText =\n        (/^add\\b/i.test(newNode.name) ? '' : 'Add ') + fixTitle(newNode.name);\n\n      // If newNode doesn't have a title, look for title of parent array item\n    } else {\n      const parentSchema =\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1);\n      if (hasOwn(parentSchema, 'title')) {\n        buttonText = 'Add to ' + parentSchema.title;\n      } else {\n        const pointerArray = JsonPointer.parse(newNode.dataPointer);\n        buttonText = 'Add to ' + fixTitle(pointerArray[pointerArray.length - 2]);\n      }\n    }\n    Object.assign(newNode, {\n      recursiveReference: true,\n      widget: widgetLibrary.getWidget('$ref'),\n      $ref: dataRef,\n    });\n    Object.assign(newNode.options, {\n      removable: false,\n      title: buttonText,\n    });\n    if (isNumber(JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems)) {\n      newNode.options.maxItems =\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems;\n    }\n\n    // Add layout template to layoutRefLibrary\n    if (dataRef.length) {\n      if (!hasOwn(jsf.layoutRefLibrary, dataRef)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.layoutRefLibrary[dataRef] = null;\n        const newLayout = buildLayoutFromSchema(\n          jsf, widgetLibrary, null, schemaRef, '',\n          newNode.arrayItem, newNode.arrayItemType, true, true, dataPointer\n        );\n        if (newLayout) {\n          newLayout.recursiveReference = true;\n          jsf.layoutRefLibrary[dataRef] = newLayout;\n        } else {\n          delete jsf.layoutRefLibrary[dataRef];\n        }\n      } else if (!jsf.layoutRefLibrary[dataRef].recursiveReference) {\n        jsf.layoutRefLibrary[dataRef].recursiveReference = true;\n      }\n    }\n  }\n  return newNode;\n}\n\n/**\n * 'mapLayout' function\n *\n * Creates a new layout by running each element in an existing layout through\n * an iteratee. Recursively maps within array elements 'items' and 'tabs'.\n * The iteratee is invoked with four arguments: (value, index, layout, path)\n *\n * The returned layout may be longer (or shorter) then the source layout.\n *\n * If an item from the source layout returns multiple items (as '*' usually will),\n * this function will keep all returned items in-line with the surrounding items.\n *\n * If an item from the source layout causes an error and returns null, it is\n * skipped without error, and the function will still return all non-null items.\n *\n * //   layout - the layout to map\n * //  { (v: any, i?: number, l?: any, p?: string) => any }\n *   function - the funciton to invoke on each element\n * //  { string|string[] = '' } layoutPointer - the layoutPointer to layout, inside rootLayout\n * //  { any[] = layout } rootLayout - the root layout, which conatins layout\n * //\n */\nexport function mapLayout(layout, fn, layoutPointer = '', rootLayout = layout) {\n  let indexPad = 0;\n  let newLayout: any[] = [];\n  forEach(layout, (item, index) => {\n    const realIndex = +index + indexPad;\n    const newLayoutPointer = layoutPointer + '/' + realIndex;\n    let newNode: any = copy(item);\n    let itemsArray: any[] = [];\n    if (isObject(item)) {\n      if (hasOwn(item, 'tabs')) {\n        item.items = item.tabs;\n        delete item.tabs;\n      }\n      if (hasOwn(item, 'items')) {\n        itemsArray = isArray(item.items) ? item.items : [item.items];\n      }\n    }\n    if (itemsArray.length) {\n      newNode.items = mapLayout(itemsArray, fn, newLayoutPointer + '/items', rootLayout);\n    }\n    newNode = fn(newNode, realIndex, newLayoutPointer, rootLayout);\n    if (!isDefined(newNode)) {\n      indexPad--;\n    } else {\n      if (isArray(newNode)) { indexPad += newNode.length - 1; }\n      newLayout = newLayout.concat(newNode);\n    }\n  });\n  return newLayout;\n}\n\n/**\n * 'getLayoutNode' function\n * Copy a new layoutNode from layoutRefLibrary\n *\n * //   refNode -\n * //   layoutRefLibrary -\n * //  { any = null } widgetLibrary -\n * //  { any = null } nodeValue -\n * //  copied layoutNode\n */\nexport function getLayoutNode(\n  refNode, jsf, widgetLibrary: any = null, nodeValue: any = null\n) {\n\n  // If recursive reference and building initial layout, return Add button\n  if (refNode.recursiveReference && widgetLibrary) {\n    const newLayoutNode = cloneDeep(refNode);\n    if (!newLayoutNode.options) { newLayoutNode.options = {}; }\n    Object.assign(newLayoutNode, {\n      recursiveReference: true,\n      widget: widgetLibrary.getWidget('$ref'),\n    });\n    Object.assign(newLayoutNode.options, {\n      removable: false,\n      title: 'Add ' + newLayoutNode.$ref,\n    });\n    return newLayoutNode;\n\n    // Otherwise, return referenced layout\n  } else {\n    let newLayoutNode = jsf.layoutRefLibrary[refNode.$ref];\n    // If value defined, build new node from schema (to set array lengths)\n    if (isDefined(nodeValue)) {\n      newLayoutNode = buildLayoutFromSchema(\n        jsf, widgetLibrary, nodeValue,\n        JsonPointer.toSchemaPointer(refNode.$ref, jsf.schema),\n        refNode.$ref, newLayoutNode.arrayItem,\n        newLayoutNode.arrayItemType, newLayoutNode.options.removable, false\n      );\n    } else {\n      // If value not defined, copy node from layoutRefLibrary\n      newLayoutNode = cloneDeep(newLayoutNode);\n      JsonPointer.forEachDeep(newLayoutNode, (subNode, pointer) => {\n\n        // Reset all _id's in newLayoutNode to unique values\n        if (hasOwn(subNode, '_id')) { subNode._id = uniqueId(); }\n\n        // If adding a recursive item, prefix current dataPointer\n        // to all dataPointers in new layoutNode\n        if (refNode.recursiveReference && hasOwn(subNode, 'dataPointer')) {\n          subNode.dataPointer = refNode.dataPointer + subNode.dataPointer;\n        }\n      });\n    }\n    return newLayoutNode;\n  }\n}\n\n/**\n * 'buildTitleMap' function\n *\n * //   titleMap -\n * //   enumList -\n * //  { boolean = true } fieldRequired -\n * //  { boolean = true } flatList -\n * // { TitleMapItem[] }\n */\nexport function buildTitleMap(\n  titleMap, enumList, fieldRequired = true, flatList = true\n) {\n  let newTitleMap: TitleMapItem[] = [];\n  let hasEmptyValue = false;\n  if (titleMap) {\n    if (isArray(titleMap)) {\n      if (enumList) {\n        for (const i of Object.keys(titleMap)) {\n          if (isObject(titleMap[i])) { // JSON Form style\n            const value = titleMap[i].value;\n            if (enumList.includes(value)) {\n              const name = titleMap[i].name;\n              newTitleMap.push({ name, value });\n              if (value === undefined || value === null) { hasEmptyValue = true; }\n            }\n          } else if (isString(titleMap[i])) { // React Jsonschema Form style\n            if (i < enumList.length) {\n              const name = titleMap[i];\n              const value = enumList[i];\n              newTitleMap.push({ name, value });\n              if (value === undefined || value === null) { hasEmptyValue = true; }\n            }\n          }\n        }\n      } else { // If array titleMap and no enum list, just return the titleMap - Angular Schema Form style\n        newTitleMap = titleMap;\n        if (!fieldRequired) {\n          hasEmptyValue = !!newTitleMap\n            .filter(i => i.value === undefined || i.value === null)\n            .length;\n        }\n      }\n    } else if (enumList) { // Alternate JSON Form style, with enum list\n      for (const i of Object.keys(enumList)) {\n        const value = enumList[i];\n        if (hasOwn(titleMap, value)) {\n          const name = titleMap[value];\n          newTitleMap.push({ name, value });\n          if (value === undefined || value === null) { hasEmptyValue = true; }\n        }\n      }\n    } else { // Alternate JSON Form style, without enum list\n      for (const value of Object.keys(titleMap)) {\n        const name = titleMap[value];\n        newTitleMap.push({ name, value });\n        if (value === undefined || value === null) { hasEmptyValue = true; }\n      }\n    }\n  } else if (enumList) { // Build map from enum list alone\n    for (const i of Object.keys(enumList)) {\n      const name = enumList[i];\n      const value = enumList[i];\n      newTitleMap.push({ name, value });\n      if (value === undefined || value === null) { hasEmptyValue = true; }\n    }\n  } else { // If no titleMap and no enum list, return default map of boolean values\n    newTitleMap = [{ name: 'True', value: true }, { name: 'False', value: false }];\n  }\n\n  // Does titleMap have groups?\n  if (newTitleMap.some(title => hasOwn(title, 'group'))) {\n    hasEmptyValue = false;\n\n    // If flatList = true, flatten items & update name to group: name\n    if (flatList) {\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\n        if (hasOwn(title, 'group')) {\n          if (isArray(title.items)) {\n            groupTitleMap = [\n              ...groupTitleMap,\n              ...title.items.map(item =>\n                ({ ...item, ...{ name: `${title.group}: ${item.name}` } })\n              )\n            ];\n            if (title.items.some(item => item.value === undefined || item.value === null)) {\n              hasEmptyValue = true;\n            }\n          }\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\n            title.name = `${title.group}: ${title.name}`;\n            delete title.group;\n            groupTitleMap.push(title);\n            if (title.value === undefined || title.value === null) {\n              hasEmptyValue = true;\n            }\n          }\n        } else {\n          groupTitleMap.push(title);\n          if (title.value === undefined || title.value === null) {\n            hasEmptyValue = true;\n          }\n        }\n        return groupTitleMap;\n      }, []);\n\n      // If flatList = false, combine items from matching groups\n    } else {\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\n        if (hasOwn(title, 'group')) {\n          if (title.group !== (groupTitleMap[groupTitleMap.length - 1] || {}).group) {\n            groupTitleMap.push({ group: title.group, items: title.items || [] });\n          }\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\n            groupTitleMap[groupTitleMap.length - 1].items\n              .push({ name: title.name, value: title.value });\n            if (title.value === undefined || title.value === null) {\n              hasEmptyValue = true;\n            }\n          }\n        } else {\n          groupTitleMap.push(title);\n          if (title.value === undefined || title.value === null) {\n            hasEmptyValue = true;\n          }\n        }\n        return groupTitleMap;\n      }, []);\n    }\n  }\n  if (!fieldRequired && !hasEmptyValue) {\n    newTitleMap.unshift({ name: '<em>None</em>', value: null });\n  }\n  return newTitleMap;\n}\n","export const longMonths = ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'];\nexport const longDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nexport const shortMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nexport const shortDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n","export const enValidationMessages: any = { // Default English error messages\n  required: 'This field is required.',\n  minLength: 'Must be {{minimumLength}} characters or longer (current length: {{currentLength}})',\n  maxLength: 'Must be {{maximumLength}} characters or shorter (current length: {{currentLength}})',\n  pattern: 'Must match pattern: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Must be a date, like \"2000-12-31\"';\n      case 'time':\n        return 'Must be a time, like \"16:20\" or \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Must be a date-time, like \"2000-03-14T01:59\" or \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'Must be an email address, like \"name@example.com\"';\n      case 'hostname':\n        return 'Must be a hostname, like \"example.com\"';\n      case 'ipv4':\n        return 'Must be an IPv4 address, like \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Must be an IPv6 address, like \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Must be a url, like \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'Must be a uuid, like \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Must be a color, like \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Must be a JSON Pointer, like \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'Must be a relative JSON Pointer, like \"2/pointer/to/something\"';\n      case 'regex':\n        return 'Must be a regular expression, like \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Must be a correctly formatted ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Must be {{minimumValue}} or more',\n  exclusiveMinimum: 'Must be more than {{exclusiveMinimumValue}}',\n  maximum: 'Must be {{maximumValue}} or less',\n  exclusiveMaximum: 'Must be less than {{exclusiveMaximumValue}}',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Must have ${decimals} or fewer decimal places.`;\n    } else {\n      return `Must be a multiple of ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Must have {{minimumProperties}} or more items (current items: {{currentProperties}})',\n  maxProperties: 'Must have {{maximumProperties}} or fewer items (current items: {{currentProperties}})',\n  minItems: 'Must have {{minimumItems}} or more items (current items: {{currentItems}})',\n  maxItems: 'Must have {{maximumItems}} or fewer items (current items: {{currentItems}})',\n  uniqueItems: 'All items must be unique',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","export const frValidationMessages: any = { // French error messages\n  required: 'Est obligatoire.',\n  minLength: 'Doit avoir minimum {{minimumLength}} caractÃ¨res (actuellement: {{currentLength}})',\n  maxLength: 'Doit avoir maximum {{maximumLength}} caractÃ¨res (actuellement: {{currentLength}})',\n  pattern: 'Doit respecter: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Doit Ãªtre une date, tel que \"2000-12-31\"';\n      case 'time':\n        return 'Doit Ãªtre une heure, tel que \"16:20\" ou \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Doit Ãªtre une date et une heure, tel que \"2000-03-14T01:59\" ou \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'Doit Ãªtre une adresse e-mail, tel que \"name@example.com\"';\n      case 'hostname':\n        return 'Doit Ãªtre un nom de domaine, tel que \"example.com\"';\n      case 'ipv4':\n        return 'Doit Ãªtre une adresse IPv4, tel que \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Doit Ãªtre une adresse IPv6, tel que \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Doit Ãªtre une URL, tel que \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'Doit Ãªtre un UUID, tel que \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Doit Ãªtre une couleur, tel que \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Doit Ãªtre un JSON Pointer, tel que \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'Doit Ãªtre un relative JSON Pointer, tel que \"2/pointer/to/something\"';\n      case 'regex':\n        return 'Doit Ãªtre une expression rÃ©guliÃ¨re, tel que \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Doit Ãªtre avoir le format correct: ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Doit Ãªtre supÃ©rieur Ã  {{minimumValue}}',\n  exclusiveMinimum: 'Doit avoir minimum {{exclusiveMinimumValue}} charactÃ¨res',\n  maximum: 'Doit Ãªtre infÃ©rieur Ã  {{maximumValue}}',\n  exclusiveMaximum: 'Doit avoir maximum {{exclusiveMaximumValue}} charactÃ¨res',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Doit comporter ${decimals} ou moins de decimales.`;\n    } else {\n      return `Doit Ãªtre un multiple de ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Doit comporter au minimum {{minimumProperties}} Ã©lÃ©ments',\n  maxProperties: 'Doit comporter au maximum {{maximumProperties}} Ã©lÃ©ments',\n  minItems: 'Doit comporter au minimum {{minimumItems}} Ã©lÃ©ments',\n  maxItems: 'Doit comporter au maximum {{minimumItems}} Ã©lÃ©ments',\n  uniqueItems: 'Tous les Ã©lÃ©ments doivent Ãªtre uniques',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","export const itValidationMessages: any = { // Default Italian error messages\n  required: 'Il campo Ã¨ obbligatorio',\n  minLength: 'Deve inserire almeno {{minimumLength}} caratteri (lunghezza corrente: {{currentLength}})',\n  maxLength: 'Il numero massimo di caratteri consentito Ã¨ {{maximumLength}} (lunghezza corrente: {{currentLength}})',\n  pattern: 'Devi rispettare il pattern : {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Deve essere una data, come \"31-12-2000\"';\n      case 'time':\n        return 'Deve essere un orario, come \"16:20\" o \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Deve essere data-orario, come \"14-03-2000T01:59\" or \"14-03-2000T01:59:26.535Z\"';\n      case 'email':\n        return 'Deve essere un indirzzo email, come \"name@example.com\"';\n      case 'hostname':\n        return 'Deve essere un hostname, come \"example.com\"';\n      case 'ipv4':\n        return 'Deve essere un indirizzo IPv4, come \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Deve essere un indirizzo IPv6, come \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Deve essere un url, come \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'Deve essere un uuid, come \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Deve essere un colore, come \"#FFFFFF\" o \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Deve essere un JSON Pointer, come \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'Deve essere un JSON Pointer relativo, come \"2/pointer/to/something\"';\n      case 'regex':\n        return 'Deve essere una regular expression, come \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Deve essere formattato correttamente ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Deve essere {{minimumValue}} o piÃ¹',\n  exclusiveMinimum: 'Deve essere piÃ¹ di {{exclusiveMinimumValue}}',\n  maximum: 'Deve essere {{maximumValue}} o meno',\n  exclusiveMaximum: 'Deve essere minore di {{exclusiveMaximumValue}}',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Deve avere ${decimals} o meno decimali.`;\n    } else {\n      return `Deve essere multiplo di ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Deve avere {{minimumProperties}} o piÃ¹ elementi (elementi correnti: {{currentProperties}})',\n  maxProperties: 'Deve avere {{maximumProperties}} o meno elementi (elementi correnti: {{currentProperties}})',\n  minItems: 'Deve avere {{minimumItems}} o piÃ¹ elementi (elementi correnti: {{currentItems}})',\n  maxItems: 'Deve avere {{maximumItems}} o meno elementi (elementi correnti: {{currentItems}})',\n  uniqueItems: 'Tutti gli elementi devono essere unici',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","export const ptValidationMessages: any = { // Brazilian Portuguese error messages\n  required: 'Este campo Ã© obrigatÃ³rio.',\n  minLength: 'Ã preciso no mÃ­nimo {{minimumLength}} caracteres ou mais (tamanho atual: {{currentLength}})',\n  maxLength: 'Ã preciso no mÃ¡ximo  {{maximumLength}} caracteres ou menos (tamanho atual: {{currentLength}})',\n  pattern: 'Tem que ajustar ao formato: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Tem que ser uma data, por exemplo \"2000-12-31\"';\n      case 'time':\n        return 'Tem que ser horÃ¡rio, por exemplo \"16:20\" ou \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Tem que ser data e hora, por exemplo \"2000-03-14T01:59\" ou \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'Tem que ser um email, por exemplo \"fulano@exemplo.com.br\"';\n      case 'hostname':\n        return 'Tem que ser uma nome de domÃ­nio, por exemplo \"exemplo.com.br\"';\n      case 'ipv4':\n        return 'Tem que ser um endereÃ§o IPv4, por exemplo \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Tem que ser um endereÃ§o IPv6, por exemplo \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Tem que ser uma URL, por exemplo \"http://www.exemplo.com.br/pagina.html\"';\n      case 'uuid':\n        return 'Tem que ser um uuid, por exemplo \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Tem que ser uma cor, por exemplo \"#FFFFFF\" ou \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Tem que ser um JSON Pointer, por exemplo \"/referencia/para/algo\"';\n      case 'relative-json-pointer':\n        return 'Tem que ser um JSON Pointer relativo, por exemplo \"2/referencia/para/algo\"';\n      case 'regex':\n        return 'Tem que ser uma expressÃ£o regular, por exemplo \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Tem que ser no formato: ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Tem que ser {{minimumValue}} ou mais',\n  exclusiveMinimum: 'Tem que ser mais que {{exclusiveMinimumValue}}',\n  maximum: 'Tem que ser {{maximumValue}} ou menos',\n  exclusiveMaximum: 'Tem que ser menor que {{exclusiveMaximumValue}}',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Tem que ter ${decimals} ou menos casas decimais.`;\n    } else {\n      return `Tem que ser um mÃºltiplo de ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Deve ter {{minimumProperties}} ou mais itens (itens atÃ© o momento: {{currentProperties}})',\n  maxProperties: 'Deve ter {{maximumProperties}} ou menos intens (itens atÃ© o momento: {{currentProperties}})',\n  minItems: 'Deve ter {{minimumItems}} ou mais itens (itens atÃ© o momento: {{currentItems}})',\n  maxItems: 'Deve ter {{maximumItems}} ou menos itens (itens atÃ© o momento: {{currentItems}})',\n  uniqueItems: 'Todos os itens devem ser Ãºnicos',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","export const zhValidationMessages: any = { // Chinese error messages\n  required: 'å¿å¡«å­æ®µ.',\n  minLength: 'å­ç¬¦é¿åº¦å¿é¡»å¤§äºæèç­äº {{minimumLength}} (å½åé¿åº¦: {{currentLength}})',\n  maxLength: 'å­ç¬¦é¿åº¦å¿é¡»å°äºæèç­äº {{maximumLength}} (å½åé¿åº¦: {{currentLength}})',\n  pattern: 'å¿é¡»å¹éæ­£åè¡¨è¾¾å¼: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'å¿é¡»ä¸ºæ¥ææ ¼å¼, æ¯å¦ \"2000-12-31\"';\n      case 'time':\n        return 'å¿é¡»ä¸ºæ¶é´æ ¼å¼, æ¯å¦ \"16:20\" æè \"03:14:15.9265\"';\n      case 'date-time':\n        return 'å¿é¡»ä¸ºæ¥ææ¶é´æ ¼å¼, æ¯å¦ \"2000-03-14T01:59\" æè \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'å¿é¡»ä¸ºé®ç®±å°å, æ¯å¦ \"name@example.com\"';\n      case 'hostname':\n        return 'å¿é¡»ä¸ºä¸»æºå, æ¯å¦ \"example.com\"';\n      case 'ipv4':\n        return 'å¿é¡»ä¸º IPv4 å°å, æ¯å¦ \"127.0.0.1\"';\n      case 'ipv6':\n        return 'å¿é¡»ä¸º IPv6 å°å, æ¯å¦ \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'å¿é¡»ä¸º url, æ¯å¦ \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'å¿é¡»ä¸º uuid, æ¯å¦ \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'å¿é¡»ä¸ºé¢è²å¼, æ¯å¦ \"#FFFFFF\" æè \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'å¿é¡»ä¸º JSON Pointer, æ¯å¦ \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'å¿é¡»ä¸ºç¸å¯¹ç JSON Pointer, æ¯å¦ \"2/pointer/to/something\"';\n      case 'regex':\n        return 'å¿é¡»ä¸ºæ­£åè¡¨è¾¾å¼, æ¯å¦ \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'å¿é¡»ä¸ºæ ¼å¼æ­£ç¡®ç ' + error.requiredFormat;\n    }\n  },\n  minimum: 'å¿é¡»å¤§äºæèç­äºæå°å¼: {{minimumValue}}',\n  exclusiveMinimum: 'å¿é¡»å¤§äºæå°å¼: {{exclusiveMinimumValue}}',\n  maximum: 'å¿é¡»å°äºæèç­äºæå¤§å¼: {{maximumValue}}',\n  exclusiveMaximum: 'å¿é¡»å°äºæå¤§å¼: {{exclusiveMaximumValue}}',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `å¿é¡»æ ${decimals} ä½ææ´å°çå°æ°ä½`;\n    } else {\n      return `å¿é¡»ä¸º ${error.multipleOfValue} çåæ°`;\n    }\n  },\n  minProperties: 'é¡¹ç®æ°å¿é¡»å¤§äºæèç­äº {{minimumProperties}} (å½åé¡¹ç®æ°: {{currentProperties}})',\n  maxProperties: 'é¡¹ç®æ°å¿é¡»å°äºæèç­äº {{maximumProperties}} (å½åé¡¹ç®æ°: {{currentProperties}})',\n  minItems: 'é¡¹ç®æ°å¿é¡»å¤§äºæèç­äº {{minimumItems}} (å½åé¡¹ç®æ°: {{currentItems}})',\n  maxItems: 'é¡¹ç®æ°å¿é¡»å°äºæèç­äº {{maximumItems}} (å½åé¡¹ç®æ°: {{currentItems}})',\n  uniqueItems: 'ææé¡¹ç®å¿é¡»æ¯å¯ä¸ç',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","import { Injectable } from \"@angular/core\";\nimport { AbstractControl, FormArray, FormGroup } from \"@angular/forms\";\nimport { Subject } from \"rxjs\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport Ajv from \"ajv\";\nimport jsonDraft6 from \"ajv/lib/refs/json-schema-draft-06.json\";\nimport {\n  buildFormGroup,\n  buildFormGroupTemplate,\n  formatFormData,\n  getControl,\n  fixTitle,\n  forEach,\n  hasOwn,\n  toTitleCase,\n  buildLayout,\n  getLayoutNode,\n  buildSchemaFromData,\n  buildSchemaFromLayout,\n  removeRecursiveReferences,\n  hasValue,\n  isArray,\n  isDefined,\n  isEmpty,\n  isObject,\n  JsonPointer,\n} from \"./shared\";\nimport {\n  enValidationMessages,\n  frValidationMessages,\n  itValidationMessages,\n  ptValidationMessages,\n  zhValidationMessages,\n} from \"./locale\";\n\nexport interface TitleMapItem {\n  name?: string;\n  value?: any;\n  checked?: boolean;\n  group?: string;\n  items?: TitleMapItem[];\n}\nexport interface ErrorMessages {\n  [control_name: string]: {\n    message: string | Function | Object;\n    code: string;\n  }[];\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class JsonSchemaFormService {\n  JsonFormCompatibility = false;\n  ReactJsonSchemaFormCompatibility = false;\n  AngularSchemaFormCompatibility = false;\n  tpldata: any = {};\n\n  ajvOptions: any = {\n    allErrors: true,\n    jsonPointers: true,\n    unknownFormats: \"ignore\",\n  };\n  ajv: any = new Ajv(this.ajvOptions); // AJV: Another JSON Schema Validator\n  validateFormData: any = null; // Compiled AJV function to validate active form's schema\n\n  formValues: any = {}; // Internal form data (may not have correct types)\n  data: any = {}; // Output form data (formValues, formatted with correct data types)\n  schema: any = {}; // Internal JSON Schema\n  layout: any[] = []; // Internal form layout\n  formGroupTemplate: any = {}; // Template used to create formGroup\n  formGroup: any = null; // Angular formGroup, which powers the reactive form\n  framework: any = null; // Active framework component\n  formOptions: any; // Active options, used to configure the form\n\n  validData: any = null; // Valid form data (or null) (=== isValid ? data : null)\n  isValid: boolean = null; // Is current form data valid?\n  ajvErrors: any = null; // Ajv errors for current data\n  validationErrors: any = null; // Any validation errors for current data\n  dataErrors: any = new Map(); //\n  formValueSubscription: any = null; // Subscription to formGroup.valueChanges observable (for un- and re-subscribing)\n  dataChanges: Subject<any> = new Subject(); // Form data observable\n  isValidChanges: Subject<any> = new Subject(); // isValid observable\n  validationErrorChanges: Subject<any> = new Subject(); // validationErrors observable\n\n  arrayMap: Map<string, number> = new Map(); // Maps arrays in data object and number of tuple values\n  dataMap: Map<string, any> = new Map(); // Maps paths in form data to schema and formGroup paths\n  dataRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in form data\n  schemaRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in schema\n  schemaRefLibrary: any = {}; // Library of schemas for resolving schema $refs\n  layoutRefLibrary: any = { \"\": null }; // Library of layout nodes for adding to form\n  templateRefLibrary: any = {}; // Library of formGroup templates for adding to form\n  hasRootReference = false; // Does the form include a recursive reference to itself?\n\n  language = \"en-US\"; // Does the form include a recursive reference to itself?\n\n  // Default global form options\n  defaultFormOptions: any = {\n    autocomplete: true, // Allow the web browser to remember previous form submission values as defaults\n    addSubmit: \"auto\", // Add a submit button if layout does not have one?\n    // for addSubmit: true = always, false = never,\n    // 'auto' = only if layout is undefined (form is built from schema alone)\n    debug: false, // Show debugging output?\n    disableInvalidSubmit: true, // Disable submit if form invalid?\n    formDisabled: false, // Set entire form as disabled? (not editable, and disables outputs)\n    formReadonly: false, // Set entire form as read only? (not editable, but outputs still enabled)\n    fieldsRequired: false, // (set automatically) Are there any required fields in the form?\n    framework: \"no-framework\", // The framework to load\n    loadExternalAssets: false, // Load external css and JavaScript for framework?\n    pristine: { errors: true, success: true },\n    supressPropertyTitles: false,\n    setSchemaDefaults: \"auto\", // Set fefault values from schema?\n    // true = always set (unless overridden by layout default or formValues)\n    // false = never set\n    // 'auto' = set in addable components, and everywhere if formValues not set\n    setLayoutDefaults: \"auto\", // Set fefault values from layout?\n    // true = always set (unless overridden by formValues)\n    // false = never set\n    // 'auto' = set in addable components, and everywhere if formValues not set\n    validateOnRender: \"auto\", // Validate fields immediately, before they are touched?\n    // true = validate all fields immediately\n    // false = only validate fields after they are touched by user\n    // 'auto' = validate fields with values immediately, empty fields after they are touched\n    widgets: {}, // Any custom widgets to load\n    defautWidgetOptions: {\n      // Default options for form control widgets\n      listItems: 1, // Number of list items to initially add to arrays with no default value\n      addable: true, // Allow adding items to an array or $ref point?\n      orderable: true, // Allow reordering items within an array?\n      removable: true, // Allow removing items from an array or $ref point?\n      enableErrorState: true, // Apply 'has-error' class when field fails validation?\n      // disableErrorState: false, // Don't apply 'has-error' class when field fails validation?\n      enableSuccessState: true, // Apply 'has-success' class when field validates?\n      // disableSuccessState: false, // Don't apply 'has-success' class when field validates?\n      feedback: false, // Show inline feedback icons?\n      feedbackOnRender: false, // Show errorMessage on Render?\n      notitle: false, // Hide title?\n      disabled: false, // Set control as disabled? (not editable, and excluded from output)\n      readonly: false, // Set control as read only? (not editable, but included in output)\n      returnEmptyFields: true, // return values for fields that contain no data?\n      validationMessages: {}, // set by setLanguage()\n    },\n  };\n\n  constructor() {\n    this.setLanguage(this.language);\n    this.ajv.addMetaSchema(jsonDraft6);\n  }\n\n  setLanguage(language: string = \"en-US\") {\n    this.language = language;\n    const languageValidationMessages = {\n      fr: frValidationMessages,\n      en: enValidationMessages,\n      it: itValidationMessages,\n      pt: ptValidationMessages,\n      zh: zhValidationMessages,\n    };\n    const languageCode = language.slice(0, 2);\n\n    const validationMessages = languageValidationMessages[languageCode];\n\n    this.defaultFormOptions.defautWidgetOptions.validationMessages = cloneDeep(\n      validationMessages\n    );\n  }\n\n  getData() {\n    return this.data;\n  }\n\n  getSchema() {\n    return this.schema;\n  }\n\n  getLayout() {\n    return this.layout;\n  }\n\n  resetAllValues() {\n    this.JsonFormCompatibility = false;\n    this.ReactJsonSchemaFormCompatibility = false;\n    this.AngularSchemaFormCompatibility = false;\n    this.tpldata = {};\n    this.validateFormData = null;\n    this.formValues = {};\n    this.schema = {};\n    this.layout = [];\n    this.formGroupTemplate = {};\n    this.formGroup = null;\n    this.framework = null;\n    this.data = {};\n    this.validData = null;\n    this.isValid = null;\n    this.validationErrors = null;\n    this.arrayMap = new Map();\n    this.dataMap = new Map();\n    this.dataRecursiveRefMap = new Map();\n    this.schemaRecursiveRefMap = new Map();\n    this.layoutRefLibrary = {};\n    this.schemaRefLibrary = {};\n    this.templateRefLibrary = {};\n    this.formOptions = cloneDeep(this.defaultFormOptions);\n  }\n\n  /**\n   * 'buildRemoteError' function\n   *\n   * Example errors:\n   * {\n   *   last_name: [ {\n   *     message: 'Last name must by start with capital letter.',\n   *     code: 'capital_letter'\n   *   } ],\n   *   email: [ {\n   *     message: 'Email must be from example.com domain.',\n   *     code: 'special_domain'\n   *   }, {\n   *     message: 'Email must contain an @ symbol.',\n   *     code: 'at_symbol'\n   *   } ]\n   * }\n   * //{ErrorMessages} errors\n   */\n  buildRemoteError(errors: ErrorMessages) {\n    forEach(errors, (value, key) => {\n      if (key in this.formGroup.controls) {\n        for (const error of value) {\n          const err = {};\n          err[error[\"code\"]] = error[\"message\"];\n          this.formGroup.get(key).setErrors(err, { emitEvent: true });\n        }\n      }\n    });\n  }\n\n  validateData(newValue: any, updateSubscriptions = true): void {\n    // Format raw form data to correct data types\n    this.data = formatFormData(\n      newValue,\n      this.dataMap,\n      this.dataRecursiveRefMap,\n      this.arrayMap,\n      this.formOptions.returnEmptyFields\n    );\n    this.isValid = this.validateFormData(this.data);\n    this.validData = this.isValid ? this.data : null;\n    const compileErrors = (errors) => {\n      const compiledErrors = {};\n      (errors || []).forEach((error) => {\n        if (!compiledErrors[error.dataPath]) {\n          compiledErrors[error.dataPath] = [];\n        }\n        compiledErrors[error.dataPath].push(error.message);\n      });\n      return compiledErrors;\n    };\n    this.ajvErrors = this.validateFormData.errors;\n    this.validationErrors = compileErrors(this.validateFormData.errors);\n    if (updateSubscriptions) {\n      this.dataChanges.next(this.data);\n      this.isValidChanges.next(this.isValid);\n      this.validationErrorChanges.next(this.ajvErrors);\n    }\n  }\n\n  buildFormGroupTemplate(formValues: any = null, setValues = true) {\n    this.formGroupTemplate = buildFormGroupTemplate(\n      this,\n      formValues,\n      setValues\n    );\n  }\n\n  buildFormGroup() {\n    this.formGroup = <FormGroup>buildFormGroup(this.formGroupTemplate);\n    if (this.formGroup) {\n      this.compileAjvSchema();\n      this.validateData(this.formGroup.value);\n\n      // Set up observables to emit data and validation info when form data changes\n      if (this.formValueSubscription) {\n        this.formValueSubscription.unsubscribe();\n      }\n      this.formValueSubscription = this.formGroup.valueChanges.subscribe(\n        (formValue) => this.validateData(formValue)\n      );\n    }\n  }\n\n  buildLayout(widgetLibrary: any) {\n    this.layout = buildLayout(this, widgetLibrary);\n  }\n\n  setOptions(newOptions: any) {\n    if (isObject(newOptions)) {\n      const addOptions = cloneDeep(newOptions);\n      // Backward compatibility for 'defaultOptions' (renamed 'defautWidgetOptions')\n      if (isObject(addOptions.defaultOptions)) {\n        Object.assign(\n          this.formOptions.defautWidgetOptions,\n          addOptions.defaultOptions\n        );\n        delete addOptions.defaultOptions;\n      }\n      if (isObject(addOptions.defautWidgetOptions)) {\n        Object.assign(\n          this.formOptions.defautWidgetOptions,\n          addOptions.defautWidgetOptions\n        );\n        delete addOptions.defautWidgetOptions;\n      }\n      Object.assign(this.formOptions, addOptions);\n\n      // convert disableErrorState / disableSuccessState to enable...\n      const globalDefaults = this.formOptions.defautWidgetOptions;\n      [\"ErrorState\", \"SuccessState\"]\n        .filter((suffix) => hasOwn(globalDefaults, \"disable\" + suffix))\n        .forEach((suffix) => {\n          globalDefaults[\"enable\" + suffix] = !globalDefaults[\n            \"disable\" + suffix\n          ];\n          delete globalDefaults[\"disable\" + suffix];\n        });\n    }\n  }\n\n  compileAjvSchema() {\n    if (!this.validateFormData) {\n      // if 'ui:order' exists in properties, move it to root before compiling with ajv\n      if (Array.isArray(this.schema.properties[\"ui:order\"])) {\n        this.schema[\"ui:order\"] = this.schema.properties[\"ui:order\"];\n        delete this.schema.properties[\"ui:order\"];\n      }\n      this.ajv.removeSchema(this.schema);\n      this.validateFormData = this.ajv.compile(this.schema);\n    }\n  }\n\n  buildSchemaFromData(data?: any, requireAllFields = false): any {\n    if (data) {\n      return buildSchemaFromData(data, requireAllFields);\n    }\n    this.schema = buildSchemaFromData(this.formValues, requireAllFields);\n  }\n\n  buildSchemaFromLayout(layout?: any): any {\n    if (layout) {\n      return buildSchemaFromLayout(layout);\n    }\n    this.schema = buildSchemaFromLayout(this.layout);\n  }\n\n  setTpldata(newTpldata: any = {}): void {\n    this.tpldata = newTpldata;\n  }\n\n  parseText(\n    text = \"\",\n    value: any = {},\n    values: any = {},\n    key: number | string = null\n  ): string {\n    if (!text || !/{{.+?}}/.test(text)) {\n      return text;\n    }\n    return text.replace(/{{(.+?)}}/g, (...a) =>\n      this.parseExpression(a[1], value, values, key, this.tpldata)\n    );\n  }\n\n  parseExpression(\n    expression = \"\",\n    value: any = {},\n    values: any = {},\n    key: number | string = null,\n    tpldata: any = null\n  ) {\n    if (typeof expression !== \"string\") {\n      return \"\";\n    }\n    const index = typeof key === \"number\" ? key + 1 + \"\" : key || \"\";\n    expression = expression.trim();\n    if (\n      (expression[0] === \"'\" || expression[0] === '\"') &&\n      expression[0] === expression[expression.length - 1] &&\n      expression.slice(1, expression.length - 1).indexOf(expression[0]) === -1\n    ) {\n      return expression.slice(1, expression.length - 1);\n    }\n    if (expression === \"idx\" || expression === \"$index\") {\n      return index;\n    }\n    if (expression === \"value\" && !hasOwn(values, \"value\")) {\n      return value;\n    }\n    if (\n      ['\"', \"'\", \" \", \"||\", \"&&\", \"+\"].every(\n        (delim) => expression.indexOf(delim) === -1\n      )\n    ) {\n      const pointer = JsonPointer.parseObjectPath(expression);\n      return pointer[0] === \"value\" && JsonPointer.has(value, pointer.slice(1))\n        ? JsonPointer.get(value, pointer.slice(1))\n        : pointer[0] === \"values\" && JsonPointer.has(values, pointer.slice(1))\n        ? JsonPointer.get(values, pointer.slice(1))\n        : pointer[0] === \"tpldata\" && JsonPointer.has(tpldata, pointer.slice(1))\n        ? JsonPointer.get(tpldata, pointer.slice(1))\n        : JsonPointer.has(values, pointer)\n        ? JsonPointer.get(values, pointer)\n        : \"\";\n    }\n    if (expression.indexOf(\"[idx]\") > -1) {\n      expression = expression.replace(/\\[idx\\]/g, <string>index);\n    }\n    if (expression.indexOf(\"[$index]\") > -1) {\n      expression = expression.replace(/\\[$index\\]/g, <string>index);\n    }\n    // TODO: Improve expression evaluation by parsing quoted strings first\n    // let expressionArray = expression.match(/([^\"']+|\"[^\"]+\"|'[^']+')/g);\n    if (expression.indexOf(\"||\") > -1) {\n      return expression\n        .split(\"||\")\n        .reduce(\n          (all, term) =>\n            all || this.parseExpression(term, value, values, key, tpldata),\n          \"\"\n        );\n    }\n    if (expression.indexOf(\"&&\") > -1) {\n      return expression\n        .split(\"&&\")\n        .reduce(\n          (all, term) =>\n            all && this.parseExpression(term, value, values, key, tpldata),\n          \" \"\n        )\n        .trim();\n    }\n    if (expression.indexOf(\"+\") > -1) {\n      return expression\n        .split(\"+\")\n        .map((term) => this.parseExpression(term, value, values, key, tpldata))\n        .join(\"\");\n    }\n    return \"\";\n  }\n\n  setArrayItemTitle(\n    parentCtx: any = {},\n    childNode: any = null,\n    index: number = null\n  ): string {\n    const parentNode = parentCtx.layoutNode;\n    const parentValues: any = this.getFormControlValue(parentCtx);\n    const isArrayItem =\n      (parentNode.type || \"\").slice(-5) === \"array\" && isArray(parentValues);\n    const text = JsonPointer.getFirst(\n      isArrayItem && childNode.type !== \"$ref\"\n        ? [\n            [childNode, \"/options/legend\"],\n            [childNode, \"/options/title\"],\n            [parentNode, \"/options/title\"],\n            [parentNode, \"/options/legend\"],\n          ]\n        : [\n            [childNode, \"/options/title\"],\n            [childNode, \"/options/legend\"],\n            [parentNode, \"/options/title\"],\n            [parentNode, \"/options/legend\"],\n          ]\n    );\n    if (!text) {\n      return text;\n    }\n    const childValue =\n      isArray(parentValues) && index < parentValues.length\n        ? parentValues[index]\n        : parentValues;\n    return this.parseText(text, childValue, parentValues, index);\n  }\n\n  setItemTitle(ctx: any) {\n    return !ctx.options.title && /^(\\d+|-)$/.test(ctx.layoutNode.name)\n      ? null\n      : this.parseText(\n          ctx.options.title || toTitleCase(ctx.layoutNode.name),\n          this.getFormControlValue(this),\n          (this.getFormControlGroup(this) || <any>{}).value,\n          ctx.dataIndex[ctx.dataIndex.length - 1]\n        );\n  }\n\n  evaluateCondition(layoutNode: any, dataIndex: number[]): boolean {\n    const arrayIndex = dataIndex && dataIndex[dataIndex.length - 1];\n    let result = true;\n    if (hasValue((layoutNode.options || {}).condition)) {\n      if (typeof layoutNode.options.condition === \"string\") {\n        let pointer = layoutNode.options.condition;\n        if (hasValue(arrayIndex)) {\n          pointer = pointer.replace(\"[arrayIndex]\", `[${arrayIndex}]`);\n        }\n        pointer = JsonPointer.parseObjectPath(pointer);\n        result = !!JsonPointer.get(this.data, pointer);\n        if (!result && pointer[0] === \"model\") {\n          result = !!JsonPointer.get({ model: this.data }, pointer);\n        }\n      } else if (typeof layoutNode.options.condition === \"function\") {\n        result = layoutNode.options.condition(this.data);\n      } else if (\n        typeof layoutNode.options.condition.functionBody === \"string\"\n      ) {\n        try {\n          const dynFn = new Function(\n            \"model\",\n            \"arrayIndices\",\n            layoutNode.options.condition.functionBody\n          );\n          result = dynFn(this.data, dataIndex);\n        } catch (e) {\n          result = true;\n          console.error(\n            \"condition functionBody errored out on evaluation: \" +\n              layoutNode.options.condition.functionBody\n          );\n        }\n      }\n    }\n    return result;\n  }\n\n  initializeControl(ctx: any, bind = true): boolean {\n    if (!isObject(ctx)) {\n      return false;\n    }\n    if (isEmpty(ctx.options)) {\n      ctx.options = !isEmpty((ctx.layoutNode || {}).options)\n        ? ctx.layoutNode.options\n        : cloneDeep(this.formOptions);\n    }\n    ctx.formControl = this.getFormControl(ctx);\n    ctx.boundControl = bind && !!ctx.formControl;\n    if (ctx.formControl) {\n      ctx.controlName = this.getFormControlName(ctx);\n      ctx.controlValue = ctx.formControl.value;\n      ctx.controlDisabled = ctx.formControl.disabled;\n      // Initial error message\n      ctx.options.errorMessage =\n        ctx.formControl.status === \"VALID\"\n          ? null\n          : this.formatErrors(\n              ctx.formControl.errors,\n              ctx.options.validationMessages\n            );\n      ctx.options.showErrors =\n        this.formOptions.validateOnRender === true ||\n        (this.formOptions.validateOnRender === \"auto\" &&\n          hasValue(ctx.controlValue));\n      // Subscription for error messages\n      // ctx.formControl.statusChanges.subscribe(\n      //   (status) =>\n      //     (ctx.options.errorMessage =\n      //       status === \"VALID\"\n      //         ? null\n      //         : this.formatErrors(\n      //             ctx.formControl.errors,\n      //             ctx.options.validationMessages\n      //           ))\n      // );\n      this.validationErrorChanges.subscribe((errors) => {\n        ctx.options.errorMessage = `${errors}`;\n      });\n      ctx.formControl.valueChanges.subscribe((value) => {\n        if (!!value) {\n          ctx.controlValue = value;\n        }\n      });\n    } else {\n      ctx.controlName = ctx.layoutNode.name;\n      ctx.controlValue = ctx.layoutNode.value || null;\n      const dataPointer = this.getDataPointer(ctx);\n      if (bind && dataPointer) {\n        console.error(\n          `warning: control \"${dataPointer}\" is not bound to the Angular FormGroup.`\n        );\n      }\n    }\n    return ctx.boundControl;\n  }\n\n  formatErrors(errors: any, validationMessages: any = {}): string {\n    if (isEmpty(errors)) {\n      return null;\n    }\n    if (!isObject(validationMessages)) {\n      validationMessages = {};\n    }\n    const addSpaces = (string) =>\n      string[0].toUpperCase() +\n      (string.slice(1) || \"\")\n        .replace(/([a-z])([A-Z])/g, \"$1 $2\")\n        .replace(/_/g, \" \");\n    const formatError = (error) =>\n      typeof error === \"object\"\n        ? Object.keys(error)\n            .map((key) =>\n              error[key] === true\n                ? addSpaces(key)\n                : error[key] === false\n                ? \"Not \" + addSpaces(key)\n                : addSpaces(key) + \": \" + formatError(error[key])\n            )\n            .join(\", \")\n        : addSpaces(error.toString());\n    const messages = [];\n    return (\n      Object.keys(errors)\n        // Hide 'required' error, unless it is the only one\n        .filter(\n          (errorKey) =>\n            errorKey !== \"required\" || Object.keys(errors).length === 1\n        )\n        .map((errorKey) =>\n          // If validationMessages is a string, return it\n          typeof validationMessages === \"string\"\n            ? validationMessages\n            : // If custom error message is a function, return function result\n            typeof validationMessages[errorKey] === \"function\"\n            ? validationMessages[errorKey](errors[errorKey])\n            : // If custom error message is a string, replace placeholders and return\n            typeof validationMessages[errorKey] === \"string\"\n            ? // Does error message have any {{property}} placeholders?\n              !/{{.+?}}/.test(validationMessages[errorKey])\n              ? validationMessages[errorKey]\n              : // Replace {{property}} placeholders with values\n                Object.keys(errors[errorKey]).reduce(\n                  (errorMessage, errorProperty) =>\n                    errorMessage.replace(\n                      new RegExp(\"{{\" + errorProperty + \"}}\", \"g\"),\n                      errors[errorKey][errorProperty]\n                    ),\n                  validationMessages[errorKey]\n                )\n            : // If no custom error message, return formatted error data instead\n              addSpaces(errorKey) + \" Error: \" + formatError(errors[errorKey])\n        )\n        .join(\"<br>\")\n    );\n  }\n\n  updateValue(ctx: any, value: any): void {\n    // Set value of current control\n    ctx.controlValue = value;\n    if (ctx.boundControl) {\n      ctx.formControl.setValue(value);\n      ctx.formControl.markAsDirty();\n    }\n    ctx.layoutNode.value = value;\n\n    // Set values of any related controls in copyValueTo array\n    if (isArray(ctx.options.copyValueTo)) {\n      for (const item of ctx.options.copyValueTo) {\n        const targetControl = getControl(this.formGroup, item);\n        if (\n          isObject(targetControl) &&\n          typeof targetControl.setValue === \"function\"\n        ) {\n          targetControl.setValue(value);\n          targetControl.markAsDirty();\n        }\n      }\n    }\n  }\n\n  updateArrayCheckboxList(ctx: any, checkboxList: TitleMapItem[]): void {\n    const formArray = <FormArray>this.getFormControl(ctx);\n\n    // Remove all existing items\n    while (formArray.value.length) {\n      formArray.removeAt(0);\n    }\n\n    // Re-add an item for each checked box\n    const refPointer = removeRecursiveReferences(\n      ctx.layoutNode.dataPointer + \"/-\",\n      this.dataRecursiveRefMap,\n      this.arrayMap\n    );\n    for (const checkboxItem of checkboxList) {\n      if (checkboxItem.checked) {\n        const newFormControl = buildFormGroup(\n          this.templateRefLibrary[refPointer]\n        );\n        newFormControl.setValue(checkboxItem.value);\n        formArray.push(newFormControl);\n      }\n    }\n    formArray.markAsDirty();\n  }\n\n  getFormControl(ctx: any): AbstractControl {\n    if (\n      !ctx.layoutNode ||\n      !isDefined(ctx.layoutNode.dataPointer) ||\n      ctx.layoutNode.type === \"$ref\"\n    ) {\n      return null;\n    }\n    return getControl(this.formGroup, this.getDataPointer(ctx));\n  }\n\n  getFormControlValue(ctx: any): AbstractControl {\n    if (\n      !ctx.layoutNode ||\n      !isDefined(ctx.layoutNode.dataPointer) ||\n      ctx.layoutNode.type === \"$ref\"\n    ) {\n      return null;\n    }\n    const control = getControl(this.formGroup, this.getDataPointer(ctx));\n    return control ? control.value : null;\n  }\n\n  getFormControlGroup(ctx: any): FormArray | FormGroup {\n    if (!ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer)) {\n      return null;\n    }\n    return getControl(this.formGroup, this.getDataPointer(ctx), true);\n  }\n\n  getFormControlName(ctx: any): string {\n    if (\n      !ctx.layoutNode ||\n      !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex)\n    ) {\n      return null;\n    }\n    return JsonPointer.toKey(this.getDataPointer(ctx));\n  }\n\n  getLayoutArray(ctx: any): any[] {\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -1);\n  }\n\n  getParentNode(ctx: any): any {\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -2);\n  }\n\n  getDataPointer(ctx: any): string {\n    if (\n      !ctx.layoutNode ||\n      !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex)\n    ) {\n      return null;\n    }\n    return JsonPointer.toIndexedPointer(\n      ctx.layoutNode.dataPointer,\n      ctx.dataIndex,\n      this.arrayMap\n    );\n  }\n\n  getLayoutPointer(ctx: any): string {\n    if (!hasValue(ctx.layoutIndex)) {\n      return null;\n    }\n    return \"/\" + ctx.layoutIndex.join(\"/items/\");\n  }\n\n  isControlBound(ctx: any): boolean {\n    if (\n      !ctx.layoutNode ||\n      !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex)\n    ) {\n      return false;\n    }\n    const controlGroup = this.getFormControlGroup(ctx);\n    const name = this.getFormControlName(ctx);\n    return controlGroup ? hasOwn(controlGroup.controls, name) : false;\n  }\n\n  addItem(ctx: any, name?: string): boolean {\n    if (\n      !ctx.layoutNode ||\n      !isDefined(ctx.layoutNode.$ref) ||\n      !hasValue(ctx.dataIndex) ||\n      !hasValue(ctx.layoutIndex)\n    ) {\n      return false;\n    }\n\n    // Create a new Angular form control from a template in templateRefLibrary\n    const newFormGroup = buildFormGroup(\n      this.templateRefLibrary[ctx.layoutNode.$ref]\n    );\n\n    // Add the new form control to the parent formArray or formGroup\n    if (ctx.layoutNode.arrayItem) {\n      // Add new array item to formArray\n      (<FormArray>this.getFormControlGroup(ctx)).push(newFormGroup);\n    } else {\n      // Add new $ref item to formGroup\n      (<FormGroup>this.getFormControlGroup(ctx)).addControl(\n        name || this.getFormControlName(ctx),\n        newFormGroup\n      );\n    }\n\n    // Copy a new layoutNode from layoutRefLibrary\n    const newLayoutNode = getLayoutNode(ctx.layoutNode, this);\n    newLayoutNode.arrayItem = ctx.layoutNode.arrayItem;\n    if (ctx.layoutNode.arrayItemType) {\n      newLayoutNode.arrayItemType = ctx.layoutNode.arrayItemType;\n    } else {\n      delete newLayoutNode.arrayItemType;\n    }\n    if (name) {\n      newLayoutNode.name = name;\n      newLayoutNode.dataPointer += \"/\" + JsonPointer.escape(name);\n      newLayoutNode.options.title = fixTitle(name);\n    }\n\n    // Add the new layoutNode to the form layout\n    JsonPointer.insert(this.layout, this.getLayoutPointer(ctx), newLayoutNode);\n\n    return true;\n  }\n\n  moveArrayItem(ctx: any, oldIndex: number, newIndex: number): boolean {\n    if (\n      !ctx.layoutNode ||\n      !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex) ||\n      !hasValue(ctx.layoutIndex) ||\n      !isDefined(oldIndex) ||\n      !isDefined(newIndex) ||\n      oldIndex === newIndex\n    ) {\n      return false;\n    }\n\n    // Move item in the formArray\n    const formArray = <FormArray>this.getFormControlGroup(ctx);\n    const arrayItem = formArray.at(oldIndex);\n    formArray.removeAt(oldIndex);\n    formArray.insert(newIndex, arrayItem);\n    formArray.updateValueAndValidity();\n\n    // Move layout item\n    const layoutArray = this.getLayoutArray(ctx);\n    layoutArray.splice(newIndex, 0, layoutArray.splice(oldIndex, 1)[0]);\n    return true;\n  }\n\n  removeItem(ctx: any): boolean {\n    if (\n      !ctx.layoutNode ||\n      !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex) ||\n      !hasValue(ctx.layoutIndex)\n    ) {\n      return false;\n    }\n\n    // Remove the Angular form control from the parent formArray or formGroup\n    if (ctx.layoutNode.arrayItem) {\n      // Remove array item from formArray\n      (<FormArray>this.getFormControlGroup(ctx)).removeAt(\n        ctx.dataIndex[ctx.dataIndex.length - 1]\n      );\n    } else {\n      // Remove $ref item from formGroup\n      (<FormGroup>this.getFormControlGroup(ctx)).removeControl(\n        this.getFormControlName(ctx)\n      );\n    }\n\n    // Remove layoutNode from layout\n    JsonPointer.remove(this.layout, this.getLayoutPointer(ctx));\n    return true;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'add-reference-widget',\n  template: `\n    <button *ngIf=\"showAddButton\"\n      [class]=\"options?.fieldHtmlClass || ''\"\n      [disabled]=\"options?.readonly\"\n      (click)=\"addItem($event)\">\n      <span *ngIf=\"options?.icon\" [class]=\"options?.icon\"></span>\n      <span *ngIf=\"options?.title\" [innerHTML]=\"buttonText\"></span>\n    </button>`,\n    changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class AddReferenceComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  previousLayoutIndex: number[];\n  previousDataIndex: number[];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n\n  get showAddButton(): boolean {\n    return !this.layoutNode.arrayItem ||\n      this.layoutIndex[this.layoutIndex.length - 1] < this.options.maxItems;\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    this.jsf.addItem(this);\n  }\n\n  get buttonText(): string {\n    const parent: any = {\n      dataIndex: this.dataIndex.slice(0, -1),\n      layoutIndex: this.layoutIndex.slice(0, -1),\n      layoutNode: this.jsf.getParentNode(this)\n    };\n    return parent.layoutNode.add ||\n      this.jsf.setArrayItemTitle(parent, this.layoutNode, this.itemCount);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'button-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <button\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n        <span *ngIf=\"options?.icon || options?.title\"\n          [class]=\"options?.icon\"\n          [innerHTML]=\"options?.title\"></span>\n      </button>\n    </div>`,\n})\nexport class ButtonComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'checkbox-widget',\n  template: `\n    <label\n      [attr.for]=\"'control' + layoutNode?._id\"\n      [class]=\"options?.itemLabelHtmlClass || ''\">\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        type=\"checkbox\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [checked]=\"isChecked ? 'checked' : null\"\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [value]=\"controlValue\"\n        type=\"checkbox\"\n        (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </label>`,\n})\nexport class CheckboxComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  trueValue: any = true;\n  falseValue: any = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = this.options.title;\n    }\n  }\n\n  updateValue(event) {\n    event.preventDefault();\n    this.jsf.updateValue(this, event.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  get isChecked() {\n    return this.jsf.getFormControlValue(this) === this.trueValue;\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService, TitleMapItem } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'checkboxes-widget',\n  template: `\n    <label *ngIf=\"options?.title\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [style.display]=\"options?.notitle ? 'none' : ''\"\n      [innerHTML]=\"options?.title\"></label>\n\n    <!-- 'horizontal' = checkboxes-inline or checkboxbuttons -->\n    <div *ngIf=\"layoutOrientation === 'horizontal'\" [class]=\"options?.htmlClass || ''\">\n      <label *ngFor=\"let checkboxItem of checkboxList\"\n        [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n        [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\">\n        <input type=\"checkbox\"\n          [attr.required]=\"options?.required\"\n          [checked]=\"checkboxItem.checked\"\n          [class]=\"options?.fieldHtmlClass || ''\"\n          [disabled]=\"controlDisabled\"\n          [id]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n          [name]=\"checkboxItem?.name\"\n          [readonly]=\"options?.readonly ? 'readonly' : null\"\n          [value]=\"checkboxItem.value\"\n          (change)=\"updateValue($event)\">\n        <span [innerHTML]=\"checkboxItem.name\"></span>\n      </label>\n    </div>\n\n    <!-- 'vertical' = regular checkboxes -->\n    <div *ngIf=\"layoutOrientation === 'vertical'\">\n      <div *ngFor=\"let checkboxItem of checkboxList\" [class]=\"options?.htmlClass || ''\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n          [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n            (' ' + (options?.style?.unselected || '')))\">\n          <input type=\"checkbox\"\n            [attr.required]=\"options?.required\"\n            [checked]=\"checkboxItem.checked\"\n            [class]=\"options?.fieldHtmlClass || ''\"\n            [disabled]=\"controlDisabled\"\n            [id]=\"options?.name + '/' + checkboxItem.value\"\n            [name]=\"checkboxItem?.name\"\n            [readonly]=\"options?.readonly ? 'readonly' : null\"\n            [value]=\"checkboxItem.value\"\n            (change)=\"updateValue($event)\">\n          <span [innerHTML]=\"checkboxItem?.name\"></span>\n        </label>\n      </div>\n    </div>`,\n})\nexport class CheckboxesComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  layoutOrientation: string;\n  formArray: AbstractControl;\n  checkboxList: TitleMapItem[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.layoutOrientation = (this.layoutNode.type === 'checkboxes-inline' ||\n      this.layoutNode.type === 'checkboxbuttons') ? 'horizontal' : 'vertical';\n    this.jsf.initializeControl(this);\n    this.checkboxList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames, this.options.enum, true\n    );\n    if (this.boundControl) {\n      const formArray = this.jsf.getFormControl(this);\n      this.checkboxList.forEach(checkboxItem =>\n        checkboxItem.checked = formArray.value.includes(checkboxItem.value)\n      );\n    }\n  }\n\n  updateValue(event) {\n    for (const checkboxItem of this.checkboxList) {\n      if (event.target.value === checkboxItem.value) {\n        checkboxItem.checked = event.target.checked;\n      }\n    }\n    if (this.boundControl) {\n      this.jsf.updateArrayCheckboxList(this, this.checkboxList);\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'file-widget',\n  template: ``,\n})\nexport class FileComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'input-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [type]=\"layoutNode?.type\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">\n        <datalist *ngIf=\"options?.typeahead?.source\"\n          [id]=\"'control' + layoutNode?._id + 'Autocomplete'\">\n          <option *ngFor=\"let word of options?.typeahead?.source\" [value]=\"word\">\n        </datalist>\n    </div>`,\n})\nexport class InputComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: string;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'message-widget',\n  template: `\n    <span *ngIf=\"message\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [innerHTML]=\"message\"></span>`,\n})\nexport class MessageComponent implements OnInit {\n  options: any;\n  message: string = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.message = this.options.help || this.options.helpvalue ||\n      this.options.msg || this.options.message;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'none-widget',\n  template: ``,\n})\nexport class NoneComponent {\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'number-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [title]=\"lastValidNumber\"\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [title]=\"lastValidNumber\"\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">\n      <span *ngIf=\"layoutNode?.type === 'range'\" [innerHTML]=\"controlValue\"></span>\n    </div>`,\n})\nexport class NumberComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.layoutNode.dataType === 'integer') { this.allowDecimal = false; }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'one-of-widget',\n  template: ``,\n})\nexport class OneOfComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'radios-widget',\n  template: `\n    <label *ngIf=\"options?.title\"\n      [attr.for]=\"'control' + layoutNode?._id\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [style.display]=\"options?.notitle ? 'none' : ''\"\n      [innerHTML]=\"options?.title\"></label>\n\n    <!-- 'horizontal' = radios-inline or radiobuttons -->\n    <div *ngIf=\"layoutOrientation === 'horizontal'\"\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngFor=\"let radioItem of radiosList\"\n        [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n        [class]=\"(options?.itemLabelHtmlClass || '') +\n          ((controlValue + '' === radioItem?.value + '') ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\">\n        <input type=\"radio\"\n          [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n          [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n          [attr.required]=\"options?.required\"\n          [checked]=\"radioItem?.value === controlValue\"\n          [class]=\"options?.fieldHtmlClass || ''\"\n          [disabled]=\"controlDisabled\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n          [name]=\"controlName\"\n          [value]=\"radioItem?.value\"\n          (change)=\"updateValue($event)\">\n        <span [innerHTML]=\"radioItem?.name\"></span>\n      </label>\n    </div>\n\n    <!-- 'vertical' = regular radios -->\n    <div *ngIf=\"layoutOrientation !== 'horizontal'\">\n      <div *ngFor=\"let radioItem of radiosList\"\n        [class]=\"options?.htmlClass || ''\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n          [class]=\"(options?.itemLabelHtmlClass || '') +\n            ((controlValue + '' === radioItem?.value + '') ?\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n            (' ' + (options?.style?.unselected || '')))\">\n          <input type=\"radio\"\n            [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n            [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n            [attr.required]=\"options?.required\"\n            [checked]=\"radioItem?.value === controlValue\"\n            [class]=\"options?.fieldHtmlClass || ''\"\n            [disabled]=\"controlDisabled\"\n            [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n            [name]=\"controlName\"\n            [value]=\"radioItem?.value\"\n            (change)=\"updateValue($event)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </label>\n      </div>\n    </div>`,\n})\nexport class RadiosComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  layoutOrientation = 'vertical';\n  radiosList: any[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    if (this.layoutNode.type === 'radios-inline' ||\n      this.layoutNode.type === 'radiobuttons'\n    ) {\n      this.layoutOrientation = 'horizontal';\n    }\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'root-widget',\n  template: `\n    <div *ngFor=\"let layoutItem of layout; let i = index\"\n      [class.form-flex-item]=\"isFlexItem\"\n      [style.align-self]=\"(layoutItem.options || {})['align-self']\"\n      [style.flex-basis]=\"getFlexAttribute(layoutItem, 'flex-basis')\"\n      [style.flex-grow]=\"getFlexAttribute(layoutItem, 'flex-grow')\"\n      [style.flex-shrink]=\"getFlexAttribute(layoutItem, 'flex-shrink')\"\n      [style.order]=\"(layoutItem.options || {}).order\">\n      <div\n        [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"\n        [orderable]=\"isDraggable(layoutItem)\">\n        <select-framework-widget *ngIf=\"showWidget(layoutItem)\"\n          [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n          [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n          [layoutNode]=\"layoutItem\"></select-framework-widget>\n      </div>\n    </div>`,\n  styles: [`\n    [draggable=true] {\n      transition: all 150ms cubic-bezier(.4, 0, .2, 1);\n    }\n    [draggable=true]:hover {\n      cursor: move;\n      box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n      position: relative; z-index: 10;\n      margin-top: -1px;\n      margin-left: -1px;\n      margin-right: 1px;\n      margin-bottom: 1px;\n    }\n    [draggable=true].drag-target-top {\n      box-shadow: 0 -2px 0 #000;\n      position: relative; z-index: 20;\n    }\n    [draggable=true].drag-target-bottom {\n      box-shadow: 0 2px 0 #000;\n      position: relative; z-index: 20;\n    }\n  `],\n})\nexport class RootComponent {\n  options: any;\n  @Input() dataIndex: number[];\n  @Input() layoutIndex: number[];\n  @Input() layout: any[];\n  @Input() isOrderable: boolean;\n  @Input() isFlexItem = false;\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  isDraggable(node: any): boolean {\n    return node.arrayItem && node.type !== '$ref' &&\n      node.arrayItemType === 'list' && this.isOrderable !== false;\n  }\n\n  // Set attributes for flexbox child\n  // (container attributes are set in section.component)\n  getFlexAttribute(node: any, attribute: string) {\n    const index = ['flex-grow', 'flex-shrink', 'flex-basis'].indexOf(attribute);\n    return ((node.options || {}).flex || '').split(/\\s+/)[index] ||\n      (node.options || {})[attribute] || ['1', '1', 'auto'][index];\n  }\n\n  showWidget(layoutNode: any): boolean {\n    return this.jsf.evaluateCondition(layoutNode, this.dataIndex);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'section-widget',\n  template: `\n    <div *ngIf=\"containerType === 'div'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <label *ngIf=\"sectionTitle\"\n        class=\"legend\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></label>\n      <root-widget *ngIf=\"expanded\"\n        [dataIndex]=\"dataIndex\"\n        [layout]=\"layoutNode.items\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [isOrderable]=\"options?.orderable\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\n    </div>\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\"\n      [disabled]=\"options?.readonly\">\n      <legend *ngIf=\"sectionTitle\"\n        class=\"legend\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></legend>\n      <div *ngIf=\"options?.messageLocation !== 'bottom'\">\n        <p *ngIf=\"options?.description\"\n        class=\"help-block\"\n        [class]=\"options?.labelHelpBlockClass || ''\"\n        [innerHTML]=\"options?.description\"></p>\n      </div>\n      <root-widget *ngIf=\"expanded\"\n        [dataIndex]=\"dataIndex\"\n        [layout]=\"layoutNode.items\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [isOrderable]=\"options?.orderable\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\n      <div *ngIf=\"options?.messageLocation === 'bottom'\">\n        <p *ngIf=\"options?.description\"\n        class=\"help-block\"\n        [class]=\"options?.labelHelpBlockClass || ''\"\n        [innerHTML]=\"options?.description\"></p>\n      </div>\n    </fieldset>`,\n  styles: [`\n    .legend { font-weight: bold; }\n    .expandable > legend:before, .expandable > label:before  { content: 'â¶'; padding-right: .3em; }\n    .expanded > legend:before, .expanded > label:before  { content: 'â¼'; padding-right: .2em; }\n  `],\n})\nexport class SectionComponent implements OnInit {\n  options: any;\n  expanded = true;\n  containerType: string;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get sectionTitle() {\n    return this.options.notitle ? null : this.jsf.setItemTitle(this);\n  }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n    this.options = this.layoutNode.options || {};\n    this.expanded = typeof this.options.expanded === 'boolean' ?\n      this.options.expanded : !this.options.expandable;\n    switch (this.layoutNode.type) {\n      case 'fieldset': case 'array': case 'tab': case 'advancedfieldset':\n      case 'authfieldset': case 'optionfieldset': case 'selectfieldset':\n        this.containerType = 'fieldset';\n      break;\n      default: // 'div', 'flex', 'section', 'conditional', 'actions', 'tagsinput'\n        this.containerType = 'div';\n      break;\n    }\n  }\n\n  toggleExpanded() {\n    if (this.options.expandable) { this.expanded = !this.expanded; }\n  }\n\n  // Set attributes for flexbox container\n  // (child attributes are set in root.component)\n  getFlexAttribute(attribute: string) {\n    const flexActive: boolean =\n      this.layoutNode.type === 'flex' ||\n      !!this.options.displayFlex ||\n      this.options.display === 'flex';\n    if (attribute !== 'flex' && !flexActive) { return null; }\n    switch (attribute) {\n      case 'is-flex':\n        return flexActive;\n      case 'display':\n        return flexActive ? 'flex' : 'initial';\n      case 'flex-direction': case 'flex-wrap':\n        const index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\n          this.options[attribute] || ['column', 'nowrap'][index];\n      case 'justify-content': case 'align-items': case 'align-content':\n        return this.options[attribute];\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap, isArray } from '../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'select-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <select *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <option *ngIf=\"!isArray(selectItem?.items)\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </option>\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <option *ngFor=\"let subItem of selectItem.items\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </option>\n          </optgroup>\n        </ng-template>\n      </select>\n      <select *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        (change)=\"updateValue($event)\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <option *ngIf=\"!isArray(selectItem?.items)\"\n            [selected]=\"selectItem?.value === controlValue\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </option>\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <option *ngFor=\"let subItem of selectItem.items\"\n              [attr.selected]=\"subItem?.value === controlValue\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </option>\n          </optgroup>\n        </ng-template>\n      </select>\n    </div>`,\n})\nexport class SelectComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  selectList: any[] = [];\n  isArray = isArray;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.selectList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, !!this.options.required, !!this.options.flatList\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'select-framework-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class SelectFrameworkComponent implements OnChanges, OnInit {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', {\n      read: ViewContainerRef,\n      static: true })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (this.widgetContainer && !this.newComponent && this.jsf.framework) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.jsf.framework)\n      );\n    }\n    if (this.newComponent) {\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'select-widget-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class SelectWidgetComponent implements OnChanges, OnInit {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef, static: true })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (this.widgetContainer && !this.newComponent && (this.layoutNode || {}).widget) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.layoutNode.widget)\n      );\n    }\n    if (this.newComponent) {\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { hasOwn } from '../shared/utility.functions';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'submit-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <input\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n    </div>`,\n})\nexport class SubmitComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (hasOwn(this.options, 'disabled')) {\n      this.controlDisabled = this.options.disabled;\n    } else if (this.jsf.formOptions.disableInvalidSubmit) {\n      this.controlDisabled = !this.jsf.isValid;\n      this.jsf.isValidChanges.subscribe(isValid => this.controlDisabled = !isValid);\n    }\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = this.options.title;\n    }\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tabs-widget',\n  template: `\n    <ul\n      [class]=\"options?.labelHtmlClass || ''\">\n      <li *ngFor=\"let item of layoutNode?.items; let i = index\"\n        [class]=\"(options?.itemLabelHtmlClass || '') + (selectedItem === i ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + options?.style?.unselected))\"\n        role=\"presentation\"\n        data-tabs>\n        <a *ngIf=\"showAddTab || item.type !== '$ref'\"\n           [class]=\"'nav-link' + (selectedItem === i ? (' ' + options?.activeClass + ' ' + options?.style?.selected) :\n            (' ' + options?.style?.unselected))\"\n          [innerHTML]=\"setTabTitle(item, i)\"\n          (click)=\"select(i)\"></a>\n      </li>\n    </ul>\n\n    <div *ngFor=\"let layoutItem of layoutNode?.items; let i = index\"\n      [class]=\"options?.htmlClass || ''\">\n\n      <select-framework-widget *ngIf=\"selectedItem === i\"\n        [class]=\"(options?.fieldHtmlClass || '') +\n          ' ' + (options?.activeClass || '') +\n          ' ' + (options?.style?.selected || '')\"\n        [dataIndex]=\"layoutNode?.dataType === 'array' ? (dataIndex || []).concat(i) : dataIndex\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"></select-framework-widget>\n\n    </div>`,\n  styles: [` a { cursor: pointer; } `],\n})\nexport class TabsComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  selectedItem = 0;\n  showAddTab = true;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.itemCount = this.layoutNode.items.length - 1;\n    this.updateControl();\n  }\n\n  select(index) {\n    if (this.layoutNode.items[index].type === '$ref') {\n      this.itemCount = this.layoutNode.items.length;\n      this.jsf.addItem({\n        layoutNode: this.layoutNode.items[index],\n        layoutIndex: this.layoutIndex.concat(index),\n        dataIndex: this.dataIndex.concat(index)\n      });\n      this.updateControl();\n    }\n    this.selectedItem = index;\n  }\n\n  updateControl() {\n    const lastItem = this.layoutNode.items[this.layoutNode.items.length - 1];\n    if (lastItem.type === '$ref' &&\n      this.itemCount >= (lastItem.options.maxItems || 1000)\n    ) {\n      this.showAddTab = false;\n    }\n  }\n\n  setTabTitle(item: any, index: number): string {\n    return this.jsf.setArrayItemTitle(this, item, index);\n  }\n}\n","import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'template-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class TemplateComponent implements OnInit, OnChanges {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef , static: true})\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (this.widgetContainer && !this.newComponent && this.layoutNode.options.template) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.layoutNode.options.template)\n      );\n    }\n    if (this.newComponent) {\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'textarea-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <textarea *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"></textarea>\n      <textarea *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">{{controlValue}}</textarea>\n    </div>`,\n})\nexport class TextareaComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AddReferenceComponent } from './add-reference.component';\nimport { ButtonComponent } from './button.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { CheckboxesComponent } from './checkboxes.component';\nimport { FileComponent } from './file.component';\nimport { hasOwn } from '../shared/utility.functions';\nimport { Injectable } from '@angular/core';\nimport { InputComponent } from './input.component';\nimport { MessageComponent } from './message.component';\nimport { NoneComponent } from './none.component';\nimport { NumberComponent } from './number.component';\nimport { OneOfComponent } from './one-of.component';\nimport { RadiosComponent } from './radios.component';\nimport { RootComponent } from './root.component';\nimport { SectionComponent } from './section.component';\nimport { SelectComponent } from './select.component';\nimport { SelectFrameworkComponent } from './select-framework.component';\nimport { SelectWidgetComponent } from './select-widget.component';\nimport { SubmitComponent } from './submit.component';\nimport { TabsComponent } from './tabs.component';\nimport { TemplateComponent } from './template.component';\nimport { TextareaComponent } from './textarea.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WidgetLibraryService {\n\n  defaultWidget = 'text';\n  widgetLibrary: any = {\n\n  // Angular JSON Schema Form administrative widgets\n    'none': NoneComponent, // Placeholder, for development - displays nothing\n    'root': RootComponent, // Form root, renders a complete layout\n    'select-framework': SelectFrameworkComponent, // Applies the selected framework to a specified widget\n    'select-widget': SelectWidgetComponent, // Displays a specified widget\n    '$ref': AddReferenceComponent, // Button to add a new array item or $ref element\n\n  // Free-form text HTML 'input' form control widgets <input type=\"...\">\n    'email': 'text',\n    'integer': 'number', // Note: 'integer' is not a recognized HTML input type\n    'number': NumberComponent,\n    'password': 'text',\n    'search': 'text',\n    'tel': 'text',\n    'text': InputComponent,\n    'url': 'text',\n\n  // Controlled text HTML 'input' form control widgets <input type=\"...\">\n    'color': 'text',\n    'date': 'text',\n    'datetime': 'text',\n    'datetime-local': 'text',\n    'month': 'text',\n    'range': 'number',\n    'time': 'text',\n    'week': 'text',\n\n  // Non-text HTML 'input' form control widgets <input type=\"...\">\n    // 'button': <input type=\"button\"> not used, use <button> instead\n    'checkbox': CheckboxComponent, // TODO: Set ternary = true for 3-state ??\n    'file': FileComponent, // TODO: Finish 'file' widget\n    'hidden': 'text',\n    'image': 'text', // TODO: Figure out how to handle these\n    'radio': 'radios',\n    'reset': 'submit', // TODO: Figure out how to handle these\n    'submit': SubmitComponent,\n\n  // Other (non-'input') HTML form control widgets\n    'button': ButtonComponent,\n    'select': SelectComponent,\n    // 'option': automatically generated by select widgets\n    // 'optgroup': automatically generated by select widgets\n    'textarea': TextareaComponent,\n\n  // HTML form control widget sets\n    'checkboxes': CheckboxesComponent, // Grouped list of checkboxes\n    'checkboxes-inline': 'checkboxes', // Checkboxes in one line\n    'checkboxbuttons': 'checkboxes', // Checkboxes as html buttons\n    'radios': RadiosComponent, // Grouped list of radio buttons\n    'radios-inline': 'radios', // Radio controls in one line\n    'radiobuttons': 'radios', // Radio controls as html buttons\n\n  // HTML Layout widgets\n    // 'label': automatically added to data widgets\n    // 'legend': automatically added to fieldsets\n    'section': SectionComponent, // Just a div <div>\n    'div': 'section', // Still just a div <div>\n    'fieldset': 'section', // A fieldset, with an optional legend <fieldset>\n    'flex': 'section', // A flexbox container <div style=\"display: flex\">\n\n  // Non-HTML layout widgets\n    'one-of': OneOfComponent, // A select box that changes another input\n                              // TODO: Finish 'one-of' widget\n    'array': 'section', // A list you can add, remove and reorder <fieldset>\n    'tabarray': 'tabs', // A tabbed version of array\n    'tab': 'section', // A tab group, similar to a fieldset or section <fieldset>\n    'tabs': TabsComponent, // A tabbed set of panels with different controls\n    'message': MessageComponent, // Insert arbitrary html\n    'help': 'message', // Insert arbitrary html\n    'msg': 'message', // Insert arbitrary html\n    'html': 'message', // Insert arbitrary html\n    'template': TemplateComponent, // Insert a custom Angular component\n\n  // Widgets included for compatibility with JSON Form API\n    'advancedfieldset': 'section', // Adds 'Advanced settings' title <fieldset>\n    'authfieldset': 'section', // Adds 'Authentication settings' title <fieldset>\n    'optionfieldset': 'one-of', // Option control, displays selected sub-item <fieldset>\n    'selectfieldset': 'one-of', // Select control, displays selected sub-item <fieldset>\n    'conditional': 'section', // Identical to 'section' (depeciated) <div>\n    'actions': 'section', // Horizontal button list, can only submit, uses buttons as items <div>\n    'tagsinput': 'section', // For entering short text tags <div>\n    // See: http://ulion.github.io/jsonform/playground/?example=fields-checkboxbuttons\n\n  // Widgets included for compatibility with React JSON Schema Form API\n    'updown': 'number',\n    'date-time': 'datetime-local',\n    'alt-datetime': 'datetime-local',\n    'alt-date': 'date',\n\n  // Widgets included for compatibility with Angular Schema Form API\n    'wizard': 'section', // TODO: Sequential panels with \"Next\" and \"Previous\" buttons\n\n  // Widgets included for compatibility with other libraries\n    'textline': 'text',\n\n  // Recommended 3rd-party add-on widgets (TODO: create wrappers for these...)\n    // 'ng2-select': Select control replacement - http://valor-software.com/ng2-select/\n    // 'flatpickr': Flatpickr date picker - https://github.com/chmln/flatpickr\n    // 'pikaday': Pikaday date picker - https://github.com/dbushell/Pikaday\n    // 'spectrum': Spectrum color picker - http://bgrins.github.io/spectrum\n    // 'bootstrap-slider': Bootstrap Slider range control - https://github.com/seiyria/bootstrap-slider\n    // 'ace': ACE code editor - https://ace.c9.io\n    // 'ckeditor': CKEditor HTML / rich text editor - http://ckeditor.com\n    // 'tinymce': TinyMCE HTML / rich text editor - https://www.tinymce.com\n    // 'imageselect': Bootstrap drop-down image selector - http://silviomoreto.github.io/bootstrap-select\n    // 'wysihtml5': HTML editor - http://jhollingworth.github.io/bootstrap-wysihtml5\n    // 'quill': Quill HTML / rich text editor (?) - https://quilljs.com\n  };\n  registeredWidgets: any = { };\n  frameworkWidgets: any = { };\n  activeWidgets: any = { };\n\n  constructor() {\n    this.setActiveWidgets();\n  }\n\n  setActiveWidgets(): boolean {\n    this.activeWidgets = Object.assign(\n      { }, this.widgetLibrary, this.frameworkWidgets, this.registeredWidgets\n    );\n    for (const widgetName of Object.keys(this.activeWidgets)) {\n      let widget: any = this.activeWidgets[widgetName];\n      // Resolve aliases\n      if (typeof widget === 'string') {\n        const usedAliases: string[] = [];\n        while (typeof widget === 'string' && !usedAliases.includes(widget)) {\n          usedAliases.push(widget);\n          widget = this.activeWidgets[widget];\n        }\n        if (typeof widget !== 'string') {\n          this.activeWidgets[widgetName] = widget;\n        }\n      }\n    }\n    return true;\n  }\n\n  setDefaultWidget(type: string): boolean {\n    if (!this.hasWidget(type)) { return false; }\n    this.defaultWidget = type;\n    return true;\n  }\n\n  hasWidget(type: string, widgetSet = 'activeWidgets'): boolean {\n    if (!type || typeof type !== 'string') { return false; }\n    return hasOwn(this[widgetSet], type);\n  }\n\n  hasDefaultWidget(type: string): boolean {\n    return this.hasWidget(type, 'widgetLibrary');\n  }\n\n  registerWidget(type: string, widget: any): boolean {\n    if (!type || !widget || typeof type !== 'string') { return false; }\n    this.registeredWidgets[type] = widget;\n    return this.setActiveWidgets();\n  }\n\n  unRegisterWidget(type: string): boolean {\n    if (!hasOwn(this.registeredWidgets, type)) { return false; }\n    delete this.registeredWidgets[type];\n    return this.setActiveWidgets();\n  }\n\n  unRegisterAllWidgets(unRegisterFrameworkWidgets = true): boolean {\n    this.registeredWidgets = { };\n    if (unRegisterFrameworkWidgets) { this.frameworkWidgets = { }; }\n    return this.setActiveWidgets();\n  }\n\n  registerFrameworkWidgets(widgets: any): boolean {\n    if (widgets === null || typeof widgets !== 'object') { widgets = { }; }\n    this.frameworkWidgets = widgets;\n    return this.setActiveWidgets();\n  }\n\n  unRegisterFrameworkWidgets(): boolean {\n    if (Object.keys(this.frameworkWidgets).length) {\n      this.frameworkWidgets = { };\n      return this.setActiveWidgets();\n    }\n    return false;\n  }\n\n  getWidget(type?: string, widgetSet = 'activeWidgets'): any {\n    if (this.hasWidget(type, widgetSet)) {\n      return this[widgetSet][type];\n    } else if (this.hasWidget(this.defaultWidget, widgetSet)) {\n      return this[widgetSet][this.defaultWidget];\n    } else {\n      return null;\n    }\n  }\n\n  getAllWidgets(): any {\n    return {\n      widgetLibrary: this.widgetLibrary,\n      registeredWidgets: this.registeredWidgets,\n      frameworkWidgets: this.frameworkWidgets,\n      activeWidgets: this.activeWidgets,\n    };\n  }\n}\n","import { Framework } from './framework';\nimport { hasOwn } from '../shared/utility.functions';\nimport { Inject, Injectable } from '@angular/core';\nimport { WidgetLibraryService } from '../widget-library/widget-library.service';\n\n// Possible future frameworks:\n// - Foundation 6:\n//   http://justindavis.co/2017/06/15/using-foundation-6-in-angular-4/\n//   https://github.com/zurb/foundation-sites\n// - Semantic UI:\n//   https://github.com/edcarroll/ng2-semantic-ui\n//   https://github.com/vladotesanovic/ngSemantic\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FrameworkLibraryService {\n  activeFramework: Framework = null;\n  stylesheets: (HTMLStyleElement|HTMLLinkElement)[];\n  scripts: HTMLScriptElement[];\n  loadExternalAssets = false;\n  defaultFramework: string;\n  frameworkLibrary: { [name: string]: Framework } = {};\n\n  constructor(\n    @Inject(Framework) private frameworks: any[],\n    @Inject(WidgetLibraryService) private widgetLibrary: WidgetLibraryService\n  ) {\n    this.frameworks.forEach(framework =>\n      this.frameworkLibrary[framework.name] = framework\n    );\n    this.defaultFramework = this.frameworks[0].name;\n    this.setFramework(this.defaultFramework);\n  }\n\n  public setLoadExternalAssets(loadExternalAssets = true): void {\n    this.loadExternalAssets = !!loadExternalAssets;\n  }\n\n  public setFramework(\n    framework: string|Framework = this.defaultFramework,\n    loadExternalAssets = this.loadExternalAssets\n  ): boolean {\n    this.activeFramework =\n      typeof framework === 'string' && this.hasFramework(framework) ?\n        this.frameworkLibrary[framework] :\n      typeof framework === 'object' && hasOwn(framework, 'framework') ?\n        framework :\n        this.frameworkLibrary[this.defaultFramework];\n    return this.registerFrameworkWidgets(this.activeFramework);\n  }\n\n  registerFrameworkWidgets(framework: Framework): boolean {\n    return hasOwn(framework, 'widgets') ?\n      this.widgetLibrary.registerFrameworkWidgets(framework.widgets) :\n      this.widgetLibrary.unRegisterFrameworkWidgets();\n  }\n\n  public hasFramework(type: string): boolean {\n    return hasOwn(this.frameworkLibrary, type);\n  }\n\n  public getFramework(): any {\n    if (!this.activeFramework) { this.setFramework('default', true); }\n    return this.activeFramework.framework;\n  }\n\n  public getFrameworkWidgets(): any {\n    return this.activeFramework.widgets || {};\n  }\n\n  public getFrameworkStylesheets(load: boolean = this.loadExternalAssets): string[] {\n    return (load && this.activeFramework.stylesheets) || [];\n  }\n\n  public getFrameworkScripts(load: boolean = this.loadExternalAssets): string[] {\n    return (load && this.activeFramework.scripts) || [];\n  }\n}\n","import cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { convertSchemaToDraft6 } from './shared/convert-schema-to-draft6.function';\nimport { forEach, hasOwn } from './shared/utility.functions';\nimport { FrameworkLibraryService } from './framework-library/framework-library.service';\nimport {\n  hasValue,\n  inArray,\n  isArray,\n  isEmpty,\n  isObject\n} from './shared/validator.functions';\nimport { JsonPointer } from './shared/jsonpointer.functions';\nimport { JsonSchemaFormService } from './json-schema-form.service';\nimport { resolveSchemaReferences } from './shared/json-schema.functions';\nimport { WidgetLibraryService } from './widget-library/widget-library.service';\n\n\n/**\n * @module 'JsonSchemaFormComponent' - Angular JSON Schema Form\n *\n * Root module of the Angular JSON Schema Form client-side library,\n * an Angular library which generates an HTML form from a JSON schema\n * structured data model and/or a JSON Schema Form layout description.\n *\n * This library also validates input data by the user, using both validators on\n * individual controls to provide real-time feedback while the user is filling\n * out the form, and then validating the entire input against the schema when\n * the form is submitted to make sure the returned JSON data object is valid.\n *\n * This library is similar to, and mostly API compatible with:\n *\n * - JSON Schema Form's Angular Schema Form library for AngularJs\n *   http://schemaform.io\n *   http://schemaform.io/examples/bootstrap-example.html (examples)\n *\n * - Mozilla's react-jsonschema-form library for React\n *   https://github.com/mozilla-services/react-jsonschema-form\n *   https://mozilla-services.github.io/react-jsonschema-form (examples)\n *\n * - Joshfire's JSON Form library for jQuery\n *   https://github.com/joshfire/jsonform\n *   http://ulion.github.io/jsonform/playground (examples)\n *\n * This library depends on:\n *  - Angular (obviously)                  https://angular.io\n *  - lodash, JavaScript utility library   https://github.com/lodash/lodash\n *  - ajv, Another JSON Schema validator   https://github.com/epoberezkin/ajv\n *\n * In addition, the Example Playground also depends on:\n *  - brace, Browserified Ace editor       http://thlorenz.github.io/brace\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'json-schema-form',\n  templateUrl: './json-schema-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class JsonSchemaFormComponent implements ControlValueAccessor, OnChanges, OnInit {\n  debugOutput: any; // Debug information, if requested\n  formValueSubscription: any = null;\n  formInitialized = false;\n  objectWrap = false; // Is non-object input schema wrapped in an object?\n\n  formValuesInput: string; // Name of the input providing the form data\n  previousInputs: { // Previous input values, to detect which input triggers onChanges\n    schema: any, layout: any[], data: any, options: any, framework: any | string,\n    widgets: any, form: any, model: any, JSONSchema: any, UISchema: any,\n    formData: any, loadExternalAssets: boolean, debug: boolean,\n  } = {\n      schema: null, layout: null, data: null, options: null, framework: null,\n      widgets: null, form: null, model: null, JSONSchema: null, UISchema: null,\n      formData: null, loadExternalAssets: null, debug: null,\n    };\n\n  // Recommended inputs\n  @Input() schema: any; // The JSON Schema\n  @Input() layout: any[]; // The form layout\n  @Input() data: any; // The form data\n  @Input() options: any; // The global form options\n  @Input() framework: any | string; // The framework to load\n  @Input() widgets: any; // Any custom widgets to load\n\n  // Alternate combined single input\n  @Input() form: any; // For testing, and JSON Schema Form API compatibility\n\n  // Angular Schema Form API compatibility input\n  @Input() model: any; // Alternate input for form data\n\n  // React JSON Schema Form API compatibility inputs\n  @Input() JSONSchema: any; // Alternate input for JSON Schema\n  @Input() UISchema: any; // UI schema - alternate form layout format\n  @Input() formData: any; // Alternate input for form data\n\n  @Input() ngModel: any; // Alternate input for Angular forms\n\n  @Input() language: string; // Language\n\n  // Development inputs, for testing and debugging\n  @Input() loadExternalAssets: boolean; // Load external framework assets?\n  @Input() debug: boolean; // Show debug information?\n\n  @Input()\n  get value(): any {\n    return this.objectWrap ? this.jsf.data['1'] : this.jsf.data;\n  }\n  set value(value: any) {\n    this.setFormValues(value, false);\n  }\n\n  // Outputs\n  @Output() onChanges = new EventEmitter<any>(); // Live unvalidated internal form data\n  @Output() onSubmit = new EventEmitter<any>(); // Complete validated form data\n  @Output() isValid = new EventEmitter<boolean>(); // Is current data valid?\n  @Output() validationErrors = new EventEmitter<any>(); // Validation errors (if any)\n  @Output() formSchema = new EventEmitter<any>(); // Final schema used to create form\n  @Output() formLayout = new EventEmitter<any>(); // Final layout used to create form\n\n  // Outputs for possible 2-way data binding\n  // Only the one input providing the initial form data will be bound.\n  // If there is no inital data, input '{}' to activate 2-way data binding.\n  // There is no 2-way binding if inital data is combined inside the 'form' input.\n  @Output() dataChange = new EventEmitter<any>();\n  @Output() modelChange = new EventEmitter<any>();\n  @Output() formDataChange = new EventEmitter<any>();\n  @Output() ngModelChange = new EventEmitter<any>();\n\n  onChange: Function;\n  onTouched: Function;\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private frameworkLibrary: FrameworkLibraryService,\n    private widgetLibrary: WidgetLibraryService,\n    public jsf: JsonSchemaFormService,\n  ) { }\n\n  private resetScriptsAndStyleSheets() {\n    document.querySelectorAll('.ajsf').forEach(element => element.remove());\n  }\n  private loadScripts() {\n    const scripts = this.frameworkLibrary.getFrameworkScripts();\n    scripts.map(script => {\n      const scriptTag: HTMLScriptElement = document.createElement('script');\n      scriptTag.src = script;\n      scriptTag.type = 'text/javascript';\n      scriptTag.async = true;\n      scriptTag.setAttribute('class', 'ajsf');\n      document.getElementsByTagName('head')[0].appendChild(scriptTag);\n    });\n  }\n  private loadStyleSheets() {\n    const stylesheets = this.frameworkLibrary.getFrameworkStylesheets();\n    stylesheets.map(stylesheet => {\n      const linkTag: HTMLLinkElement = document.createElement('link');\n      linkTag.rel = 'stylesheet';\n      linkTag.href = stylesheet;\n      linkTag.setAttribute('class', 'ajsf');\n      document.getElementsByTagName('head')[0].appendChild(linkTag);\n    });\n  }\n  private loadAssets() {\n    this.resetScriptsAndStyleSheets();\n    this.loadScripts();\n    this.loadStyleSheets();\n  }\n  ngOnInit() {\n    this.updateForm();\n    this.loadAssets();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.updateForm();\n    // Check if there's changes in Framework then load assets if that's the\n    if (changes.framework) {\n      if (!changes.framework.isFirstChange() &&\n        (changes.framework.previousValue !== changes.framework.currentValue)) {\n        this.loadAssets();\n      }\n    }\n  }\n\n  writeValue(value: any) {\n    this.setFormValues(value, false);\n    if (!this.formValuesInput) { this.formValuesInput = 'ngModel'; }\n  }\n\n  registerOnChange(fn: Function) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: Function) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (this.jsf.formOptions.formDisabled !== !!isDisabled) {\n      this.jsf.formOptions.formDisabled = !!isDisabled;\n      this.initializeForm();\n    }\n  }\n\n  updateForm() {\n    if (!this.formInitialized || !this.formValuesInput ||\n      (this.language && this.language !== this.jsf.language)\n    ) {\n      this.initializeForm();\n    } else {\n      if (this.language && this.language !== this.jsf.language) {\n        this.jsf.setLanguage(this.language);\n      }\n\n      // Get names of changed inputs\n      let changedInput = Object.keys(this.previousInputs)\n        .filter(input => this.previousInputs[input] !== this[input]);\n      let resetFirst = true;\n      if (changedInput.length === 1 && changedInput[0] === 'form' &&\n        this.formValuesInput.startsWith('form.')\n      ) {\n        // If only 'form' input changed, get names of changed keys\n        changedInput = Object.keys(this.previousInputs.form || {})\n          .filter(key => !isEqual(this.previousInputs.form[key], this.form[key]))\n          .map(key => `form.${key}`);\n        resetFirst = false;\n      }\n\n      // If only input values have changed, update the form values\n      if (changedInput.length === 1 && changedInput[0] === this.formValuesInput) {\n        if (this.formValuesInput.indexOf('.') === -1) {\n          this.setFormValues(this[this.formValuesInput], resetFirst);\n        } else {\n          const [input, key] = this.formValuesInput.split('.');\n          this.setFormValues(this[input][key], resetFirst);\n        }\n\n        // If anything else has changed, re-render the entire form\n      } else if (changedInput.length) {\n        this.initializeForm();\n        if (this.onChange) { this.onChange(this.jsf.formValues); }\n        if (this.onTouched) { this.onTouched(this.jsf.formValues); }\n      }\n\n      // Update previous inputs\n      Object.keys(this.previousInputs)\n        .filter(input => this.previousInputs[input] !== this[input])\n        .forEach(input => this.previousInputs[input] = this[input]);\n    }\n  }\n\n  setFormValues(formValues: any, resetFirst = true) {\n    if (formValues) {\n      const newFormValues = this.objectWrap ? formValues['1'] : formValues;\n      if (!this.jsf.formGroup) {\n        this.jsf.formValues = formValues;\n        this.activateForm();\n      } else if (resetFirst) {\n        this.jsf.formGroup.reset();\n      }\n      if (this.jsf.formGroup) {\n        this.jsf.formGroup.patchValue(newFormValues);\n      }\n      if (this.onChange) { this.onChange(newFormValues); }\n      if (this.onTouched) { this.onTouched(newFormValues); }\n    } else {\n      this.jsf.formGroup.reset();\n    }\n  }\n\n  submitForm() {\n    const validData = this.jsf.validData;\n    this.onSubmit.emit(this.objectWrap ? validData['1'] : validData);\n  }\n\n  /**\n   * 'initializeForm' function\n   *\n   * - Update 'schema', 'layout', and 'formValues', from inputs.\n   *\n   * - Create 'schemaRefLibrary' and 'schemaRecursiveRefMap'\n   *   to resolve schema $ref links, including recursive $ref links.\n   *\n   * - Create 'dataRecursiveRefMap' to resolve recursive links in data\n   *   and corectly set output formats for recursively nested values.\n   *\n   * - Create 'layoutRefLibrary' and 'templateRefLibrary' to store\n   *   new layout nodes and formGroup elements to use when dynamically\n   *   adding form components to arrays and recursive $ref points.\n   *\n   * - Create 'dataMap' to map the data to the schema and template.\n   *\n   * - Create the master 'formGroupTemplate' then from it 'formGroup'\n   *   the Angular formGroup used to control the reactive form.\n   */\n  initializeForm() {\n    if (\n      this.schema || this.layout || this.data || this.form || this.model ||\n      this.JSONSchema || this.UISchema || this.formData || this.ngModel ||\n      this.jsf.data\n    ) {\n\n      this.jsf.resetAllValues();  // Reset all form values to defaults\n      this.initializeOptions();   // Update options\n      this.initializeSchema();    // Update schema, schemaRefLibrary,\n      // schemaRecursiveRefMap, & dataRecursiveRefMap\n      this.initializeLayout();    // Update layout, layoutRefLibrary,\n      this.initializeData();      // Update formValues\n      this.activateForm();        // Update dataMap, templateRefLibrary,\n      // formGroupTemplate, formGroup\n\n      // Uncomment individual lines to output debugging information to console:\n      // (These always work.)\n      // console.log('loading form...');\n      // console.log('schema', this.jsf.schema);\n      // console.log('layout', this.jsf.layout);\n      // console.log('options', this.options);\n      // console.log('formValues', this.jsf.formValues);\n      // console.log('formGroupTemplate', this.jsf.formGroupTemplate);\n      // console.log('formGroup', this.jsf.formGroup);\n      // console.log('formGroup.value', this.jsf.formGroup.value);\n      // console.log('schemaRefLibrary', this.jsf.schemaRefLibrary);\n      // console.log('layoutRefLibrary', this.jsf.layoutRefLibrary);\n      // console.log('templateRefLibrary', this.jsf.templateRefLibrary);\n      // console.log('dataMap', this.jsf.dataMap);\n      // console.log('arrayMap', this.jsf.arrayMap);\n      // console.log('schemaRecursiveRefMap', this.jsf.schemaRecursiveRefMap);\n      // console.log('dataRecursiveRefMap', this.jsf.dataRecursiveRefMap);\n\n      // Uncomment individual lines to output debugging information to browser:\n      // (These only work if the 'debug' option has also been set to 'true'.)\n      if (this.debug || this.jsf.formOptions.debug) {\n        const vars: any[] = [];\n        // vars.push(this.jsf.schema);\n        // vars.push(this.jsf.layout);\n        // vars.push(this.options);\n        // vars.push(this.jsf.formValues);\n        // vars.push(this.jsf.formGroup.value);\n        // vars.push(this.jsf.formGroupTemplate);\n        // vars.push(this.jsf.formGroup);\n        // vars.push(this.jsf.schemaRefLibrary);\n        // vars.push(this.jsf.layoutRefLibrary);\n        // vars.push(this.jsf.templateRefLibrary);\n        // vars.push(this.jsf.dataMap);\n        // vars.push(this.jsf.arrayMap);\n        // vars.push(this.jsf.schemaRecursiveRefMap);\n        // vars.push(this.jsf.dataRecursiveRefMap);\n        this.debugOutput = vars.map(v => JSON.stringify(v, null, 2)).join('\\n');\n      }\n      this.formInitialized = true;\n    }\n  }\n\n  /**\n   * 'initializeOptions' function\n   *\n   * Initialize 'options' (global form options) and set framework\n   * Combine available inputs:\n   * 1. options - recommended\n   * 2. form.options - Single input style\n   */\n  private initializeOptions() {\n    if (this.language && this.language !== this.jsf.language) {\n      this.jsf.setLanguage(this.language);\n    }\n    this.jsf.setOptions({ debug: !!this.debug });\n    let loadExternalAssets: boolean = this.loadExternalAssets || false;\n    let framework: any = this.framework || 'default';\n    if (isObject(this.options)) {\n      this.jsf.setOptions(this.options);\n      loadExternalAssets = this.options.loadExternalAssets || loadExternalAssets;\n      framework = this.options.framework || framework;\n    }\n    if (isObject(this.form) && isObject(this.form.options)) {\n      this.jsf.setOptions(this.form.options);\n      loadExternalAssets = this.form.options.loadExternalAssets || loadExternalAssets;\n      framework = this.form.options.framework || framework;\n    }\n    if (isObject(this.widgets)) {\n      this.jsf.setOptions({ widgets: this.widgets });\n    }\n    this.frameworkLibrary.setLoadExternalAssets(loadExternalAssets);\n    this.frameworkLibrary.setFramework(framework);\n    this.jsf.framework = this.frameworkLibrary.getFramework();\n    if (isObject(this.jsf.formOptions.widgets)) {\n      for (const widget of Object.keys(this.jsf.formOptions.widgets)) {\n        this.widgetLibrary.registerWidget(widget, this.jsf.formOptions.widgets[widget]);\n      }\n    }\n    if (isObject(this.form) && isObject(this.form.tpldata)) {\n      this.jsf.setTpldata(this.form.tpldata);\n    }\n  }\n\n  /**\n   * 'initializeSchema' function\n   *\n   * Initialize 'schema'\n   * Use first available input:\n   * 1. schema - recommended / Angular Schema Form style\n   * 2. form.schema - Single input / JSON Form style\n   * 3. JSONSchema - React JSON Schema Form style\n   * 4. form.JSONSchema - For testing single input React JSON Schema Forms\n   * 5. form - For testing single schema-only inputs\n   *\n   * ... if no schema input found, the 'activateForm' function, below,\n   *     will make two additional attempts to build a schema\n   * 6. If layout input - build schema from layout\n   * 7. If data input - build schema from data\n   */\n  private initializeSchema() {\n\n    // TODO: update to allow non-object schemas\n\n    if (isObject(this.schema)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.schema = cloneDeep(this.schema);\n    } else if (hasOwn(this.form, 'schema') && isObject(this.form.schema)) {\n      this.jsf.schema = cloneDeep(this.form.schema);\n    } else if (isObject(this.JSONSchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.schema = cloneDeep(this.JSONSchema);\n    } else if (hasOwn(this.form, 'JSONSchema') && isObject(this.form.JSONSchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.schema = cloneDeep(this.form.JSONSchema);\n    } else if (hasOwn(this.form, 'properties') && isObject(this.form.properties)) {\n      this.jsf.schema = cloneDeep(this.form);\n    } else if (isObject(this.form)) {\n      // TODO: Handle other types of form input\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n\n      // If other types also allowed, render schema as an object\n      if (inArray('object', this.jsf.schema.type)) {\n        this.jsf.schema.type = 'object';\n      }\n\n      // Wrap non-object schemas in object.\n      if (hasOwn(this.jsf.schema, 'type') && this.jsf.schema.type !== 'object') {\n        this.jsf.schema = {\n          'type': 'object',\n          'properties': { 1: this.jsf.schema }\n        };\n        this.objectWrap = true;\n      } else if (!hasOwn(this.jsf.schema, 'type')) {\n\n        // Add type = 'object' if missing\n        if (isObject(this.jsf.schema.properties) ||\n          isObject(this.jsf.schema.patternProperties) ||\n          isObject(this.jsf.schema.additionalProperties)\n        ) {\n          this.jsf.schema.type = 'object';\n\n          // Fix JSON schema shorthand (JSON Form style)\n        } else {\n          this.jsf.JsonFormCompatibility = true;\n          this.jsf.schema = {\n            'type': 'object',\n            'properties': this.jsf.schema\n          };\n        }\n      }\n\n      // If needed, update JSON Schema to draft 6 format, including\n      // draft 3 (JSON Form style) and draft 4 (Angular Schema Form style)\n      this.jsf.schema = convertSchemaToDraft6(this.jsf.schema);\n\n      // Initialize ajv and compile schema\n      this.jsf.compileAjvSchema();\n\n      // Create schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\n      this.jsf.schema = resolveSchemaReferences(\n        this.jsf.schema, this.jsf.schemaRefLibrary, this.jsf.schemaRecursiveRefMap,\n        this.jsf.dataRecursiveRefMap, this.jsf.arrayMap\n      );\n      if (hasOwn(this.jsf.schemaRefLibrary, '')) {\n        this.jsf.hasRootReference = true;\n      }\n\n      // TODO: (?) Resolve external $ref links\n      // // Create schemaRefLibrary & schemaRecursiveRefMap\n      // this.parser.bundle(this.schema)\n      //   .then(schema => this.schema = resolveSchemaReferences(\n      //     schema, this.jsf.schemaRefLibrary,\n      //     this.jsf.schemaRecursiveRefMap, this.jsf.dataRecursiveRefMap\n      //   ));\n    }\n  }\n\n  /**\n   * 'initializeData' function\n   *\n   * Initialize 'formValues'\n   * defulat or previously submitted values used to populate form\n   * Use first available input:\n   * 1. data - recommended\n   * 2. model - Angular Schema Form style\n   * 3. form.value - JSON Form style\n   * 4. form.data - Single input style\n   * 5. formData - React JSON Schema Form style\n   * 6. form.formData - For easier testing of React JSON Schema Forms\n   * 7. (none) no data - initialize data from schema and layout defaults only\n   */\n  private initializeData() {\n    if (hasValue(this.data)) {\n      this.jsf.formValues = cloneDeep(this.data);\n      this.formValuesInput = 'data';\n    } else if (hasValue(this.model)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.formValues = cloneDeep(this.model);\n      this.formValuesInput = 'model';\n    } else if (hasValue(this.ngModel)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.formValues = cloneDeep(this.ngModel);\n      this.formValuesInput = 'ngModel';\n    } else if (isObject(this.form) && hasValue(this.form.value)) {\n      this.jsf.JsonFormCompatibility = true;\n      this.jsf.formValues = cloneDeep(this.form.value);\n      this.formValuesInput = 'form.value';\n    } else if (isObject(this.form) && hasValue(this.form.data)) {\n      this.jsf.formValues = cloneDeep(this.form.data);\n      this.formValuesInput = 'form.data';\n    } else if (hasValue(this.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.formValuesInput = 'formData';\n    } else if (hasOwn(this.form, 'formData') && hasValue(this.form.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.formValues = cloneDeep(this.form.formData);\n      this.formValuesInput = 'form.formData';\n    } else {\n      this.formValuesInput = null;\n    }\n  }\n\n  /**\n   * 'initializeLayout' function\n   *\n   * Initialize 'layout'\n   * Use first available array input:\n   * 1. layout - recommended\n   * 2. form - Angular Schema Form style\n   * 3. form.form - JSON Form style\n   * 4. form.layout - Single input style\n   * 5. (none) no layout - set default layout instead\n   *    (full layout will be built later from the schema)\n   *\n   * Also, if alternate layout formats are available,\n   * import from 'UISchema' or 'customFormItems'\n   * used for React JSON Schema Form and JSON Form API compatibility\n   * Use first available input:\n   * 1. UISchema - React JSON Schema Form style\n   * 2. form.UISchema - For testing single input React JSON Schema Forms\n   * 2. form.customFormItems - JSON Form style\n   * 3. (none) no input - don't import\n   */\n  private initializeLayout() {\n\n    // Rename JSON Form-style 'options' lists to\n    // Angular Schema Form-style 'titleMap' lists.\n    const fixJsonFormOptions = (layout: any): any => {\n      if (isObject(layout) || isArray(layout)) {\n        forEach(layout, (value, key) => {\n          if (hasOwn(value, 'options') && isObject(value.options)) {\n            value.titleMap = value.options;\n            delete value.options;\n          }\n        }, 'top-down');\n      }\n      return layout;\n    };\n\n    // Check for layout inputs and, if found, initialize form layout\n    if (isArray(this.layout)) {\n      this.jsf.layout = cloneDeep(this.layout);\n    } else if (isArray(this.form)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.layout = cloneDeep(this.form);\n    } else if (this.form && isArray(this.form.form)) {\n      this.jsf.JsonFormCompatibility = true;\n      this.jsf.layout = fixJsonFormOptions(cloneDeep(this.form.form));\n    } else if (this.form && isArray(this.form.layout)) {\n      this.jsf.layout = cloneDeep(this.form.layout);\n    } else {\n      this.jsf.layout = ['*'];\n    }\n\n    // Check for alternate layout inputs\n    let alternateLayout: any = null;\n    if (isObject(this.UISchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = cloneDeep(this.UISchema);\n    } else if (hasOwn(this.form, 'UISchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = cloneDeep(this.form.UISchema);\n    } else if (hasOwn(this.form, 'uiSchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = cloneDeep(this.form.uiSchema);\n    } else if (hasOwn(this.form, 'customFormItems')) {\n      this.jsf.JsonFormCompatibility = true;\n      alternateLayout = fixJsonFormOptions(cloneDeep(this.form.customFormItems));\n    }\n\n    // if alternate layout found, copy alternate layout options into schema\n    if (alternateLayout) {\n      JsonPointer.forEachDeep(alternateLayout, (value, pointer) => {\n        const schemaPointer = pointer\n          .replace(/\\//g, '/properties/')\n          .replace(/\\/properties\\/items\\/properties\\//g, '/items/properties/')\n          .replace(/\\/properties\\/titleMap\\/properties\\//g, '/titleMap/properties/');\n        if (hasValue(value) && hasValue(pointer)) {\n          let key = JsonPointer.toKey(pointer);\n          const groupPointer = (JsonPointer.parse(schemaPointer) || []).slice(0, -2);\n          let itemPointer: string | string[];\n\n          // If 'ui:order' object found, copy into object schema root\n          if (key.toLowerCase() === 'ui:order') {\n            itemPointer = [...groupPointer, 'ui:order'];\n\n            // Copy other alternate layout options to schema 'x-schema-form',\n            // (like Angular Schema Form options) and remove any 'ui:' prefixes\n          } else {\n            if (key.slice(0, 3).toLowerCase() === 'ui:') { key = key.slice(3); }\n            itemPointer = [...groupPointer, 'x-schema-form', key];\n          }\n          if (JsonPointer.has(this.jsf.schema, groupPointer) &&\n            !JsonPointer.has(this.jsf.schema, itemPointer)\n          ) {\n            JsonPointer.set(this.jsf.schema, itemPointer, value);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * 'activateForm' function\n   *\n   * ...continued from 'initializeSchema' function, above\n   * If 'schema' has not been initialized (i.e. no schema input found)\n   * 6. If layout input - build schema from layout input\n   * 7. If data input - build schema from data input\n   *\n   * Create final layout,\n   * build the FormGroup template and the Angular FormGroup,\n   * subscribe to changes,\n   * and activate the form.\n   */\n  private activateForm() {\n\n    // If 'schema' not initialized\n    if (isEmpty(this.jsf.schema)) {\n\n      // TODO: If full layout input (with no '*'), build schema from layout\n      // if (!this.jsf.layout.includes('*')) {\n      //   this.jsf.buildSchemaFromLayout();\n      // } else\n\n      // If data input, build schema from data\n      if (!isEmpty(this.jsf.formValues)) {\n        this.jsf.buildSchemaFromData();\n      }\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n\n      // If not already initialized, initialize ajv and compile schema\n      this.jsf.compileAjvSchema();\n\n      // Update all layout elements, add values, widgets, and validators,\n      // replace any '*' with a layout built from all schema elements,\n      // and update the FormGroup template with any new validators\n      this.jsf.buildLayout(this.widgetLibrary);\n\n      // Build the Angular FormGroup template from the schema\n      this.jsf.buildFormGroupTemplate(this.jsf.formValues);\n\n      // Build the real Angular FormGroup from the FormGroup template\n      this.jsf.buildFormGroup();\n    }\n\n    if (this.jsf.formGroup) {\n\n      // Reset initial form values\n      if (!isEmpty(this.jsf.formValues) &&\n        this.jsf.formOptions.setSchemaDefaults !== true &&\n        this.jsf.formOptions.setLayoutDefaults !== true\n      ) {\n        this.setFormValues(this.jsf.formValues);\n      }\n\n      // TODO: Figure out how to display calculated values without changing object data\n      // See http://ulion.github.io/jsonform/playground/?example=templating-values\n      // Calculate references to other fields\n      // if (!isEmpty(this.jsf.formGroup.value)) {\n      //   forEach(this.jsf.formGroup.value, (value, key, object, rootObject) => {\n      //     if (typeof value === 'string') {\n      //       object[key] = this.jsf.parseText(value, value, rootObject, key);\n      //     }\n      //   }, 'top-down');\n      // }\n\n      // Subscribe to form changes to output live data, validation, and errors\n      this.jsf.dataChanges.subscribe(data => {\n        this.onChanges.emit(this.objectWrap ? data['1'] : data);\n        if (this.formValuesInput && this.formValuesInput.indexOf('.') === -1) {\n          this[`${this.formValuesInput}Change`].emit(this.objectWrap ? data['1'] : data);\n        }\n      });\n\n      // Trigger change detection on statusChanges to show updated errors\n      this.jsf.formGroup.statusChanges.subscribe(() => this.changeDetector.markForCheck());\n      this.jsf.isValidChanges.subscribe(isValid => this.isValid.emit(isValid));\n      this.jsf.validationErrorChanges.subscribe(err => this.validationErrors.emit(err));\n\n      // Output final schema, final layout, and initial data\n      this.formSchema.emit(this.jsf.schema);\n      this.formLayout.emit(this.jsf.layout);\n      this.onChanges.emit(this.objectWrap ? this.jsf.data['1'] : this.jsf.data);\n\n      // If validateOnRender, output initial validation and any errors\n      const validateOnRender =\n        JsonPointer.get(this.jsf, '/formOptions/validateOnRender');\n      if (validateOnRender) { // validateOnRender === 'auto' || true\n        const touchAll = (control) => {\n          if (validateOnRender === true || hasValue(control.value)) {\n            control.markAsTouched();\n          }\n          Object.keys(control.controls || {})\n            .forEach(key => touchAll(control.controls[key]));\n        };\n        touchAll(this.jsf.formGroup);\n        this.isValid.emit(this.jsf.isValid);\n        this.validationErrors.emit(this.jsf.ajvErrors);\n      }\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'no-framework',\n  templateUrl: './no-framework.component.html',\n})\nexport class NoFrameworkComponent {\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n}\n","import { Injectable } from '@angular/core';\nimport { Framework } from './framework';\nimport { NoFrameworkComponent } from './no-framework.component';\n// No framework - plain HTML controls (styles from form layout only)\n\n@Injectable()\nexport class NoFramework extends Framework {\n  name = 'no-framework';\n\n  framework = NoFrameworkComponent;\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'hidden-widget',\n  template: `\n    <input *ngIf=\"boundControl\"\n      [formControl]=\"formControl\"\n      [id]=\"'control' + layoutNode?._id\"\n      [name]=\"controlName\"\n      type=\"hidden\">\n    <input *ngIf=\"!boundControl\"\n      [disabled]=\"controlDisabled\"\n      [name]=\"controlName\"\n      [id]=\"'control' + layoutNode?._id\"\n      type=\"hidden\"\n      [value]=\"controlValue\">`,\n})\nexport class HiddenComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tab-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <root-widget\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [layout]=\"layoutNode.items\"></root-widget>\n    </div>`,\n})\nexport class TabComponent implements OnInit {\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n/**\n * OrderableDirective\n *\n * Enables array elements to be reordered by dragging and dropping.\n *\n * Only works for arrays that have at least two elements.\n *\n * Also detects arrays-within-arrays, and correctly moves either\n * the child array element or the parent array element,\n * depending on the drop targert.\n *\n * Listeners for movable element being dragged:\n * - dragstart: add 'dragging' class to element, set effectAllowed = 'move'\n * - dragover: set dropEffect = 'move'\n * - dragend: remove 'dragging' class from element\n *\n * Listeners for stationary items being dragged over:\n * - dragenter: add 'drag-target-...' classes to element\n * - dragleave: remove 'drag-target-...' classes from element\n * - drop: remove 'drag-target-...' classes from element, move dropped array item\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[orderable]',\n})\nexport class OrderableDirective implements OnInit {\n  arrayLayoutIndex: string;\n  element: any;\n  overParentElement = false;\n  overChildElement = false;\n  @Input() orderable: boolean;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private elementRef: ElementRef,\n    private jsf: JsonSchemaFormService,\n    private ngZone: NgZone\n  ) { }\n\n  ngOnInit() {\n    if (this.orderable && this.layoutNode && this.layoutIndex && this.dataIndex) {\n      this.element = this.elementRef.nativeElement;\n      this.element.draggable = true;\n      this.arrayLayoutIndex = 'move:' + this.layoutIndex.slice(0, -1).toString();\n\n      this.ngZone.runOutsideAngular(() => {\n\n        // Listeners for movable element being dragged:\n\n        this.element.addEventListener('dragstart', (event) => {\n          event.dataTransfer.effectAllowed = 'move';\n          event.dataTransfer.setData('text', '');\n          // Hack to bypass stupid HTML drag-and-drop dataTransfer protection\n          // so drag source info will be available on dragenter\n          const sourceArrayIndex = this.dataIndex[this.dataIndex.length - 1];\n          sessionStorage.setItem(this.arrayLayoutIndex, sourceArrayIndex + '');\n        });\n\n        this.element.addEventListener('dragover', (event) => {\n          if (event.preventDefault) { event.preventDefault(); }\n          event.dataTransfer.dropEffect = 'move';\n          return false;\n        });\n\n        // Listeners for stationary items being dragged over:\n\n        this.element.addEventListener('dragenter', (event) => {\n          // Part 1 of a hack, inspired by Dragster, to simulate mouseover and mouseout\n          // behavior while dragging items - http://bensmithett.github.io/dragster/\n          if (this.overParentElement) {\n            return this.overChildElement = true;\n          } else {\n            this.overParentElement = true;\n          }\n\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          if (sourceArrayIndex !== null) {\n            if (this.dataIndex[this.dataIndex.length - 1] < +sourceArrayIndex) {\n              this.element.classList.add('drag-target-top');\n            } else if (this.dataIndex[this.dataIndex.length - 1] > +sourceArrayIndex) {\n              this.element.classList.add('drag-target-bottom');\n            }\n          }\n        });\n\n        this.element.addEventListener('dragleave', (event) => {\n          // Part 2 of the Dragster hack\n          if (this.overChildElement) {\n            this.overChildElement = false;\n          } else if (this.overParentElement) {\n            this.overParentElement = false;\n          }\n\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          if (!this.overParentElement && !this.overChildElement && sourceArrayIndex !== null) {\n            this.element.classList.remove('drag-target-top');\n            this.element.classList.remove('drag-target-bottom');\n          }\n        });\n\n        this.element.addEventListener('drop', (event) => {\n          this.element.classList.remove('drag-target-top');\n          this.element.classList.remove('drag-target-bottom');\n          // Confirm that drop target is another item in the same array as source item\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          const destArrayIndex = this.dataIndex[this.dataIndex.length - 1];\n          if (sourceArrayIndex !== null && +sourceArrayIndex !== destArrayIndex) {\n            // Move array item\n            this.jsf.moveArrayItem(this, +sourceArrayIndex, destArrayIndex);\n          }\n          sessionStorage.removeItem(this.arrayLayoutIndex);\n          return false;\n        });\n\n      });\n    }\n  }\n}\n","import { AddReferenceComponent } from './add-reference.component';\nimport { ButtonComponent } from './button.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { CheckboxesComponent } from './checkboxes.component';\nimport { FileComponent } from './file.component';\nimport { HiddenComponent } from './hidden.component';\nimport { InputComponent } from './input.component';\nimport { MessageComponent } from './message.component';\nimport { NoneComponent } from './none.component';\nimport { NumberComponent } from './number.component';\nimport { OneOfComponent } from './one-of.component';\nimport { RadiosComponent } from './radios.component';\nimport { RootComponent } from './root.component';\nimport { SectionComponent } from './section.component';\nimport { SelectComponent } from './select.component';\nimport { SelectFrameworkComponent } from './select-framework.component';\nimport { SelectWidgetComponent } from './select-widget.component';\nimport { SubmitComponent } from './submit.component';\nimport { TabComponent } from './tab.component';\nimport { TabsComponent } from './tabs.component';\nimport { TemplateComponent } from './template.component';\nimport { TextareaComponent } from './textarea.component';\n\nexport const BASIC_WIDGETS = [\n  AddReferenceComponent, OneOfComponent, ButtonComponent, CheckboxComponent,\n  CheckboxesComponent, FileComponent, HiddenComponent, InputComponent,\n  MessageComponent, NoneComponent, NumberComponent, RadiosComponent,\n  RootComponent, SectionComponent, SelectComponent, SelectFrameworkComponent,\n  SelectWidgetComponent, SubmitComponent, TabComponent, TabsComponent,\n  TemplateComponent, TextareaComponent\n];\n\nexport { AddReferenceComponent } from './add-reference.component';\nexport { OneOfComponent } from './one-of.component';\nexport { ButtonComponent } from './button.component';\nexport { CheckboxComponent } from './checkbox.component';\nexport { CheckboxesComponent } from './checkboxes.component';\nexport { FileComponent } from './file.component';\nexport { HiddenComponent } from './hidden.component';\nexport { InputComponent } from './input.component';\nexport { MessageComponent } from './message.component';\nexport { NoneComponent } from './none.component';\nexport { NumberComponent } from './number.component';\nexport { OrderableDirective } from './orderable.directive';\nexport { RadiosComponent } from './radios.component';\nexport { RootComponent } from './root.component';\nexport { SectionComponent } from './section.component';\nexport { SelectComponent } from './select.component';\nexport { SelectFrameworkComponent } from './select-framework.component';\nexport { SelectWidgetComponent } from './select-widget.component';\nexport { SubmitComponent } from './submit.component';\nexport { TabComponent } from './tab.component';\nexport { TabsComponent } from './tabs.component';\nexport { TemplateComponent } from './template.component';\nexport { TextareaComponent } from './textarea.component';\nexport { WidgetLibraryService } from './widget-library.service';\n","import { BASIC_WIDGETS } from './index';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { OrderableDirective } from './orderable.directive';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  declarations: [...BASIC_WIDGETS, OrderableDirective],\n  exports: [...BASIC_WIDGETS, OrderableDirective],\n  entryComponents: [...BASIC_WIDGETS]\n})\nexport class WidgetLibraryModule {\n}\n","import { CommonModule } from '@angular/common';\nimport { Framework } from './framework';\nimport { NgModule } from '@angular/core';\nimport { NoFramework } from './no.framework';\nimport { NoFrameworkComponent } from './no-framework.component';\nimport { WidgetLibraryModule } from '../widget-library/widget-library.module';\n\n// No framework - plain HTML controls (styles from form layout only)\n\n@NgModule({\n  imports: [CommonModule, WidgetLibraryModule],\n  declarations: [NoFrameworkComponent],\n  exports: [NoFrameworkComponent],\n  providers: [\n    { provide: Framework, useClass: NoFramework, multi: true }\n  ],\n  entryComponents: [NoFrameworkComponent]\n})\nexport class NoFrameworkModule { }\n","import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\nimport { NoFrameworkModule } from './framework-library/no-framework.module';\nimport { WidgetLibraryModule } from './widget-library/widget-library.module';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule,\n    WidgetLibraryModule, NoFrameworkModule\n  ],\n  declarations: [JsonSchemaFormComponent],\n  exports: [JsonSchemaFormComponent, WidgetLibraryModule]\n})\nexport class JsonSchemaFormModule {\n}\n","import { longDays, longMonths, shortDays, shortMonths } from '../locale-dates/en-US';\n\n/**\n *\n * @param date\n * @param options\n * return a date string which follows the JSON schema standard\n */\nexport function dateToString(date: string | Date, options: any = {}): string {\n  const dateFormat = options.dateFormat || 'YYYY-MM-DD';\n  // TODO: Use options.locale to change default format and names\n  // const locale = options.locale || 'en-US';\n  date = new Date(date || undefined);\n  if (!date.getDate()) { return null; }\n  const year = date.getFullYear().toString();\n  const month = date.getMonth();\n  const day = date.getDate();\n  const dayOfWeek = date.getDay();\n  return dateFormat\n    .replace(/S/g, getOrdinal(day))\n    .replace(/YYYY/g, year)\n    .replace(/YY/g, year.slice(-2))\n    .replace(/MMMM/g, longMonths[month])\n    .replace(/MMM/g, shortMonths[month])\n    .replace(/MM/g, ('0' + (month + 1)).slice(-2))\n    .replace(/M/g, month + 1)\n    .replace(/DDDD/g, longDays[dayOfWeek])\n    .replace(/DDD/g, shortDays[dayOfWeek])\n    .replace(/DD/g, ('0' + day).slice(-2))\n    .replace(/D/g, day);\n}\n\nexport function getOrdinal(day: number): string {\n  if (day > 3 && day < 21) { return 'th'; }\n  switch (day % 10) {\n    case 1: return 'st';\n    case 2: return 'nd';\n    case 3: return 'rd';\n    default: return 'th';\n  }\n}\n"]}